RFCトランス
個人情報保護方針
連絡先
イチジク
@ tex2e
5104
RFC 5104-フィードバック付きのRTPオーディオビジュアルプロファイル内のコーデック制御メッセージ（AVPF）
URL：https://tools.ietf.org/html/rfc5104
タイトル：RFC 5104-フィードバック付きRTPオーディオビジュアルプロファイルのコーデック制御メッセージ（AVPF）
翻訳編集：自動生成
ネットワークワーキンググループS.ウェンガー
コメントの要求：5104 U.チャンドラ
カテゴリ：Standards Track Nokia
                                                           M.ヴェスタールンド
                                                               B.バーマン
                                                                エリクソン
                                                           2008年2月
        
フィードバック付きのRTPオーディオビジュアルプロファイルのコーデック制御メッセージ（AVPF）

このメモのステータス

このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します. このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の最新版を参照してください. このメモの配布は無制限です. 

概要

このドキュメントでは、フィードバック付きの視聴覚プロファイル（AVPF）で定義されたメッセージに対するいくつかの拡張を指定します. これらは主に、集中型マルチポイント機能が使用されている会話型マルチメディアシナリオで役立ちます. ただし、小規模なマルチキャスト環境やポイントツーポイントコールでも使用できるものもあります. 

説明されている拡張機能は、ITU-T勧告に関連するメッセージです. H.271ビデオバックチャネル、完全なイントラリクエスト、一時的な最大メディアストリームのビットレート、および時間と空間のトレードオフ. 

目次

   1.はじめに............................................... ..... 4
   2.定義............................................... ...... 5
      2.1. 用語集................................................................. ..5
      2.2. 用語................................................................ 5
      2.3. トポロジ................................................................. 8
   3.動機......................................................... ....... 8
      3.1. ユースケース................................................ ..9
      3.2. メディアパスの使用................................................ 11
      3.3. AVPFの使用................................................................ 11
           3.3.1. 信頼性.................................................. 12
      3.4. マルチキャスト................................................................. 12
      3.5. フィードバックメッセージ................................................... 12
           3.5.1. Full Intra Request Command......................... 12
                  3.5.1.1. 信頼性............................... 13
           3.5.2. 時間的空間的トレードオフリクエストと
                  通知................................................................ 14
                  3.5.2.1. ポイントツーポイント............................ 15
                  3.5.2.2. ポイントツーマルチポイントの使用
                           マルチキャストまたはトランスレータ................................. 15
                  3.5.2.3. RTPミキサーを使用したポイントツーマルチポイント....... 15
                  3.5.2.4. 信頼性............................... 16
           3.5.3. H.271ビデオバックチャネルメッセージ................... 16
                  3.5.3.1. 信頼性............................... 19
           3.5.4. 一時的な最大メディアストリームビットレート
                  リクエストと通知........................... 19
                  3.5.4.1. TMMBR ..21を使用したメディアレシーバーの動作
                  3.5.4.2. 電流を確立するためのアルゴリズム
                           制限事項......................................... 23
                  3.5.4.3. ミキサーベースでのTMMBRの使用
                           多点操作................................ 29
                  3.5.4.4. ポイントツーマルチポイントでのTMMBRの使用
                           マルチキャストまたはトランスレータ................................. 30
                  3.5.4.5. ポイントツーポイント操作でのTMMBRの使用..31
                  3.5.4.6. 信頼性............................... 31
   4. RTCP受信者レポート拡張機能................................ 32
      4.1. 拡張メカニズムの設計原則.............. 32
      4.2. トランスポート層フィードバックメッセージ......................... 33
           4.2.1. 一時的な最大メディアストリームビットレート
                  リクエスト（TMMBR）.................................... 34
                  4.2.1.1. メッセージフォーマット............................ 34
                  4.2.1.2. セマンティクス................................. 35
                  4.2.1.3. タイミング規則.............................. 39
                  4.2.1.4. 翻訳者とミキサーでの取り扱い........ 39
           4.2.2. 一時的な最大メディアストリームビットレート
                  通知（TMMBN）............................... 39
                  4.2.2.1. メッセージフォーマット............................ 39
        
                  4.2.2.2. セマンティクス................................. 40
                  4.2.2.3. タイミング規則.............................. 41
                  4.2.2.4. 翻訳者とミキサーによる処理........ 41
      4.3. ペイロード固有のフィードバックメッセージ........................ 41
           4.3.1. Full Intra Request（FIR）........................... 42
                  4.3.1.1. メッセージフォーマット............................ 42
                  4.3.1.2. セマンティクス................................. 43
                  4.3.1.3. タイミング規則.............................. 44
                  4.3.1.4. ミキサーおよびFIRメッセージの処理
                           翻訳者............................... 44
                  4.3.1.5. 備考................................... 44
           4.3.2. 時空間トレードオフ要求（TSTR）.......... 45
                  4.3.2.1. メッセージフォーマット............................ 46
                  4.3.2.2. セマンティクス................................. 46
                  4.3.2.3. タイミング規則.............................. 47
                  4.3.2.4. ミキサーでのメッセージの処理
                           翻訳者............................... 47
                  4.3.2.5. 備考................................... 47
           4.3.3. 時空間的トレードオフ通知（TSTN）..... 48
                  4.3.3.1. メッセージフォーマット............................ 48
                  4.3.3.2. セマンティクス................................. 49
                  4.3.3.3. タイミング規則.............................. 49
                  4.3.3.4. ミキサーおよびTSTNの取り扱い
                           翻訳者............................... 49
                  4.3.3.5. 備考................................... 49
           4.3.4. H.271ビデオバックチャネルメッセージ（VBCM）............ 50
                  4.3.4.1. メッセージフォーマット............................ 50
                  4.3.4.2. セマンティクス................................................. 51
                  4.3.4.3. タイミング規則.............................. 52
                  4.3.4.4. ミキサーでのメッセージの処理または
                           翻訳者............................... 52
                  4.3.4.5. 備考................................... 52
   5.輻輳制御............................................. 52
   6.セキュリティに関する考慮事項........................................ 53
   7. SDPの定義........................................................ ..54
      7.1. rtcp-fb属性の拡張........................ 54
      7.2. オファーとアンサー.................................................................. 55
      7.3. 例................................................................. .56
   8. IANAの考慮事項............................................ 58
   9.貢献者............................................... .... 60
   10.謝辞.............................................. 60
   11.参考資料......................................................... ..... 60
      11.1 規範的な参考文献..................................... 60
      11.2 有益な参照................................... 61
        
1.はじめに
フィードバック付きの視聴覚プロファイル（AVPF）[RFC4585]が開発されたとき、集中型マルチポイント制御のないポイントツーポイントおよび小さなマルチポイントシナリオの効率的なサポートに重点が置かれました. ただし、実際には、多くの小規模なマルチポイント会議は、マルチポイントコントロールユニット（MCU）と呼ばれるデバイスを使用して動作します. 会話型ビデオ会議業界の長年の経験から、集中型マルチポイント会議を効率的にサポートするには、いくつかの追加フィードバックメッセージが必要であることが示唆されています. 一部のメッセージには、集中型マルチポイントを超えるアプリケーションがあり、これはメッセージの説明に示されています. これは、ITU-T Rec. H.271 [H.271]ビデオバックチャネルメッセージのビット文字列. 

リアルタイム転送プロトコル（RTP）[RFC3550]の用語では、MCUはミキサーとトランスレータで構成されます. ほとんどのMCUには、シグナリングサポートも含まれています. このメモの作成中に、ミキサー、トランスレータ、MCUなどの用語の使用に関連して、コミュニティにかなりの混乱があることがわかりました. これらの懸念に応えて、業界に実際に関連する多くのトポロジーが特定されましたが、[RFC3550]で十分に詳細に文書化されていません. これらのトポロジーは[RFC5117]に文書化されており、このメモを理解するには、[RFC5117]の以前または並行した研究が必要です. 

ここで定義されているメッセージの一部は転送のみです. メッセージが受信されたことをメッセージエミッターに明示的に通知したり、メッセージレシーバーのアクションを示したりする必要はありません. 他のメッセージは応答を必要とし、制御目的に役立つと見なすことができる双方向通信モデルにつながります. ただし、RTP制御プロトコル（RTCP）を一般化された制御プロトコルに開放することは、このメモの意図ではありません. 言及されたすべてのメッセージには、遅延の増加に伴い値が減少するという意味で、比較的厳しいリアルタイム制約があります. これにより、Session Initiation Protocol（SIP）[RFC3261]などの従来の制御プロトコル手段の使用は、同じ目的で使用する場合には望ましくありません. このため、「メディアコントロールのXMLスキーマ」[XML-MC]ではなく、このソリューションが推奨されます. SIP情報を使用して、このメモで定義されているものと同様のセマンティクスでXMLメッセージを転送します. さらに、すべてのメッセージは非常にシンプルな形式で、RTP / RTCP送信側/受信側で簡単に処理できます. 最後に、そして最も重要なことに、すべてのメッセージは、それらが関連付けられているRTPストリームにのみ関連し、通信システムの他のプロパティには関連しません. 特に、それらのいずれも、セッションが通過するアクセスリンクのプロパティに関連していません. 

2.定義
2.1. 用語集
AIMD-加法増加乗法減少AVPF-RTCPベースのフィードバックFCIの拡張RTPプロファイル-フィードバック制御情報[RFC4585] FEC-前方誤り訂正FIR-Full Intra RequestMCU-マルチポイント制御ユニットMPEG-ムービングピクチャーエキスパートグループPLI-画像損失インジケーションPR-パケットレートQP-量子化パラメータRTT-ラウンドトリップ時間SSRC-同期ソースTMMBN-一時的な最大メディアストリームビットレート通知TMMBR-一時的な最大メディアストリームビットレート要求TSTN-時間的空間トレードオフ通知TSTR-時間的空間トレードオフリクエストVBCM-ビデオバックチャネルメッセージ

2.2. 用語
このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は、 RFC 2119 [RFC2119]で説明されているように解釈されます. 

メッセージ：この仕様で定義されている、次のいずれかのタイプのRTCPフィードバックメッセージ[RFC4585]：

リクエスト：確認が必要なメッセージ

コマンド：受信者にアクションを強制するメッセージ

表示：状況を報告するメッセージ

通知：イベントが発生したことを通知するメッセージ. 通知は通常、リクエストへの応答として生成されます. 

「通知」を除いて、この用語はITU-T勧告に準拠していることに注意してください. H.245 [H245]. 

デコーダーリフレッシュポイント：1つ以上のRTPパケットにパケット化されたビットストリング. デコーダーを既知の状態に完全にリセットします. 

「ハード」デコーダリフレッシュポイントの例は、H.261、H.263、MPEG-1、MPEG-2、およびMPEG-4パート2のイントラピクチャと、H.264のインスタントデコーダリフレッシュ（IDR）ピクチャです. 「段階的」なデコーダーの更新ポイントも使用できます. たとえば[AVC]を参照してください. 「ハード」デコーダーと「段階的」デコーダーの両方のリフレッシュポイントはこの仕様の範囲内で許容可能ですが、ほとんどの場合、ユーザーエクスペリエンスは「ハード」デコーダーのリフレッシュポイントを使用することでメリットを得られます. 

デコーダーの更新ポイントには、インバンドで伝達される画像レイヤー（またはビデオ圧縮規格に応じて同等）の上にあるすべてのヘッダー情報も含まれます. たとえば、H.264では、デコーダーの更新ポイントに、次のスライス/データパーティションのNALユニットのデコードに必要なパラメーターセットを生成するパラメーターセットネットワーク適応層（NAL）ユニットが含まれています（これらはバンド外には伝達されません）. 

デコード：メディアストリームを再構築する操作. 

レンダリング：再構築されたメディアストリーム（の一部）をユーザーに提示する操作. 

ストリームシンニング：メディアストリームから一部のパケットを削除する操作. ストリームの細線化は、メディア認識型であることが好ましく、再生品質との関連性が高い順にメディアパケットが削除されることを意味します. ただし、メディア対応のストリーム間引きを採用している場合でも、ほとんどのメディアストリームは、間引きのレベルを上げるとすぐに品質を失います. メディアを認識しないストリーム間引きは、品質の低下をさらに悪化させます. トランスコーディングとは対照的に、ストリームの間引きは通常、計算量の少ない操作と見なされます. 

メディア：コーデック制御メッセージが適用される（コーデックデータを運ぶ）フォワードRTPパケットストリームのコンテンツを識別するために（ビットレート、ストリーム、送信者などの用語と組み合わせて）しばしば使用されます. 

メディアストリーム：メディアを運ぶ単一の同期ソース（SSRC）でラベル付けされたRTPパケットのストリーム（および場合によっては、再送信や転送エラー修正（FEC）情報などの修復情報）. 

合計メディアビットレート：メディアストリームで転送される1秒あたりの合計ビット数. オブザーバーが選択したプロトコルレイヤーで測定され、適切なタイムスケールで平均化されます. 長さはアプリケーションによって異なります. 一般に、メディアセンダーとメディアレシーバーは、同じストリームに対して異なる合計メディアビットレートを監視します. これは、最初に異なる参照プロトコルレイヤーを選択した可能性があるためです. 次に、伝送パスに沿ったパケットごとのオーバーヘッドが変化したためです. ビットレート平均化の目標は、スケジューリングまたはリンク層のパケット化効果によって導入された非常に短いタイムスケール（たとえば、100ミリ秒未満）でバースト性を無視できるようにすることです. 

最大合計メディアビットレート：特定のレシーバーの特定のメディアストリームとその選択されたプロトコルレイヤーの合計メディアビットレートの上限. この値は、受信したメディアストリームでは測定できないことに注意してください. 代わりに、サービス品質（QoS）ネゴシエーションやローカルリソースの制限など、他の方法で計算または決定する必要があります. また、この値は（アプリケーションにとって妥当なタイムスケールでの）平均値であり、メディアストリーム内のパケットに表示される瞬間的なビットレートとは異なる場合があることに注意してください. 

オーバーヘッド：メディアデータを含むパケットを送信者から受信者に、アプリケーションレイヤーから事前定義されたプロトコルレベルまで（たとえば、IPヘッダーまで）伝達するために必要なすべてのプロトコルヘッダー情報. オーバーヘッドには、たとえば、IP、UDP、およびRTPヘッダー、任意のレイヤー2ヘッダー、任意の貢献ソース（CSRC）、RTPパディング、およびRTPヘッダー拡張が含まれます. オーバーヘッドは、RTPペイロードヘッダーとペイロード自体を除外します. 

正味のメディアビットレート：メディアストリームによって伝送されるビットレートで、オーバーヘッドを差し引いたもの. つまり、エンコードされたメディア、適用可能なペイロードヘッダー、およびRTPパケットに配置された直接関連付けられたメタペイロード情報によって考慮される1秒あたりのビット数です. 後者の典型的な例は、RFC 2198 [RFC2198]の使用によって提供される冗長データです. 総メディアビットとは異なり、

レートでは、メディアの混合または変換が行われない限り、正味のメディアビットレートはメディアセンダーとメディアレシーバーで同じ値になります. 

特定のオブザーバの場合、メディアストリームの合計メディアビットレートは、上記で定義した正味のメディアビットレートとパケットごとのオーバーヘッドの合計にパケットレートを掛けたものに等しくなります. 

フィージブルリージョン：所定のメディアセンダーに受信した一時最大メディアストリームビットレートリクエスト（TMMBR）メッセージによって与えられた最大メディアビットレートの制限を超えない、パケットレートとネットメディアビットレートのすべての組み合わせのセット. 新しいTMMBRメッセージが受信されると、実行可能領域は変化します. 

境界セット：特定のメディアセンダーで受信されたすべてのTMMBRタプルのセットで、そのメディアセンダーの実現可能領域を定義します. メディアセンダーは、セクション3.5.4.2のようなアルゴリズムを使用して現在の境界セットを決定または反復的に近似し、そのセットをメディアレシーバーに一時最大メディアストリームビットレート通知（TMMBN）メッセージで報告します. 

2.3. トポロジー
詳細については、[RFC5117]を参照してください. このメモ全体で参照されているトポロジには、次のようにラベルが付けられています（[RFC5117]と一貫性があります）. 

   トポポイントツーポイント. . . . . ポイントツーポイント通信
   トポマルチキャスト. . . . . . . マルチキャスト通信
   Topo-Translator. . . . . . . 翻訳者ベース
   トポミキサー. . . . . . . . . ミキサーベース
   Topo-RTP-switch-MCU. . . . . RTPストリームスイッチングMCU
   Topo-RTCP-terminating-MCU. . ミキサーがRTCPを終了しています
        
3.動機
このセクションでは、さまざまなビデオおよびメディア制御メッセージの動機と使用法について説明します. ビデオ制御メッセージは長い間議論されており、要件ドキュメントが作成されました[Basso]. そのドキュメントは期限切れです. ただし、動機と要件を提供するために、関連するセクションを引用しています. 

3.1. ユースケース
提案されたフィードバックメッセージには、いくつかの可能な使用法があります. まず、Basso et al. の使用例を見てみましょう. 【バッソ】提案. いくつかのユースケースが再編成され、コメントが追加されました. 

1. RTPビデオミキサーは、複数のエンコードされたビデオソースを単一のエンコードされたビデオストリームに構成します. ビデオソースが追加されるたびに、RTPミキサーは、ビデオソースからのデコーダリフレッシュポイントを要求して、新しいビデオソースからのデータが占める混合画像の空間領域で破損のない予測チェーンを開始する必要があります. 

2. RTPビデオミキサーは、会議の参加者から複数のエンコードされたRTPビデオストリームを受信し、出力RTPストリームに含めるストリームの1つを動的に選択します. ビットストリームの変更時に（音声のアクティブ化やユーザーインターフェイスなどの手段によって決定されます）、ピクチャ間予測の参照データとして関連のないコンテンツが使用されないようにするために、ミキサーはリモートソースからデコーダーの更新ポイントを要求します. デコーダーリフレッシュポイントを要求した後、ビデオミキサーは現在のRTPストリームの配信を停止し、デコーダーリフレッシュポイントに属するデータを検出するまで、新しいソースからのRTPストリームを監視します. その時点で、RTPミキサーは、新しく選択されたストリームをレシーバーに転送し始めます. 

3.アプリケーションは、時間分解能と空間分解能の望ましいトレードオフが変更されたことをリモートエンコーダーに通知する必要があります. たとえば、あるユーザーはより高いフレームレートとより低い空間品質を好み、別のユーザーはその逆を好みます. この選択もコンテンツに大きく依存します. 現在の多くのビデオ会議システムは、ユーザーインターフェイスで、通常はスライダーの形でこの選択を行うためのメカニズムを提供しています. このメカニズムは、ポイントツーポイントの集中型マルチポイントおよび非集中型マルチポイントの使用に役立ちます. 

4. Bassoドキュメントのユースケース4は、AVPF [RFC4585]で定義されているPicture Loss Indication（PLI）にのみ適用され、ここでは再現されません. 

5. Bassoドキュメントのユースケース5は、「フリーズピクチャリクエスト」と呼ばれるメカニズムに関連しています. 信頼できないフォワードRTCPチャネルを介して画像のフリーズ要求を送信すると、問題が発生することが確認されています. したがって、このメモには画像のフリーズ要求は含まれておらず、ユースケースの議論はここでは再現されていません. 

6.ビデオミキサーは、参加者に送信する受信ビデオストリームの1つを動的に選択し、ストリームのトランスレーティングを最小限に抑えながら、可能な限り最高のビットレートをすべての参加者に提供しようとします. これを実現する1つの方法は、各エンドポイントによって受け入れられ、ミキサーによって使用されるコールアドミッションメソッドによって受け入れられる最大ビットレートを使用して、エンドポイントとのセッションをセットアップすることです. 最大メディアストリームのビットレートをセッションのセットアップ中にネゴシエートされたものよりも低くするコマンドを使用することにより、ミキサーはエンドポイントから送信される最大ビットレートを、受け入れられるすべてのビットレートの最低値に下げることができます. エンドポイントの参加と離脱、またはネットワークの輻輳が原因で最低許容ビットレートが変化すると、ミキサーはエンドポイントが新しい値に一致するようにストリームを送信できる制限を調整できます. 

バッソ他が描いた絵は、私たちが予想するほとんどのアプリケーションをカバーしています. ただし、次の2つの使用例でリストを拡張したいと思います. 

7.現在展開されている輻輳制御アルゴリズム（AIMDおよびTCPフレンドリーレートコントロール（TFRC）[RFC3448]）は、送信するものがある限り、追加の利用可能な容量をプローブします. パケット損失を輻輳の指標として使用する輻輳制御アルゴリズムでは、このプローブにより、パケット損失と遅延の増加により、一般にメディア品質が低下します（多くの場合、歪みがメディアを使用できなくなるほど大きくなります）. 

多くの展開シナリオ、特にセルラーシナリオでは、ボトルネックリンクがラストホップリンクであることがよくあります. そのセルラーリンクには、通常、ある種のQoSネゴシエーションもあり、セルラーデバイスは、この最後のホップで利用可能な最大ビットレートを学習できます. このリンクの背後にあるメディアレシーバーは、ほとんどの場合（すべてではない）、現在受信している各メディアストリームで使用可能なビットレートの少なくとも上限を計算できます. これがどのように行われるかは実装の詳細であり、ここでは説明しません. さまざまなメディアストリームの送信パーティに対して利用可能な最大ビットレートを示すことは、そのパーティが既知のハードリミットを超えるこのストリームの帯域幅をプローブするのを防ぐのに役立ちます. セルラーまたはその他のモバイルデバイスの場合、各ストリームの既知の利用可能なビットレート（リンクのビットレートから推定）は急速に変化する可能性があります. 

8.エラー回復ツールとしての参照画像選択（RPS）の使用は、1997年にNEWPRED [NEWPRED]として導入され、現在広く展開されています. RPSが使用されている場合、簡単に言うと、受信者はフィードバックメッセージを送信者に送信して、将来の予測に使用する必要がある参照画像を示すことができます. （[NEWPRED]は他の形式のフィードバックにも言及しています. ）AVPFにはそのようなメッセージを伝達するためのメカニズムが含まれていますが、どのコーデックに対してどの構文に従ってメッセージが準拠するかを指定していません. 最近、ITU-TはRec. H.271、（他のメッセージタイプの中でも）フィードバックメッセージも含まれます. このフィードバックメッセージは、かなり迅速に幅広いサポートを受けることが期待されています. したがって、H.271に従ってフィードバックメッセージを伝達するメカニズムが望ましいようです. 

3.2. メディアパスの使用
コーデック制御メッセージにメディアパスを使用する理由は2つあります. 

第1に、MCUを使用するシステムは、多くの場合、制御部分とメディア処理部分を分離しています. これらのメッセージはMCUのシグナリング部分ではなく、メディア部分を対象とするか、またはメディア部分で生成されるため、メディアパス上にメッセージを配置すると、インターフェイス間の送信や、シグナリングと処理の間の不要な制御トラフィックが回避されます. MCUが物理的に分解されている場合、メディアパスを使用すると、メディア制御プロトコル拡張（たとえば、メディアゲートウェイ制御（MEGACO）[RFC3525]）が不要になります. 

第2に、シグナリングパスには、SIPプロキシやアプリケーションサーバーなど、いくつかのシグナリングエンティティが非常に一般的に含まれています. 信号エンティティの通過を回避すると、いくつかの理由で遅延を回避できます. プロキシは、メディア処理よりも遅延要件が厳しくなく、その複雑でより一般的な性質により、処理遅延が大幅に増える可能性があります. シグナリングエンティティのトポロジ上の場所も、通常、遅延を最小限に抑えるように最適化されているのではなく、他のアーキテクチャ上の目標に向けて最適化されています. したがって、信号経路は、地理的にも遅延的にも大幅に長くなる可能性があります. 

3.3. AVPFの使用
AVPFフィードバックメッセージフレームワーク[RFC4585]は、新しいメッセージを実装するための適切なフレームワークを提供します. AVPFは、フィードバックメッセージのタイミングを制御するルールを実装して、RTCPトラフィックによるネットワークフラッディングによる輻輳を回避します. AVPFを参照することにより、これらのルールを再利用します. 

AVPFのシグナリング設定により、RTPセッションごとに個々のタイプの機能を設定またはネゴシエートできます. 

3.3.1. 信頼性
RTCPメッセージの使用は、下位層のトランスポートが信頼性を提供しない限り、各メッセージ転送は信頼できないことを意味します. この仕様で提案されているさまざまなメッセージには、信頼性の観点からさまざまな要件があります. ただし、すべての場合において、フィードバックメッセージの（時折の）損失に対する反応が指定されています. 

3.4. マルチキャスト
コーデック制御メッセージはマルチキャストで使用される場合があります. [RFC3550]と[RFC4585]で指定されたRTCPタイミングルールは、メッセージがRTCP接続の過負荷を引き起こさないことを保証します. マルチキャストを使用すると、セマンティクスに一貫性がないメッセージを受信する可能性があります. 不整合への対応はメッセージタイプによって異なり、メッセージタイプごとに個別に説明されます. 

3.5. フィードバックメッセージ
このセクションでは、さまざまなフィードバックメッセージのセマンティクスと、それらがさまざまな使用例にどのように適用されるかについて説明します. 

3.5.1. Full Intra Request Command
Full Intra Request（FIR）コマンドは、指定されたメディアセンダーによって受信されると、メディアセンダーができるだけ早くデコーダリフレッシュポイント（セクション2.2を参照）を送信する必要があります. このような機会の評価には、現在のエンコーダのコーディング戦略と現在利用可能なネットワークリソースが含まれます. 

FIRは、「瞬時デコーダリフレッシュ要求」、「高速ビデオ更新要求」、または「ビデオ高速更新要求」とも呼ばれます. 

デコーダーの更新ポイントを使用することは、そのポイントの前に送信された画像を、ストリームで送信される後続の画像のエンコードプロセスの参照として使用しないことを意味します. ビデオではない予測メディアタイプの場合は、アナログが適用されます. たとえば、MPEG-4システムでシーンの更新が使用されている場合、デコーダーの更新ポイントはシーンの完全な表現で構成され、以前の更新と比べてデルタコード化されません. 

デコーダの更新ポイント、特にイントラまたはIDR画像は、一般に予測画像より数倍大きいサイズです. したがって、利用可能なビットレートが小さいシナリオでは、デコーダのリフレッシュポイントの使用は、典型的な画像の持続時間よりも大幅に長い遅延を意味します. 

マルチキャストでの使用が可能です. ただし、コマンドの集約をお勧めします. デコーダーの更新ポイントを送信した後、リクエストをすぐに受信するレシーバー-既知の最長往復時間（RTT）の2倍以内に加えて、AVPFによって引き起こされたRTCPパケット送信遅延-メディアがレシーバーは、以前に配信されたデコーダーリフレッシュポイントによって処理されていません. 指定された遅延の理由は、不要なデコーダリフレッシュポイントの送信を回避するためです. セッション参加者が独自のリクエストを送信している間に、別の参加者のリクエストが処理中だった可能性があります. 他の要求についての知識なしに送信された可能性のある要求を抑制することで、この問題を回避できます. 

FIRコマンドを使用してエラーから回復することは明示的に禁止されており、代わりにAVPF [RFC4585]で定義されているPLIメッセージを使用する必要があります. PLIメッセージは失われた画像を報告し、その目的のためにAVPFに含まれています. 

完全なイントラリクエストは、ユースケース1および2に適用されます. 

3.5.1.1. 信頼性
FIRメッセージは、メッセージが失われない限り、デコーダの更新ポイントを配信します. デコーダーのリフレッシュポイントは、ビットストリームから簡単に識別できます. したがって、プロトコルレベルの通知は必要ありません. 必要な信頼性のレベルを確保するには、単純なコマンド繰り返しメカニズムで十分です. ただし、繰り返しを使用する可能性がある場合は、既に受信して応答したメッセージに受信者が応答しないようにするメカニズムが必要です. 

可能な限り最高の信頼性を確保するために、FIRの送信者は、目的のコンテンツが受信されるまでFIRを繰り返します. 繰り返し間隔は、セッションに適用可能なRTCPタイミングルールによって決定されます. 完全なデコーダーリフレッシュポイントを受信するか、デコーダーリフレッシュポイントを送信しようとする試み（パケット損失が原因で損傷した）を検出すると、FIRの繰り返しを停止する必要があります. 別のFIRが必要な場合は、要求シーケンス番号を増やす必要があります. FIR送信者は、セッション内のメディア送信者ごとに、常に複数のFIR（異なる要求シーケンス番号）を未解決にする必要があります. 

FIRのレシーバー（つまり、メディアセンダー）は、デコーダーのリフレッシュポイントの配信を保証するために補完的に動作します. デコーダーリフレッシュポイントを送信した後、2 * RTTを超えるFIRの繰り返しを受信した場合、新しいデコーダーリフレッシュポイントを送信します. 2回の往復時間により、デコーダーの更新ポイントがリクエスターに戻り、FIRの繰り返しの最後に到達してメディア送信者によって検出される時間を確保できます. 

メディアレシーバーからFIRを受信するRTPミキサーまたはRTPスイッチングMCUは、要求するレシーバーにデコーダーリフレッシュポイントが確実に配信されるようにする責任があります. ミキサー/ MCUがFIRコマンドを生成する必要があるかもしれません. 信頼性の観点から、2つのレッグ（FIR要求エンドポイントからミキサー/ MCU、およびミキサー/ MCUからデコーダー更新ポイント生成エンドポイント）は、互いに独立して処理されます. 

3.5.2. 時間と空間のトレードオフのリクエストと通知
時間空間的トレードオフ要求（TSTR）は、ビデオエンコーダーに時間的解像度と空間的解像度の間のトレードオフを変更するように指示します. 0から31のインデックス値は、単調に、より高いフレームレートの要求を示します. つまり、0のインデックスを要求するリクエスタは高品質を好み、低フレームレートを受け入れる用意がありますが、31を要求するリクエスタは高フレームレートを希望しますが、空間品質が低下する可能性があります. 

一般に、エンコーダの反応時間は、通常の画像の継続時間よりも大幅に長くなることがあります. 例については、ユースケース3を参照してください. エンコーダーは、要求がトレードオフの変更をもたらすかどうか、およびその程度を決定します. 時間と空間のトレードオフ通知（TSTN）メッセージを返し、今後使用するトレードオフを示します. 

TSTRとTSTNが導入されたのは、主に、SIP再招待などの制御プロトコルメカニズムが重すぎて遅すぎて、適切なユーザーエクスペリエンスを実現できないと考えられているためです. たとえば、リモートユーザーがスライダーで時間的/空間的トレードオフを選択するユーザーインターフェイスについて考えてみます. 合理的なユーザーエクスペリエンスのためには、スライダーの動きに対する即時のフィードバックが必要です. SIP re-INVITE [RFC3261]は、（TSTR / TSTNメカニズムと比較して）少なくとも2回以上のラウンドトリップを必要とし、プロキシや他の複雑なメカニズムを伴う場合があります. 適切に設計されたシステムであっても、新しいトレードオフが最終的に選択されるまでには、1秒ほどかかる場合があります. さらに、RTCPを使用すると、マルチキャストの使用例が非常に効率的に解決されます. 

マルチポイントシナリオでのTSTRおよびTSTNの使用は重要な問題であり、多くの実装固有の方法で実現できます. 

問題は、TSTRが通常は非同期で到着し、同じストリームやエンドポイントエンコーダーに対して異なるトレードオフ値を要求する可能性があるという事実から生じます. このメモは、TSTRで伝達される提案されたトレードオフの受信に対する翻訳者、ミキサー、またはエンドポイントの反応を指定しません. TSTRメッセージの受信者は、独自の基準（TSTRによって伝達されるトレードオフに基づく場合もあればそうでない場合もある）によって選択された新しいトレードオフを伝達して、TSTNを送信することによって応答することのみを要求します. つまり、TSTRで送信されるトレードオフは拘束力のない推奨事項であり、それ以上のものではありません. 

[RFC5117]で説明されているトポロジに基づいて、3つのTSTR / TSTNシナリオを区別する必要があります. 以下のサブセクションでシナリオについて説明します. 

3.5.2.1. ポイントからポイントへ
この最も些細なケース（Topo-Point-to-Point）では、メディアセンダーは通常、TSTRの要求された値に基づいて、時間/空間のトレードオフを、独自の機能に従って調整します. TSTNメッセージは、新しいトレードオフ値を戻します（たとえば、送信者がそのトレードオフを調整できない場合、古い値と同じになる場合があります）. 

3.5.2.2. マルチキャストまたはトランスレータを使用したポイントツーマルチポイント
RTCPマルチキャストは、トポマルチキャストによるメディアマルチキャストで使用されるか、トポトランスレータによるRFC 3550のトランスレータモデルに従って使用されます. これらの場合、異なる受信者からの非同期のTSTRメッセージが受信される可能性があり、要求されたトレードオフが異なる可能性があります（ユーザー設定が異なるため）. このメモは、メディア送信者がそのトレードオフを調整する方法を指定していません. 可能な戦略には、受信したすべてのトレードオフ要求の平均または中央値の選択、特定の参加者への優先順位の付与、または以前に選択したトレードオフの使用の継続（送信者が調整できない場合など）が含まれます. この場合も、すべてのTSTRメッセージはTSTNによって確認される必要があり、伝えられる値は行われた決定を反映する必要があります. 

3.5.2.3. RTPミキサーを使用したポイントツーマルチポイント
このシナリオ（Topo-Mixer）では、RTPミキサーはすべてのTSTRメッセージを受信し、独自の基準に基づいてそれらに対処する機会があります. ほとんどの場合、ミキサーは、異なる参加者から到着する潜在的に競合するTSTRメッセージの「コンセンサス」を形成し、メディア送信者への独自のTSTRメッセージを開始する必要があります. 前のシナリオと同様に、この「コンセンサス」を形成するための戦略は実装次第であり、たとえば、参加者の要求値の平均化、特定の参加者への優先度の付与、またはセッションのデフォルト値の使用を含むことができます. 

ミキサーまたはトランスレーターがトランスコーディングを実行する場合でも、ミキサーまたはトランスレーターが受信するコンテンツがすでにそのトレードオフに近い場合を除いて、要求されたトレードオフでメディアを配信することは非常に困難です. したがって、ミキサーがトレードオフを変更する場合、独自のTSTRを作成することにより、新しい値を使用するようにメディア送信者に要求する必要があります. 使用されたトレードオフの決定に到達すると、ダウンストリームのリクエスタへの確認応答にその値が含まれます. 元のソースの品質（およびビットレート）が大幅に高い場合にのみ、トランスコーディングだけで要求されるトレードオフが発生する可能性があります. 

3.5.2.4. 信頼性
要求および受信確認メカニズムが指定されています. 時空間トレードオフ通知（TSTN）メッセージは、要求が受信されたこと、および今後どのトレードオフが使用されるかをリクエスターに通知します. この確認メカニズムは、少なくとも次の理由で望ましいものです. 

oトレードオフの変更は、メディアビットストリームから直接識別することはできません. oメディアセンダーの制約により、選択したトレードオフ値を知らないと、ユーザーフィードバックを実装できません. o実装できないトレードオフを要求するメッセージの繰り返し送信を回避できます. 

3.5.3. H.271ビデオバックチャネルメッセージ
ITU-T Rec. H.271は、構文、セマンティクス、およびビデオバックチャネルメッセージに対する推奨エンコーダの反応を定義しています. このメモで定義された構造は、そのようなメッセージをメディア受信者からメディア送信者に透過的に伝えるために使用されます. このメモでは、H.271内で使用可能なコードポイントの詳細な説明は控え、代わりに仕様テキスト[H.271]を参照します. 

ただし、一部のH.271メッセージはAVPFのネイティブメッセージおよびこのメモと類似していることに注意してください. さらに、一部のH.271メッセージはマルチキャスト環境で注意が必要であることがわかっているか、マルチキャストまたはマルチポイントのシナリオでは明らかに使用できないことに注意してください. 表1は、現在H.271で定義されているメッセージ、おおまかに対応するAVPFまたはコーデック制御メッセージ（CCM）（このメモで指定されている後者）、およびマルチキャストの安全性に関する現在の知識を示したものの簡単な概要です.  . 

   H.271メッセージタイプAVPF / CCMメッセージタイプマルチキャストセーフ
   -------------------------------------------------- ------------------
   0（使用する場合
     参考画像
      選択）AVPF RPSIいいえ（画像の肯定的なACK）
   1画像の損失AVPF PLIはい
   2部分的な損失AVPF SLIはい
   3 1つのパラメーターCRC N / Aはい（送信者のアクションは不要）
   4すべてのパラメーターCRC N / Aはい（送信者のアクションは不要）
   5リフレッシュポイントCCM FIRはい
        
表1：H.271メッセージとそれらに対応するAVPF / CCM

注：H.271メッセージタイプ0は、AVPFの参照画像選択表示（RPSI）と厳密に同等ではありません. これは、デコーダでの既知の正しい参照ピクチャの表示です. 定義された参照画像（RPSIで伝送されることが想定される制御情報の形式）を使用するようにエンコーダーに命令しません. ただし、H.271メッセージタイプ0はAVPFのRPSIと同じ目的で使用されると考えられていますが、他の使用形態も可能です. 

H.271メッセージの不透明性に応じて、特にマルチキャストの安全性に関して、実装がH.271ビデオバックチャネルメッセージを使用する場合は、次のガイドラインに従う必要があります. 

1. H.271フィードバックメッセージを利用する実装は、セクション5で概説されているように、輻輳制御の原則に準拠している必要があります. 

2.実装では、[H.271]で定義されている同様のメッセージの代わりに、[RFC4585]とこのメモで定義されているIETFネイティブメッセージを利用する必要があります. 同様のメッセージに対する私たちの現在の理解は、上記の表1に文書化されています. 上記のSHOULDステートメントを迂回する1つの理由は、特定のアプリケーションおよびビデオ圧縮規格について、表に示されているものとは対照的に、前述の「類似性」が与えられていないことが明確に理解されている場合です. 

3.現在存在しているH.271コードポイントの一部はマルチキャストセーフではないことが確認されています. したがって、賢明なことは、マルチキャスト環境でH.271フィードバックメッセージタイプを使用しないことです. 後述するすべての問題が実装者によって完全に理解され、すべてのエンドポイントによって適切に考慮されている場合にのみ使用できます. それ以外の場合はすべて、H.271メッセージタイプをマルチキャストと組み合わせて使用​​してはなりません. 

4.ミキサーが理論的に以下に記載されている問題を解決できる集中型マルチポイント環境でも、そのようなミキサーと協調エンドポイントの実装は非常に困難で面倒な作業であることが確認されています. したがって、以下に述べるすべての問題が実装者によって完全に理解され、ミキサーとエンドポイントの両方によって適切に考慮されない限り、H.271メッセージは集中マルチポイントシナリオで使用してはなりません（MUST NOT）. 

マルチポイント環境でH.271の使用を検討する際に考慮すべき問題：

1.異なるレシーバーの異なる状態. 多くの環境では、すべてのメディアレシーバーのデコーダー状態が特定の時点で同一であることを保証できません. このような状態の不整合の最も明白な理由は、多くのメディアレシーバーのうちの1つだけへのパスで発生する損失です. ただし、マルチポイント会議への最近の参加（マルチキャストグループへの参加によるものか、追加のミキサー出力によるものなど）など、それほど明白ではない理由が他にもあります. さまざまな状態により、メディアレシーバーは潜在的に矛盾するH.271メッセージを発行する可能性があります（または、1つのメディアレシーバーがH.271メッセージを発行します. このメッセージは、メディアセンダーが監視した場合、他のメディアレシーバーには役立ちません）. これらの矛盾するメッセージに対するメディア送信者の素朴な反応は、予測不能で迷惑な結果につながる可能性があります. 

2.メディアセンダーで異なるメディアレシーバーからのメッセージを結合することは、簡単な作業ではありません. 理由として、これらのメッセージは互いに矛盾している可能性があり、それらのトランスポートは信頼性が低い（他の理由も考えられる）ことに注意してください. 多くのH.271メッセージ（つまり、タイプ0、2、3、および4）の場合、結合のアルゴリズムは、ネットワーク/プロトコル環境（つまり、輻輳に関して）と使用されるメディアコーデックの両方を認識している必要があります.  、特定のタイプのH.271メッセージは、メディアコーデックごとに異なるセマンティクスを持つ可能性があるためです. 

3.要求の抑制は、AVPFで説明されている基本的なメカニズム（プロトコルレベルでのタイミングとトランスポートの考慮によってのみ駆動される）を超える必要がある場合があります. たとえば、レシーバーは、メディアストリームから受信した情報に基づいて、要求の生成を控える（または遅延させる）必要があることがよくあります. たとえば、イントラ/ IDRピクチャの送信が進行中の場合、受信者がFIRを発行しても意味がありません. 

4.非マルチキャストセーフメッセージ（たとえば、受信した画像/スライスのH.271タイプ0肯定ACK）をより大きなマルチキャストグループで使用する場合、メディアレシーバーはこれらのメッセージの送信を強制的に遅延または省略します. メディアセンダーの場合、これはデータが適切に受信されなかったように見えます（ただし、データは正しく受信されました）. 

3.5.3.1. 信頼性
H.271ビデオバックチャネルメッセージは、信頼性の高い伝送を必要とせず、メッセージの受信の確認は、フォワードビデオビットストリームから取得できます. したがって、特定の受信確認は指定されていません. 

再送信ルールについては、セクション3.5.1.1が適用されます. 

3.5.4. 一時的な最大メディアストリームのビットレートの要求と通知
レシーバー、トランスレーター、またはミキサーは、一時最大メディアストリームビットレートリクエスト（TMMBR、「木材」）を使用して、メディアストリーム（セクション2.2を参照）の最大ビットレートを提供された値以下に制限するよう送信者に要求します.  . 一時最大メディアストリームビットレート通知（TMMBN）には、受信したTMMBR定義の制限の最も限定的なサブセットに関するメディア送信者の現在のビューが含まれ、メディア送信者をさらに制限しないTMMBRを参加者が抑制できるようにします. TMMBR / TMMBNメッセージの主な用途は、MCUまたはミキサーを使用するシナリオ（ユースケース6）であり、Topo-TranslatorまたはTopo-Mixerだけでなく、Topo-Point-to-Pointにも対応しています. 

メディアストリームの各一時的な制限は、タプルとして表現されます. タプルの最初のコンポーネントは、メディアレシーバーが現在このメディアストリームを受け入れる準備ができている最大の合計メディアビットレート（セクション2.2で定義）です. 2番目のコンポーネントは、メディアレシーバーが選択した参照プロトコルレイヤーでこのメディアストリームについて観察したパケット単位のオーバーヘッドです. 

セクション2.2に示すように、TMMBRの送信者（つまり、メディアレシーバー）によって観察されるオーバーヘッドは、別の参照プロトコルを使用するため、TMMBRの受信者（つまり、メディアセンダー）で観察されるオーバーヘッドと異なる場合があります. 反対側のレイヤー、またはパケットごとのオーバーヘッドの量に影響を与えるトランスレータまたはミキサーの介入が原因です. たとえば、IPv4とIPv6の間で変換する2つの間のゲートウェイは、パケットごとのオーバーヘッドに20バイトの影響を与えます. オーバーヘッドを変更する他のメカニズムには、トンネルが含まれます. オーバーヘッドの変動に関する問題については、

[RFC3890]. TMMBRを使用するためのアルゴリズムの説明からわかるように、送信側と受信側で同じ値を持つ変数に関して計算が実行されるため、送信側と受信側の知覚オーバーヘッドの違いは問題になりません.  -たとえば、パケットレートやネットメディアレート. 

最大合計メディアビットレートとパケットごとのオーバーヘッドの両方を報告することで、さまざまなレシーバーがさまざまなプロトコルレイヤー（たとえば、IPレベル、トンネルプロトコルの外部、またはリンクレイヤー）にビットレートとオーバーヘッドの値を提供できます. ピアが報告するプロトコルレベルは、そのプロトコルレベルから情報を抽出できる必要があるため、ピアの統合レベルによって異なります. たとえば、実行中のIPバージョンを認識していないアプリケーションは、IPヘッダーのオーバーヘッドを有意義に決定できないため、オーバーヘッドまたは最大合計メディアビットレートの計算にIPオーバーヘッドを含めたくありません. 

ほとんどのピアは、少なくともIP層の値を報告できることが期待されます. 特定の実装形態では、リンク層に関する情報を含めることも有利であり、これにより、より正確なオーバーヘッド計算と接続リソースの最適化が可能になります. 

Temporary Maximum Media Stream Bit Rateメッセージは、任意のRTPパケットストリームに適用できる一般的なメッセージです. これにより、これらは、この仕様で定義されている他のコーデック制御メッセージから分離されます. これらのメッセージは、特定のメディアタイプまたはペイロード形式にのみ適用されます. TMMBR機能は、トランスポート、およびトランスポートがメディアエンコーディングに課す要件に適用されます. 

以下の理由は、参加者がシグナリングプロトコルを使用して、セッションの最大ビットレートをネゴシエートしたことを前提としています. この値は、たとえば、ポイントツーポイント、マルチキャスト、またはトランスレータの場合、グローバルにすることができます. 参加者とピアまたはミキサーの間のローカルな場合もあります. どちらの場合も、シグナリングでネゴシエートされたビットレートは、参加者が処理（デパケット化とデコード）できることを保証するものです. 実際には、参加者の接続性もネゴシエートされた値に影響します. ネットワークインターフェイスがサポートしていない合計メディアビットレートをネゴシエートすることはあまり意味がありません. 

セッションまたは送信者の最大パケットレートをネゴシエートしたことも有益です. RFC 3890は、この目的に使用できるSDP [RFC4566]属性を提供しています. ただし、その属性は、offer / answer [RFC3264]を使用して確立されたRTPセッションでは使用できません. したがって、このメモでは、オプションの最大パケットレートシグナリングパラメータが指定されています. 

すでに確立されている最大合計メディアビットレートは、フィードバックメッセージの送信を管理するタイミングルールに従って、いつでも変更できます. 制限は、セッション確立シグナリング中にネゴシエートされるため、ゼロとセッション最大値の間の任意の値に変更できます. ただし、ビットレートの増加を許可するTMMBRメッセージを送信者が受信した場合でも、すべての増加は輻輳制御メカニズムによって管理される必要があります. TMMBRは既知の制限のみを示し、通常はローカル環境にあり、フルパスについての保証はありません. さらに、TMMBRによって確立されたビットレート制限の増加は、制限の増加について世界に通知するTMMBNメッセージの送信から一定の遅延の後にのみ実行されます. 遅延は、メディア送信者が認識している最長のRTTの少なくとも2倍として指定されています. さらに、AVPFタイミングルールに基づく、このセッションの別のTMMBRメッセージの送信に必要な待機時間のメディア送信者の計算. この遅延は、他のセッション参加者がビットレート制限の要件を知ることができるようにするために導入されました. 

TMMBRによって示される新しい値がセッションの残りの部分で有効である可能性が高い場合、TMMBR送信側は、セッションシグナリングプロトコルを使用してセッション上限の再ネゴシエーションを実行することが期待されています. 

3.5.4.1. TMMBRを使用したメディアレシーバーの動作
このセクションは、セクション4.2でより正確に説明されている動作の非公式な説明です. 

メディアセンダーは、セッションシグナリングでネゴシエートされた最大メディアビットレートと最大パケットレート（存在する場合）によって制限されたセッションを開始します. この値は、参加者がTMMBRメッセージで使用するものとは別のプロトコルレイヤーでネゴシエートされる場合があることに注意してください. 各メディアレシーバーは、参照プロトコルレイヤーを選択し、その参照レベルで監視しているオーバーヘッドの推定（または、パケットがまだ見られない場合はそれを推定）を形成し、考慮に入れて、受け入れ可能な最大合計メディアビットレートを決定します独自の制限、および認識している可能性があるトランスポートパスの制限. 現在の制限がセッションシグナリングで合意されたものよりも制限されている場合、メディアレシーバーはTMMBRメッセージを使用して、これら2つの量の初期推定値をメディアセンダーに報告します. 

メディアセンダーは、セクション3.5.4.2で指定されたようなアルゴリズムを適用して、受信したタプルのどれが最も制限されているか（つまり、セクション2.2で定義されたバウンディングセット）を選択します. 実行可能領域内にとどまるように操作を変更し（セクション2.2で定義）、選択した境界セットを示すTMMBNをメディアレシーバーに送信します. その通知は、バウンディングセットのタプルの責任者、つまり制限の「所有者」も示します. バウンディングセットのタプルを所有しないセッション参加者は、「非所有者」と呼ばれます. 

メディアレシーバーが、TMMBNによって報告された境界セット内のタプルの1つを所有していない場合、メディアセンダーと同じアルゴリズムを適用して、現在の推定（最大合計メディアビットレート、オーバーヘッド）タプルが境界セットに入るかどうかを判断しますメディア送信者が知っている場合. もしそうなら、それは送信者にタプル値を報告するTMMBRを発行します. それ以外の場合は、現時点では何もしません. 定期的に、その推定タプル値が変更されたり、新しいTMMBNを受け取ったりする場合があります. その場合、アルゴリズムを再適用して、TMMBRを発行する必要があるかどうかを判断します. 

あるいは、メディアレシーバーが報告された境界セット内のタプルの1つを所有している場合、それ自体のタプル値の推定値が変更されるまで、アクションは実行されません. そのとき、変更された値を報告するためにTMMBRをメディアセンダーに送信します. 

メディアレシーバーは、1つのTMMBNメッセージと次のメッセージの間で、境界タプルの所有者と非所有者の間でステータスを変更できます. したがって、各TMMBNの内容をチェックして、その後のアクションを決定する必要があります. 

TMMBRおよびTMMBNメッセージの交換から生じるビットレート制限が、使用の結果として生じるものと少なくとも同じくらい厳格（少なくともビットレートの次元では低い）である限り、実装は選択した他のアルゴリズムを使用できます. 前述のアルゴリズム. 

明らかに、ポイントツーポイントの場合、メディアレシーバーが1つしかない場合、このレシーバーは、自身のTMMBRに応答して最初のTMMBNを受信すると「所有者」になり、セッションの残りの間「所有者」のままです. したがって、常に1つのメディアレシーバーしかないことがわかっている場合は、上記のアルゴリズムは必要ありません. セッションで唯一のものであることを認識しているメディアレシーバーは、ビットレート制限が以前に通知された制限よりも高いまたは低いTMMBRメッセージをいつでも送信できます（AVPF [RFC4585] RTCP RR送信タイミングルールに従います）. ただし、セッション参加者がそれがセッション内の唯一の受信者であるかどうかを判別するのは難しい場合があります. このため、TMMBRの実装には、次のセクションで説明するアルゴリズムまたはより厳密な同等物を含める必要があります. 

3.5.4.2. 現在の制限を確立するためのアルゴリズム
このセクションでは、セッション制限を計算するためのアルゴリズムの例を紹介します. 計算の結果が少なくともこのアルゴリズムによって得られる結果と同じくらい制限的である限り、他のアルゴリズムを使用することができます. 

まず、メディア送信者の動作を制限するためにタプルを使用することの影響を考慮することが重要です. ビットレートとオーバーヘッド値により、メディアストリームのビットレートを計算するための2次元の解空間が得られます. 幸い、2つの変数はリンクされています. 具体的には、RTPペイロードに使用できるビットレートは、TMMBRレポートのビットレートから使用パケットレートを差し引いたものに、TMBBRレポートのオーバーヘッドをビットに変換したものを掛けたものに等しくなります. その結果、異なるビットレート/オーバーヘッドの組み合わせを考慮する必要がある場合、パケットレートによって正しい制限が決まります. これはおそらく例によって最もよく説明されます：

例：

   レシーバーA：TMMBR_max合計BR = 35 kbps、TMMBR_OH = 40バイト
   レシーバーB：TMMBR_max合計BR = 40 kbps、TMMBR_OH = 60バイト
        
特定のパケットレート（PR）で、RTPのメディアペイロードに使用できるビットレートは次のとおりです. 

   Max_net media_BR_A =
       TMMBR_max合計BR_A-PR * TMMBR_OH_A * 8 ...（1）
        
   Max_net media_BR_B =
       TMMBR_max合計BR_B-PR * TMMBR_OH_B * 8 ...（2）
        
PR = 20の場合、これらの計算によりMax_net media_BR_A = 28600 bpsおよびMax_net media_BR_B = 30400 bpsが得られます. これは、レシーバーAがこのパケットレートの制限的なものであることを示唆しています. ただし、特定のPRでは、レシーバーBが制限ポイントになる切り替えポイントがあります. スイッチオーバーポイントは、Max_media_BR_AをMax_media_BR_Bに等しく設定し、PRを開始することで識別できます. 

         TMMBR_max合計BR_A-TMMBR_max合計BR_B
   PR = ------------------------------------------- ...（3 ）
                8 *（TMMBR_OH_A-TMMBR_OH_B）
        
上記の数値では、2つの制限間の切り替えポイントとして31.25が得られます. つまり、パケットレートが1秒あたり31.25未満の場合、レシーバーAが制限するレシーバーであり、パケットレートが高い場合、レシーバーBはより制限されます. この動作の影響は、メディアエンコーディングとそのパケット化を制御する実装で考慮する必要があります. 上記で例示したように、複数のTMMBR制限が、正味のメディアビットレートとパケットレートの間のトレードオフに適用されます. 適用される制限は、考慮されるパケットレートによって異なります. 

これは、TMMBRメカニズムの動作方法にも影響を与えます. まず、複数のTMMBRタプルがメディア送信側に制限を提供している可能性があります. 次に、セッションの参加者（メディアの送信者と受信者）が、特定のタプルがメディア送信者に対する制限になるかどうか、または既に指定されている制限のセットが指定された値よりも厳しいかどうかを判断できる必要があります. この決定を行う能力がない場合、TMMBRの抑制は機能しません. 

アルゴリズムの基本的な考え方は次のとおりです. 各TMMBRタプルは、パケットレートがX軸に沿っており、ネットビットレートがY軸に沿っている空間での直線の方程式（式（1）および（2）を参照）と見なすことができます. TMMBRタプルの完全なセットに対応するラインのセットの下のエンベロープは、X軸とY軸とともに、ポリゴンを定義します. このポリゴン内にあるポイントは、TMMBRのすべての制約を満たすパケットレートとビットレートの組み合わせです. この領域内で実現可能な最高のパケットレートは、境界ポリゴンがX軸と一致するレートの最小値、またはシグナリングによって提供されるセッション最大パケットレート（SMAXPR、1秒あたりのパケット数で測定）です. 通常、メディアセンダーは、この理論上の最大値よりも低いレートで動作することを好みます. 実際のメディアコンテンツが受信者に到達する速度を上げるため. アルゴリズムの目的は、境界セットを構成するTMMBRタプルを区別し、実行可能な領域の輪郭を描き、メディア送信者がその領域内の優先操作ポイントを選択できるようにすることです. 

下の図1は、TMMBRタプルAとBによって形成される境界ポリゴンを示しています. 3番目のタプルCは境界ポリゴンの外側にあるため、メディアレートとパケットレート間の実現可能なトレードオフの決定には関係ありません. ss..sというラベルの付いた線は、セッションのセットアップ中にシグナリングによって取得されたセッションの最大パケットレート（SMAXPR）によって課されるパケットレートの制限を表しています. 図1では、タプルBによって決定された制限は、たまたまSMAXPRよりも制限的です. 状況は簡単に逆になる可能性があります. つまり、境界ポリゴンは、SMAXPR制約を表す垂直線によって右側で終了します. 

   ネット^
   メディア| acbs
   ビット| ACBS
   レート| ACBS
        | cb s
        | acs
        | BC s
        | ABC
        | ab cs
        | 実現可能なbcs
        | 地域ベース
        | バスク
        | bsc
        | bsa
        | bs
        + ------------------------------>
        
パケットレート

図1-TMMBRタプルの幾何学的解釈

パケットレートを上げる方向に移動すると、境界ポリゴンを構成する線の傾きが徐々に負になることに注意してください. また、少し並べ替えを行うと、方程式（1）と（2）は正準形になります. 

y = mx + b

ここで、mは勾配であり、タプルオーバーヘッドの負数（ビット単位）に等しい値を持ち、bはy切片であり、タプルの最大合計メディアビットレートに等しい値を持ちます. 

これらの観察から、TMMBRタプルを処理して初期バウンディングセットを選択する場合、オーバーヘッドの増加順にタプルをソートして処理する必要があるという結論につながります. 特定のタプルがバウンディングセットに追加されると、バウンディングポリゴンの次の側をより急勾配にする必要があるため（つまり、対応するTMMBRのオーバーヘッドが大きくなるため）、まだ選択されておらずオーバーヘッドが少ないすべてのタプルを削除できます. 最後に追加されたタプル. 

図1の行cc..cは、別の原理を示しています. この線は線aa..aに平行ですが、Y切片が高くなっています. つまり、対応するTMMBRタプルには、最大合計メディアビットレート値が含まれています. 線cc..cは境界ポリゴンの外側にあるため、2つのTMMBRタプルが同じオーバーヘッド値を持つ場合、最大合計メディアビットレート値が高いタプルは境界セットの一部にはならず、脇に置くことができるという結論を示しています. 

さらに2つの観測により、アルゴリズムが完成します. 明らかに、左から移動すると、境界ポリゴンの連続するコーナー（つまり、連続する辺のペア間の交点）は、パケットレートが高くなります. 一方、再び左から移動すると、境界セットを構成する各連続線は、より低いパケットレートでX軸と交差します. 

完全なアルゴリズムを指定できるようになりました. このアルゴリズムは、TMMBRタプルの2つのリスト、候補リストXと選択リストYで機能します. どちらもオーバーヘッド値の増加によって並べ替えられます. Xのすべてのメンバーが処理のために破棄または削除されると、アルゴリズムは終了します. 選択されたリストYのメンバーシップは、アルゴリズムが完了するまで試用されます. 選択されたリストの各メンバーは交差値に関連付けられています. 交差値は、そのTMMBRタプルに対応するラインが、選択されたリスト内の前のTMMBRタプルに対応するラインと交差するパケットレートです. 選択したリストの各メンバーは、最大パケットレート値にも関連付けられます. これは、セッションの最大パケットレートSMAXPR（存在する場合）と、そのタプルに対応する線がX軸と交差するパケットレートのいずれか小さい方です. 

アルゴリズムが終了すると、選択されたリストはセクション2.2で定義された境界セットと等しくなります. 

初期アルゴリズム

このアルゴリズムは、1つ以上のTMMBRを受信したとき、および境界セットを初めて決定する前に、メディア送信者によって使用されます. 

1. TMMBRタプルをオーバーヘッドの増加順にソートします. これが最初の候補リストXです. 

2.候補リストの複数のタプルが同じオーバーヘッド値を持っている場合、最大合計メディアビットレート値が最も低いものを除いて、すべてを破棄します. 

3.最大合計メディアビットレート値が最も低いTMMBRタプルを候補リストから選択して削除します. その値を持つタプルが複数ある場合は、オーバーヘッド値が最も高いタプルを選択します. これは、選択されたリストYの最初のメンバーです. その交差値をゼロに設定します. その最大パケットレートをSMAXPRの最小値（利用可能な場合）として計算し、次の式から得られた値（対応する線がX軸と交差するときのパケットレート）を計算します. 

          最大PR = TMMBR最大合計BR /（8 * TMMBR OH）...（4）
        
4.選択したタプルよりもオーバーヘッド値が低いすべてのタプルを候補リストから破棄します. 

5.処理する候補リストから最初の残りのタプルを削除します. これを現在の候補者と呼びます. 

6.式（3）を使用して、現在の候補によって生成されたラインと、選択されたリストYの最後のタプルによって生成されたラインとの交点におけるパケットレートPRを計算します. 

7.計算値PRが選択したリストの最後のタプルに格納されている交差値以下の場合、選択したリストの最後のタプルを破棄し、手順6に戻ります（同じ現在の候補を保持）. 

ステップ3で選択リストYの最初のメンバーを選択すると、選択リストがこのプロセスによって空にならないことが保証されることに注意してください. つまり、アルゴリズムは（すぐにではなくても）最終的にステップ8に進む必要があります. 

8.（現在の候補の計算されたPR値が、選択されたリストYの現在の最後のメンバーの交差値より大きい場合、このステップに到達します. ）現在の候​​補の計算された値PRが最大パケットレートより低い場合選択したリストの最後のタプルに関連付けられている場合は、現在の候補タプルを選択したリストの末尾に追加します. PRをその交差値として格納します. SMAXPR（利用可能な場合）と、式（4）を使用して計算された最大パケットレートの小さい方として、最大パケットレートを計算します. 

9.候補リストにタプルが残っている場合は、ステップ5に戻ります. 

インクリメンタルアルゴリズム

以前のアルゴリズムは、選択されたリストが以前に作成されていなかった最初のケ​​ースをカバーしていました. また、メディア送信者にのみ適用されます. 以前に作成された選択リストがメディア送信者またはメディア受信者のいずれかで利用可能な場合、他に2つのケースが考えられます. 

o現在選択リストにないTMMBRタプルが追加の候補である場合. 

o現在選択されているリストにあるTMMBRタプルの値が変更されたとき. 

メディアレシーバーでは、これらのケースはそれぞれ、TMMBNで報告された境界セット内のタプルの非所有者と所有者のケースに対応します. 

どちらの場合も、新規/変更されたタプルを考慮して選択リストを更新するプロセスは、上記の基本的なアルゴリズムを使用できます. ただし、初期候補セットは、既存の選択リストと新規または変更されたタプルのみで構成されます. 以下の観察を利用することで、（最適化された候補セットから開始する以外に）さらに最適化を行うことができます. 

最初の観察は、新しい/変更された候補が新しく選択されたリストの一部になる場合、結果として0個以上の他のタプルがリストから削除される可能性があるということです. ただし、他の複数のタプルがドロップされた場合、ドロップされたタプルは連続します. これは、以前に存在していた境界ポリゴンから一連のセグメントを切り取る新しい線を視覚化することにより、幾何学的に確認できます. カットオフセグメントは、オーバーヘッド値で並べ替えられたリスト内の連続するタプルの幾何学的な同等物に次々に接続されます. ドロップされたセットのいずれかの方向を超えると、以前に選択されたリストにあったすべてのタプルが更新されたタプルになります. 2番目の観察は、新しい候補者は別として、

これら2つの観察の結果、新しい候補の配置と削除されたタプルのセット（存在する場合）の範囲が決定されると、残りのタプルを候補リストから選択されたリストに直接コピーできます. それらの順序を維持します. この結論は、次の変更されたアルゴリズムを示唆しています. 

o基本的なアルゴリズムのステップ1〜4を実行します. 

o新しい候補者がステップ2と4を乗り越え、選択されたリストの新しい最初のメンバーになった場合、別の候補者が選択されたリストに追加されるまで、後続の候補者に対してステップ5から9を実行します. 次に、残りのすべての候補を選択したリストに移動し、順序を維持します. 

o新しい候補がステップ2と4を生き延び、選択されたリストの新しい最初のメンバーにならない場合は、最初に、候補リスト内のすべてのタプルを新しい候補のオーバーヘッド値よりも低いオーバーヘッド値で選択リストに移動し、それらを保持します. 注文. 新しい候補に対してステップ5から9を実行します. ただし、選択リストのタプルの交差値と最大パケットレートは、以前に保存されていなかったため、オンザフライで計算する必要があります. 次のタプルが選択されたリストに追加されるまでのみ処理を続行し、残りのすべての候補を選択されたリストに移動して、順序を維持します. 

新しい候補を選択したリストに追加して、次のタプルが処理されたときに再びドロップできることに注意してください. この場合、新しい候補は、選択されたリスト内の以前のタプルを置き換えません. ASCIIアートの制限により、これを図に表示するのは困難です. 図1の線cc..cは、勾配が急である（タプルCのオーバーヘッド値が高い）場合の例ですが、線aa..aが線bb..bと交差する場所を超えて線aa..aと交差しています. 

選択したリスト外のタプルは考慮されないため、ここで説明したアルゴリズムは概算です. このようなタプルがどのように関連するようになるかを確認するために、図1を検討し、タプルAの最大合計メディアビットレートが、ラインaa..aがラインcc..cの外側に移動するポイントまで増加するとします. タプルAは、メディアセンダーによって計算された境界セットに残ります. ただし、新しいTMMBNを発行すると、メディアレシーバーCはアルゴリズムを適用し、そのタプルCが境界セットに入る必要があることを検出します. TMMBRをメディアセンダーに発行し、計算を繰り返して適切な結論を導きます. 

セクション4.2の規則では、メディアレシーバーがTMMBNに応答する機会が得られるまで、メディアセンダーが送信レートを上げないようにする必要があります. 上記の例では、この遅延により、タプルAの緩和によって、Cの容量を超えるレートでメディアを送信する試みが実際に発生しないことが保証されます. 

3.5.4.3. ミキサーベースのマルチポイント操作でのTMMBRの使用
[RFC5117]のTopo-Mixerに示されているように、小規模なミキサーベースのマルチパーティ会議が進行中であると想定します. すべての参加者が、このセッションで使用できる共通の最大ビットレートをネゴシエートしました. 会議は、参加者とミキサー間の多数のユニキャストパスを介して動作します. これらの各パスの輻輳状況は、問題の参加者とミキサーによって、たとえばRTCP受信者レポート（RR）またはトランスポートプロトコル（データグラム輻輳制御プロトコル（DCCP）[RFC4340]など）を使用して監視できます. ただし、特定の参加者は、他の参加者への接続の混雑状況を認識していません. さらに悪いことに、このドキュメントで説明されているメカニズムと同様のメカニズムがなければ、ミキサー（管理するすべての接続の輻輳状況を認識する）には、メディアセンダーに減速するように通知する標準化された手段がなく、独自のレシーバーレポートを偽造することはできません（これは望ましくありません）. 原則として、このような状況に直面したミキサーは、輻輳を検出した接続を対象としたシンストリームまたはトランスコードストリームを実行する必要があります. 

実際には、残念ながら、メディア対応ストリーミング間引きは非常に困難で扱いにくい操作であり、望ましくない遅延を追加します. メディアを認識しない場合、それは非常に迅速に許容できない再生メディア品質につながります. したがって、ミキサーへの接続に輻輳がない場合でも、送信者を遅くする手段が望まれます. 

トランスコーディングを実行せずにミキサーが個々のリンクのトラフィックを抑制できるようにするには、ミキサーが参加者のメディアエンコーダーに要求して、現在生成しているメディアストリームのビットレートを制限できるようにするメカニズムが必要です. TMMBRは必要なメカニズムを提供します. ミキサーは、ミキサーと特定の参加者の間の輻輳を検出すると、次の手順を実行します. 

1.混雑している参加者へのメディアトラフィックを、サポートされているビットレートに間引き始めます. 

2. TMMBRを使用して、メディア送信者にミキサーに送信された合計メディアビットレートを、最も遅いリンクの輻輳制御原則に準拠する値まで下げるように要求します. ここで低速とは、輻輳制御後の使用可能な帯域幅/ビットレート/容量とパケットレートを指します. 

3.送信部分によってビットレートが削減されるとすぐに、ストリームが輻輳制御に準拠するとそれが不要になるため、ミキサーは暗黙的にストリームの間引きを停止します. 

ストリーム間引きを即時の反応ツールとして使用し、その後に迅速な制御メカニズムを使用することは、メディアの品質と輻輳と戦う必要性との間の合理的な妥協であると思われます. 

3.5.4.4. マルチキャストまたはトランスレータを使用したポイントツーマルチポイントでのTMMBRの使用

これらのトポロジでは、Topo-MulticastまたはTopo-Translatorに対応し、RTCP RRはグローバルに送信されます. これにより、すべての参加者が中程度のタイムスケールで輻輳などの送信の問題を検出できます. すべてのメディアセンダーはすべてのメディアレシーバーの輻輳状況を認識しているため、前のセクションでのTMMBRの使用の根拠は適用されません. ただし、この場合でも、ユニキャストリンクが輻輳制御トランスポートプロトコル（TCPやDCCPなど）を使用している場合は、輻輳制御応答を改善できます. ピアは、メディアの送信者にローカルの制限を報告する場合もあります. 

3.5.4.5. ポイントツーポイント操作でのTMMBRの使用
ユースケース7では、TMRBRを使用して、ビットレートの既知の上限が変化したときにパフォーマンスを向上させることができます. この使用例では、シグナリングプロトコルは、セッションと合計メディアビットレートの上限を設定しています. ただし、トランスポートリンクのビットレート削減時に、受信側はTMMBRを送信側に送信することで深刻な輻輳を回避できます. このように、TMMBRは、アプリケーションに制限を課すために、そして輻輳制御メカニズムを適切な球場に置くために役立ちます. ただし、TMMBRは通常、実際の輻輳制御に必要な継続的に高速なフィードバックループを提供できません. また、その目的は、その目的が異なるため、輻輳制御のセマンティクスと一致しません. これらの理由から、TMMBRは輻輳制御の代わりとして使用されるべきではありません. 

3.5.4.6. 信頼性
TMMBRメッセージの受信に対するメディア送信者の反応は、メディアストリームの検査ではすぐには識別できません. したがって、TMMBRメッセージの不必要な再送信を回避するために、より明示的なメカニズムが必要です. 統計ベースの再送信スキームを使用すると、受信されるリクエストの統計的保証のみが提供されます. また、すでに受信したメッセージの再送信も避けられません. さらに、他の参加者の要求を簡単に抑制することはできません. これらの理由により、明示的な通知に基づくメカニズムが使用されます. 

TMMBRを受信すると、メディアセンダーは、現在の境界セットを含み、どのセッション参加者がその制限を所有しているかを示すTMMBNを送信します. マルチキャストシナリオでは、制限が現在のものよりも厳しくない場合（つまり、セクション2.2で定義されているように実行可能領域の外側にあるラインを定義する場合）、他のすべての参加者が要求を抑制することができます. タプルの境界セットのみを保持して通知することで、メッセージサイズとメディア送信者の状態を小さくすることができます. メディア送信側は、タプルの境界セットの現在の所有者のSSRCの状態のみを保持します. 他のすべてのリクエストとそのソースは保存されません. 境界セットが確立されると、新しいTMMBRメッセージは、境界タプルの所有者と、（セクション3.5.4のアルゴリズムを適用して）決定する他のエンティティによってのみ生成されます. 

4. RTCP受信者レポート拡張
このメモは、6つの新しいフィードバックメッセージを指定します. 完全イントラリクエスト（FIR）、時間空間トレードオフリクエスト（TSTR）、時間空間トレードオフ通知（TSTN）、およびビデオバックチャネルメッセージ（VBCM）は、セクション6.3で定義されている「ペイロード固有のフィードバックメッセージ」です.  AVPF [RFC4585]の. 一時最大メディアストリームビットレート要求（TMMBR）および一時最大メディアストリームビットレート通知（TMMBN）は、AVPFのセクション6.2で定義されている「トランスポート層フィードバックメッセージ」です. 

新しいフィードバックメッセージは、AVPF仕様[RFC4585]のセクション6.2および6.3と同様の構造に従って、次のサブセクションで定義されています. 

4.1. 拡張メカニズムの設計原則
RTCPは、本来、存在、受信品質の統計、および必要なメディアコーディングに関するヒントを伝えるチャネルとして導入されました. 限られたメディア制御メカニズムのセットが、たとえばRFC 2032 [RFC2032]（RFC 4587 [RFC4587]で廃止）のように、ビデオ形式の初期のRTPペイロード形式で導入されました. ただし、この仕様は初めて、一部のメッセージに対して双方向ハンドシェイクを提案しています. この導入は、RTPセッション制御プロトコルとしてRTCPを使用するための前例として誤解される危険性があります. このような誤解を防ぐために、このサブセクションでは、このメモで指定された拡張機能の範囲を明確にすることを試みます. また、今後の拡張機能は、ここに明記された根拠に従うか、根拠から逸脱する理由を説得力をもって説明することを強くお勧めします

このメモとAVPF [RFC4585]では、次のようなメッセージのみが含まれています. 

a）比較的厳しいリアルタイム制約があり、ほとんどのアプリケーションシナリオでSIP再招待などのメカニズムの使用が妨げられます（リアルタイム制約は、必要に応じてメッセージごとに個別に説明されます）. 

b）メッセージごとに必要に応じて、潜在的に矛盾するフィードバックメッセージへの対応が指定されているという点でマルチキャストセーフです. そして

c）特定のメディアコーデック、メディアコーデックのクラス（ビデオコーデックなど）、または特定のRTPパケットストリームのアクティビティに直接関連しています. 

このメモでは、双方向ハンドシェイクは以下のメッセージに対してのみ導入されています. 

a）その性質上、通知または確認が必要です. この要件が存在するかどうかを判断する分析は、メッセージごとに個別に実行されました. 

b）通知または確認は、メディアビットストリームから簡単に取得できません. 

AVPF [RFC4585]およびこのメモのすべてのメッセージは、単純な固定バイナリ形式でコンテンツを提示します. これは、メディアパスに高度な制御プロトコル機能（SDP、XMLパーサーなど）を実装していないメディアレシーバーに対応します. 

説明した設計原則に準拠していないメッセージは、RTCPまたはこのドキュメントで定義されているコーデック制御フレームワークの適切な使用ではありません. 

4.2. トランスポート層フィードバックメッセージ
RFC 4585 [RFC4585]のセクション6.1で指定されているように、トランスポート層フィードバックメッセージは、RTCPパケットタイプ値RTPFB（205）によって識別されます. 

AVPFでは、このカテゴリのメッセージが1つ定義されています. このメモは、そのようなメッセージをさらに2つ指定しています. これらは、次のようにフィードバックメッセージタイプ（FMT）パラメータによって識別されます. 

AVPFで割り当て[RFC4585]：

1：Generic NACK 31：識別子番号スペースの将来の拡張のために予約されています

このメモで割り当て：

      2：予約済み（下記の注を参照）
      3：一時的な最大メディアストリームビットレート要求（TMMBR）
      4：一時的な最大メディアストリームビットレート通知（TMMBN）
        
注：AVPF [RFC4585]の初期のバージョンでは、後で削除されるコードポイント用にFMT = 2が予約されていました. 期限切れのドキュメントに従って、この値を使用するフィールドでの実装が存在する可能性があることが指摘されています. 利用可能な十分な番号付けスペースがあるので、FMT = 2を予約済みとしてマークし、そのような初期の実装で起こり得る相互運用性の問題を回避します. 

割り当て可能：

0：未割り当て5-30：未割り当て

次のサブセクションでは、TMMBRおよびTMMBNメッセージのフィードバック制御情報（FCI）エントリの形式をそれぞれ定義し、メディアの送信者と受信者での関連する動作を指定します. 

4.2.1. 一時最大メディアストリームビットレートリクエスト（TMMBR）
Temporary Maximum Media Stream Bit Rate Requestは、RTCPパケットタイプ値PT = RTPFBおよびFMT = 3によって識別されます. 

Temporary Maximum Media Stream Bit Rate Request（TMMBR）メッセージのFCIフィールドには、1つ以上のFCIエントリが含まれている必要があります. 

4.2.1.1. メッセージフォーマット
フィードバック制御情報（FCI）は、次の構文の1つ以上のTMMBR FCIエントリで構成されています. 

    0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | MxTBR Exp | MxTBR Mantissa |測定されたオーバーヘッド|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図2-TMMBRメッセージのFCIエントリの構文

SSRC（32ビット）：新しい最大ビットレートに従うように要求されたメディアセンダーのSSRC値. 

MxTBR Exp（6ビット）：最大合計メディアビットレート値の仮数の指数スケーリング. 値は符号なし整数[0..63]です. 

MxTBR仮数（17ビット）：符号なし整数としての最大合計メディアビットレート値の仮数. 

測定されたオーバーヘッド（9ビット）：測定された平均パケットオーバーヘッド値（バイト単位）. 測定は、セクション4.2.1.2の説明に従って行われる必要があります. 値は符号なし整数[0..511]です. 

ビット/秒単位の最大総メディアビットレート（MxTBR）値は、MxTBR指数（exp）と仮数から次のように計算されます. 

      MxTBR =仮数* 2 ^ exp
        
これにより、0〜131072 * 2 ^ 63（約1.2 * 10 ^ 24）の範囲で17ビットの解像度が可能になります. 

TMMBRフィードバックメッセージの長さは2 + 2 * Nに設定する必要があります（SHALL）. NはTMMBR FCIエントリの数です. 

4.2.1.2. 意味論
メディアレシーバー（TMMBRの送信者）での動作

TMMBRは、メディアレシーバーとして機能するレポートエンティティでのトランスポート関連の制限を示すために使用されます. TMMBRは、2つのコンポーネントを含むタプルの形式です. 最初の値は、メディアストリームの送信者ごとの最高ビットレートであり、受信者が選択したプロトコルレイヤーで利用できます. 受信者は現在、このRTPセッションでサポートしています. 2番目の値は、セクション2.2で定義され、ストリーム用に受信されたパケットの選択されたプロトコルレイヤーで測定された、測定されたヘッダーオーバーヘッド（バイト単位）です. オーバーヘッドの測定値は、次の式を使用して、この特定のメディアソース（SSRC）で受信された各パケットに対して更新される移動平均です. 

avg_OH（新）= 15/16 * avg_OH（旧）+ 1/16 * pckt_OH、

ここで、avg_OHは実行中の（指数平滑化された）平均であり、pckt_OHは最新のパケットで観察されたオーバーヘッドです. 

シグナリングを介して最大ビットレートがネゴシエートされた場合、TMMBRメッセージで受信者が報告する最大合計メディアビットレートは、共通の基準に変換されたネゴシエートされた値を超えてはなりません（つまり、同じ参照プロトコルにオーバーヘッドがかかるように調整されています）層）. 

フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは要求のソースを示し、「メディアソースのSSRC」は使用されず、設定する必要があります特定のTMMBR FCIエントリ内で、FCIフィールドの「メディアソースのSSRC」は、タプルが適用されるメディア送信者を示します. これは、レポートエンティティが複数のFCIエントリを使用して単一のTMMBRメッセージですべてのメディア送信者に対処できるマルチキャストまたはトランスレータトポロジで役立ちます. 

メディア受信者は、各メディア送信者から受信した最新のTMMBNメッセージの内容を保存するものとします（SHALL）. 

メディアレシーバーは、次の状況下でTMMBR FCIエントリを特定のメディアセンダーに送信してもよい（MAY）. 

oそのメディア送信者からTMMBNメッセージを受信する前. 

oメディアレシーバーが、そのメディアセンダーから受信した最新のTMMBNメッセージ内の境界タプルのソースとして識別され、最大合計メディアビットレートの値またはそのメディアセンダーに関連するオーバーヘッドが変更された場合. 

oメディアレシーバーが、そのメディアセンダーから受信した最新のTMMBNメッセージ内のバウンディングタプルのソースとして識別されなかった場合、およびメディアレシーバーがセクション3.5.4.2からの増分アルゴリズムまたはより厳密な同等物を適用した後、メディアレシーバーのそのメディア送信者に関連するタプルは、バウンディングセットに属すると判断されます. 

TMMBR FCIエントリは、次のRTCPパケットの送信時にメディア送信者から一時最大メディアストリームビットレート通知（TMMBN）FCIが受信されなかった場合、後続のTMMBRメッセージで繰り返される場合があります. TMMBR FCIエントリのビットレート値は、TMMBRメッセージ間で変更される場合があります. オーバーヘッド測定値は、エントリが送信されるたびにavg_OHの現在の値に更新される必要があります. 

TMMBRメッセージによって設定された値が永続的であると予想される場合、TMMBR設定パーティは、セッションセットアップシグナリング（SIP再招待など）を使用してセッションパラメータを再ネゴシエートして反映する必要があります（SHOULD）. 

メディア送信者（TMMBRの受信者）での動作

メディアセンダーは、それに関連するFCIエントリを含むTMMBRメッセージを受信すると、必要に応じて初期アルゴリズムまたは増分アルゴリズムを使用して、新しい情報に基づいてタプルの境界セットを決定する必要があります（SHALL）. 使用されるアルゴリズムは、少なくともセクション3.5.4.2で定義された対応するアルゴリズムと同じくらい厳密でなければなりません. メディア送信者は、この計算を行う前に、（RTCP送信間隔に比べて）短い間隔でTMMBRを蓄積してもよい（MAY）. 

タプルの境界セットを決定したら、メディアセンダーは、これらのタプルが説明する実現可能な領域内のパケットレートとネットメディアビットレートの任意の組み合わせを使用して、より低い合計メディアストリームビットレートを生成する必要があります. 混雑状況またはその他の制限要因. 詳細については、セクション5（輻輳制御）を参照してください. 

メディアセンダーは、最大合計メディアビットレート値を増やすことができると判断した場合、そのタプルが境界に属していると判断した場合に、メディアレシーバーがTMMBNに応答するのに十分な時間、実際に増やす前に待機する必要があります. セットする. この遅延期間は、次の式で推定されます. 

2 * RTT + T_Dither_Max、

ここで、RTTはメディア送信者にとって既知の最長の往復時間であり、T_Dither_Maxは[RFC4585]のセクション3.4で定義されています. ポイントツーポイントセッションでも、参加者がすべてのソースが単一ノードに同じ場所に配置され、調整されているかどうかを正しく判断できるとは限らないため、メディア送信者は前述のルールに従う必要があります. 

TMMBNメッセージは、TMMBNの最後の送信以降に受信されたすべてのTMMBRメッセージに応答して、可能な限り早い時点でメディア送信者によって送信される必要があります. TMMBNメッセージは、メッセージの送信時に計算された境界タプルのセットとそれらのタプルの所有者を示します. 

SSRCは、RTPセッション参加者のデフォルトルールに従ってタイムアウトする可能性があります. つまり、メディアセンダーは、最後の5つの定期的なレポート間隔で所有者からRTPまたはRTCPパケットを受信して​​いません. SSRCはセッションを明示的に終了することもでき、参加者はRTCP BYEパケットの送信または外部シグナリングチャネルを使用してこれを示します. メディアセンダーが、境界セット内のタプルの所有者がセッションを終了したと判断した場合、メディアセンダーは、以前に決定された境界タプルのセットを含む新しいTMMBNを送信する必要があります（ただし、離脱した所有者に属するタプルは削除されます）. 

メディア送信者は、送信パスが現在の制限よりも制限的であることを認識している場合、TMMBRメッセージと同等のものを自分自身にプロアクティブに開始できます（MAY）. その結果、メディアソース自体をタプルの所有者として示すTMMBNが送信され、他の参加者からの不要なTMMBRメッセージが回避されます. ただし、他の参加者と同様に、メディア送信者が変更された制限を認識した場合、タプルを変更し、対応するTMMBNを送信する必要があります. 

討論

TMMBRおよびTMMBNのトランスポートの信頼性の低い性質のため、上記のルールは、これらのルールに違反しているように見えるTMMBRメッセージの送信につながる可能性があります. さらに、マルチキャストシナリオでは、複数の「所有していない」セッション参加者が、そのタプルが境界セットに属していると正しくまたは誤って判断する場合があります. これは、いくつかの理由で重要ではありません. 

a）TMMBRメッセージの送信が失われた場合、メディアセンダーは他のメディアレシーバーに応答して新しいTMMBNメッセージを送信するか、新しいTMMBNメッセージをまったく送信しません. 最初のケースでは、メディアレシーバーはインクリメンタルアルゴリズムを適用し、タプルがバウンディングセットの一部であると判断した場合、別のTMMBRを送信します. 2番目のケースでは、TMMBRの送信を無条件に繰り返します. いずれにせよ、メディア送信者は最終的に必要な情報を取得します. 

b）同様に、TMMBNメッセージが失われた場合、対応するTMMBRを送信したメディアレシーバーは通知を受信せず、要求を再送信して別のTMMBNの送信をトリガーすることが期待されます. 

c）複数の競合するTMMBRメッセージが異なるセッション参加者によって送信された場合、これらのメッセージのすべてを考慮に入れてアルゴリズムを適用でき、結果のTMMBNは、タプルと制限付きセットとの比較方法の更新されたビューを参加者に提供します. 

d）複数のセッション参加者がTMMBRメッセージを同時にかつ同じタプルコンポーネント値で送信した場合、それらのタプルのどれがバウンディングセットに取り込まれるかは問題ではありません. 負けたセッション参加者は、アルゴリズムを適用した後、そのタプルが境界セットに入らないと判断し、そのためTMMBRの送信を停止します. 

偽造されたTMMBRに関連するセキュリティリスクを考慮することが重要です. セクション6のセキュリティに関する考慮事項をご覧ください. 

すでに示したように、フィードバックメッセージは、指定されたトポロジのいずれかで、マルチキャストセッションとユニキャストセッションの両方で使用できます. ただし、多数の参加者がいるセッションの場合、このメカニズムで必要とされる最小の共通点を使用することは、最も適切な一連のアクションではない可能性があります. 大規模なセッションでは、セッションをさまざまな品質階層に分割したり、ビットレートのスケーラビリティを実現する他の方法を使用したりするなど、参加者の機能にビットレートを適応させる他の方法を検討する必要があります. 

4.2.1.3. タイミング規則
TMMBRメッセージの最初の送信は、適時性が望ましい場合に、早期または即時のフィードバックを使用してもよい（MAY）. 要求メッセージの繰り返しは、その送信タイミングに通常のRTCPモードを使用する必要があります（SHOULD）. 

4.2.1.4. トランスレーターとミキサーでの処理
メディアトランスレーターとミキサーは、特定のメディアストリームをレシーバーに提供するチェーンの一部であるため、TMMBRメッセージを受信して​​応答する必要があります. ミキサーまたはトランスレータは、TMMBRでローカルに動作し、TMMBNを生成して、TMMBNがそれを行ったことを示します. または、メディアトランスレータの場合はリクエストを転送できます. ミキサーの場合は独自のリクエストを生成して転送できます. 後者の場合、ミキサーはTMMBNを元のリクエスタに送り返して、リクエストを処理していることを示す必要があります. 

4.2.2. 一時最大メディアストリームビットレート通知（TMMBN）
一時最大メディアストリームビットレート通知は、RTCPパケットタイプ値PT = RTPFBおよびFMT = 4で識別されます. 

TMMBNフィードバックメッセージのFCIフィールドには、0、1、またはそれ以上のTMMBN FCIエントリが含まれる場合があります. 

4.2.2.1. メッセージフォーマット
フィードバック制御情報（FCI）は、0、1、またはそれ以上のTMMBN FCIエントリで構成され、次の構文を使用します. 

    0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | MxTBR Exp | MxTBR Mantissa |測定されたオーバーヘッド|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図3-TMMBNメッセージのFCIエントリの構文

SSRC（32ビット）：このタプルの「所有者」のSSRC値. 

MxTBR Exp（6ビット）：最大合計メディアビットレート値の仮数の指数スケーリング. 値は符号なし整数[0..63]です. 

MxTBR仮数（17ビット）：符号なし整数としての最大合計メディアビットレート値の仮数. 

測定されたオーバーヘッド（9ビット）：符号なし整数[0..511]として表されるバイト単位の測定された平均パケットオーバーヘッド値. 

したがって、TMMBNメッセージ内のFCIには、境界タプルを示すエントリが含まれています. タプルごとに、エントリーはSSRCによって所有者に付与し、その後に適用可能な最大合計メディアビットレートとオーバーヘッド値が続きます. 

TMMBNメッセージの長さは2 + 2 * Nに設定する必要があります（SHALL）. NはTMMBN FCIエントリの数です. 

4.2.2.2. 意味論
このフィードバックメッセージは、1つ以上のTMMBRメッセージが受信されたこと、または所有者がセッションを終了したことをTMMBRメッセージの送信者に通知するために使用されます. これは、すべての参加者に対して、現在の境界タプルのセットとそれらのタプルの「所有者」を示します. 

フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは通知のソースを示します. 「メディアソースのSSRC」は使用されず、0に設定する必要があります. 

TMMBNメッセージは、このメディア送信者を識別するFCIエントリを持つTMMBRメッセージの受信後に送信するようにスケジュールする必要があります. 送信のスケジューリングとTMMBNメッセージの実際の送信の間に複数のTMMBRメッセージが受信された場合でも、TMMBNメッセージは1つだけ送信する必要があります. TMMBNメッセージは、メッセージの送信時の境界タプルとその所有者を示します. 含まれる境界タプルは、セクション3.5.4.2の適用可能なアルゴリズムの適用を通じて到達したセット、または以前の境界セットに適用された同等のものであり、最後のTMMBNが送信されてからTMMBRメッセージで受信されたタプルです. 

TMMBRメッセージを受信すると、アルゴリズムの適用後、新しく報告されたTMMBRタプルがバウンディングセットに受け入れられない場合でも、TMMBNメッセージが送信されます（SHALL）. そのような場合、TMMBRが以前に計算された境界セット内のタプルの所有者からのものでない限り、境界タプルとその所有者は変更されません. この手順により、最後のTMMBNメッセージを参照しなかったセッション参加者は、このメディア送信者の状態を正しく把握できます. 

セクション4.2.1.2に示されているように、メディア送信者が境界タプルの「所有者」がセッションを終了したと判断すると、そのタプルは境界セットから削除され、メディア送信者は残りの境界を示すTMMBNメッセージを送信する必要があります（SHALL）タプル. 境界タプルが残っていない場合は、FCIのないTMMBNを送信してこれを示す必要があります. 境界タプルが残っていない場合、セッションシグナリングでネゴシエートされた最大メディアビットレートと最大パケットレートが適用されます. 

注：メディアレシーバーがセッションに残っている場合、これは一時的な状況です. 空のTMMBNにより、残りのすべてのメディアレシーバーは、その制限が境界セットに属していると判断し、結果としてTMMBRを送信します. 

ユニキャストシナリオ（つまり、単一の送信者が単一の受信者と通信する場合）では、所有権を決定する前述のアルゴリズムは、メディアレシーバーが縮退し、メディアレシーバーが最初のTMMBRメッセージを発行するとすぐに、1つの境界タプルの「所有者」になります.  . 

4.2.2.3. タイミング規則
TMMBN確認応答は、セッションに適用されたタイミングルールで許可されるとすぐに送信する必要があります（SHOULD）. これらのメッセージには、即時または早期フィードバックモードを使用する必要があります. 

4.2.2.4. 翻訳者とミキサーによる処理
セクション4.2.1.4で説明したように、ミキサーまたはトランスレーターは、それらが処理するSSRCのTMMBRメッセージへの応答としてTMMBNメッセージを発行する必要がある場合があります. 

4.3. ペイロード固有のフィードバックメッセージ
RFC 4585 [RFC4585]のセクション6.1で指定されているように、ペイロード固有のFBメッセージは、RTCPパケットタイプ値PSFB（206）によって識別されます. 

AVPF [RFC4585]は、3つのペイロード固有のフィードバックメッセージと1つのアプリケーション層フィードバックメッセージを定義します. このメモは、4つの追加のペイロード固有のフィードバックメッセージを指定します. これらはすべて、FMTパラメータによって次のように識別されます. [RFC4585]で割り当てられています. 

     1：画像喪失表示（PLI）
     2：スライス喪失表示（SLI）
     3：参照画像選択表示（RPSI）
     15：アプリケーション層FBメッセージ
     31：番号スペースの将来の拡張のために予約済み
        
このメモで割り当て：

     4：Full Intra Request（FIR）コマンド
     5：時間と空間のトレードオフリクエスト（TSTR）
     6：時間と空間のトレードオフ通知（TSTN）
     7：ビデオバックチャネルメッセージ（VBCM）
        
未割り当て：

0：未割り当て8-14：未割り当て16-30：未割り当て

次のサブセクションでは、ペイロード固有のフィードバックメッセージの新しいFCI形式を定義します. 

4.3.1. 完全なイントラリクエスト（FIR）
FIRメッセージは、RTCPパケットタイプ値PT = PSFBおよびFMT = 4で識別されます. 

FCIフィールドには、1つ以上のFIRエントリが含まれている必要があります. 各エントリは、SSRCによって識別される異なるメディアセンダーに適用されます. 

4.3.1.1. メッセージフォーマット
Full Intra Requestのフィードバック制御情報（FCI）は、1つ以上のFCIエントリで構成されます. その内容を図4に示します. FIRフィードバックメッセージの長さは2 + 2 * Nに設定する必要があります. ここで、NはFCIエントリの数. 

    0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | シーケンス番号 | 予約済み|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図4-FIRメッセージのFCIエントリの構文

SSRC（32ビット）：デコーダーの更新ポイントを送信するように要求されたメディアセンダーのSSRC値. 

シーケンス番号 （8ビット）：コマンドシーケンス番号. シーケンス番号スペースは、コマンドソースのSSRCとコマンドターゲットのSSRCのペアごとに一意です. シーケンス番号は、新しいコマンドごとに256を法として1ずつ増加する必要があります. 繰り返しはシーケンス番号を増やしてはいけません. 初期値は任意です. 

予約済み（24ビット）：送信者はすべてのビットを0に設定する必要があり（SHALL）、受信時には無視する必要があります（SHALL）. 

このフィードバックメッセージのセマンティクスは、RTPペイロードタイプとは無関係です. 

4.3.1.2. 意味論
フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは要求のソースを示し、「メディアソースのSSRC」は使用されず、設定する必要がありますFIRコマンドが適用されるメディアセンダーのSSRCは、対応するFCIエントリにあります. FIRメッセージには、ターゲットメディア送信者ごとに1つのFCIエントリを使用して、複数のメディア送信者への要求が含まれる場合があります. 

FIRを受信すると、エンコーダーはできるだけ早くデコーダーの更新ポイント（セクション2.2を参照）を送信する必要があります. 

送信者は、セクション5で概説されているように輻輳制御を考慮しなければなりません. 

FIRは、画像の損失に対する反応として送信しないでください. 代わりにPLI [RFC4585]を使用することをお勧めします. FIRは、デコーダーの更新ポイントを送信しないとユーザーがビデオを使用できなくなる状況でのみ使用する必要があります（SHOULD）. 

FIRの送信が適切な一般的な例は、マルチポイント会議で新しいユーザーがセッションに参加し、通常のデコーダーの更新ポイント間隔が確立されていない場合です. 別の例は、ストリームを変更するビデオスイッチングMCUです. ここで、通常、MCUは新しい送信者にFIRを発行して、強制的にデコーダーの更新ポイントを送信させます. デコーダのリフレッシュポイントには、通常、フリーズピクチャリリース（この仕様外で定義）が含まれ、レシーバーのレンダリングプロセスを再開します. 前述の両方の手法は、MCUベースのマルチポイント会議で一般的に使用されています. 

RFC 2032 [RFC2032]などの他のRTPペイロード仕様では、特定のコーデックのフィードバックメカニズムがすでに定義されています. 両方のスキームをサポートするアプリケーションは、フィードバックを送信するときに、この仕様で定義されているフィードバックメカニズムを使用する必要があります. 下位互換性の理由から、このようなアプリケーションは、それぞれのRTPペイロード形式で定義されているフィードバックスキームを受信し、それに対応する必要があります（そのペイロード形式で必要な場合）. 

4.3.1.3. タイミング規則
タイミングは[RFC4585]のセクション3で概説されたルールに従います. FIRコマンドは、早期または即時のフィードバックで使用できます. FIRフィードバックメッセージは繰り返される場合があります. 即時フィードバックモードを使用している場合、繰り返しは送信される前に少なくとも1つのRTTを待つ必要があります. 初期または通常のRTCPモードでは、繰り返しは次の通常のRTCPパケットで送信されます. 

4.3.1.4. ミキサーとトランスレーターでのFIRメッセージの処理
セッション参加者がFIRを発行したコンテンツのメディアエンコーディングを実行するメディアトランスレーターまたはミキサーは、それに基づいて行動する責任があります. FIRに作用するミキサーは、メッセージを変更せずに転送しないでください. 代わりに、FIR自体を発行する必要があります. 

4.3.1.5. 備考
現在、ビデオはFIRの唯一の有用なアプリケーションであるように見えます. RTPパケットの境界を越えてメディア予測に大きく依存する、広く展開されている唯一のRTPペイロードであると思われるためです. ただし、FIRの使用は、圧縮されたビデオと本質的なプロパティを共有する他のメディアタイプ、つまりクロスフレーム予測（そのフレームがそのメディアタイプのものであってもよい）でも合理的に想定できます. 考えられる1つの例は、MPEG-4シーン記述の動的更新です. そのようなメディアタイプのペイロード形式は、ペイロード仕様で同様のメカニズムを作成する代わりに、この仕様およびAVPF [RFC4585]で定義されたFIRおよびその他のメッセージタイプを参照することをお勧めします. ペイロードの仕様では、ペイロード固有の用語が、ここで使用されるビデオ中心の用語にどのように対応するかを説明する必要があります. 

ビデオコーデックと組み合わせて、FIRメッセージは通常、完全なイントラまたはIDR画像の送信をトリガーします. どちらも予測（インター）ピクチャの数倍の大きさです. それらのサイズは、生成される時間とは無関係です. ほとんどの環境、特に帯域幅が制限されたリンクを使用する場合、イントラ画像の使用は、通常のフレーム期間のかなりの倍数である許容遅延を意味します. 例：送信フレームレートが10 fpsで、イントラピクチャがインターピクチャの10倍の大きさであると想定されている場合、1秒のレイテンシを受け入れる必要があります. このような環境では、FIRメッセージの送信に特に短い遅延は必要ありません. したがって、[RFC4585]に従ってRTCPタイミングルールで許可されている次の可能なタイムスロットを待つことは、システムパフォーマンスに過度に悪影響を与えるべきではありません. 

デコーダのリフレッシュポイントの送信を完了するための最大遅延を必須にすることは、アプリケーションの観点からは望ましいでしょうが、輻輳制御の観点からは問題があります. 上記の「できるだけ早く」は妥当な妥協案のようです. 

送信者がコーデックを制御できない環境（たとえば、事前に記録および事前にコーディングされたコンテンツをストリーミングする場合）では、このコマンドに対する反応を指定できません. 送信側の1つの適切な反応は、ビデオビットストリームを次のデコーダーリフレッシュポイントに転送することです. 他のシナリオでは、たとえば大きなマルチキャストグループにストリーミングする場合など、コマンドにまったく反応しない方が望ましい場合があります. 他の反応も起こり得る. 戦略を決定するとき、送信者は受信グループのサイズ、FIRメッセージの送信者の「重要性」（ただし、この特定のアプリケーションでは「重要性」を定義することができます）、コンテンツ内のデコーダの更新ポイントなど. しかしながら、

Picture Loss IndicationとFIRの関係は次のとおりです. AVPF [RFC4585]のセクション6.3.1で説明されているように、Picture Loss Indicationはデコーダにピクチャの損失を通知し、したがってエンコーダとデコーダの間の参照ピクチャのミスアラインメントの可能性を通知します. このようなシナリオは通常、進行中の接続の損失に関連しています. ポイントツーポイントのシナリオで、高度なエラー回復ツールが存在しない場合、エンコーダーの1つの可能なオプションは、デコーダーの更新ポイントを送信することです. ただし、他のオプションがあります. 1つの例は、埋め込まれたストリームの冗長性が妥当な時間内に再生された画像をクリーンアップする可能性が高いため、メディア送信者がPLIを無視することです. 対照的に、FIRは（リアルタイム）エンコーダーにデコーダーのリフレッシュポイントを送信せざるを得ません. 

4.3.2. 時間と空間のトレードオフリクエスト（TSTR）
TSTRフィードバックメッセージは、RTCPパケットタイプ値PT = PSFBおよびFMT = 5によって識別されます. 

FCIフィールドには、1つ以上のTSTR FCIエントリが含まれている必要があります. 

4.3.2.1. メッセージフォーマット
時間と空間のトレードオフ要求のFCIエントリの内容を図5に示します. フィードバックメッセージの長さは2 + 2 * Nに設定する必要があります. Nは含まれるFCIエントリの数です. 

    0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | シーケンス番号 | 予約済み| インデックス|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図5-TSTRメッセージのFCIエントリの構文

SSRC（32ビット）：インデックスで指定されたトレードオフ値を適用するように要求されたメディアセンダーのSSRC. 

シーケンス番号 （8ビット）：要求シーケンス番号. シーケンス番号スペースは、要求ソースのSSRCと要求ターゲットのSSRCのペアに対して一意です. シーケンス番号は、新しいコマンドごとに256を法として1ずつ増加する必要があります. 繰り返しはシーケンス番号を増やしてはいけません. 初期値は任意です. 

予約済み（19ビット）：送信者はすべてのビットを0に設定する必要があり（SHALL）、受信時には無視する必要があります（SHALL）. 

インデックス（5ビット）：要求される相対的なトレードオフを示す0〜31の整数値. インデックス値0は可能な限り最高の空間品質を示し、31は可能な限り最高の時間分解能を示します. 

4.3.2.2. 意味論
デコーダーは、TSTRメッセージをエンコーダーに送信することで、時間と空間のトレードオフレベルを提案できます. エンコーダーが時間と空間のトレードオフを調整できる場合、将来の画像のコーディングのために受信したTSTRメッセージを考慮する必要があります. 値0は高い空間品質を示し、値31は高いフレームレートを示します. 0から31までの値の推移は、より高いフレームレートへの要望が単調であることを示しています. インデックス値は、空間品質またはフレームレートの正確な値に対応していません. 

異なるメディアレシーバーからのメディアセンダーによる複数のTSTRメッセージの受信に対する反応は、実装に対してオープンなままです. 選択されたトレードオフは、TSTNメッセージによってメディアレシーバーに伝達される必要があります. 

フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは要求のソースを示し、「メディアソースのSSRC」は使用されず、設定する必要がありますTSTRが適用されるメディアセンダーのSSRCは、対応するFCIエントリにあります. 

TSTRメッセージには、ターゲットメディアセンダーごとに1つのFCIエントリを使用して、複数のメディアセンダーへのリクエストが含まれる場合があります. 

4.3.2.3. タイミング規則
タイミングは[RFC4585]のセクション3で概説されたルールに従います. この要求メッセージはタイムクリティカルではなく、通常のRTCPタイミングを使用して送信する必要があります. ユーザーインターフェースが迅速なフィードバックを必要とすることがわかっている場合にのみ、メッセージは早期または即時のフィードバックタイミングで送信される場合があります. 

4.3.2.4. ミキサーとトランスレーターでのメッセージの処理
TSTRを発行するセッション参加者に送信されるコンテンツをエンコードするミキサーまたはメディアトランスレータは、リクエストを考慮して、独自のエンコードパラメータを変更することでそれを実行できるかどうかを判断します. 要求を満たすことができないメディアトランスレータは、要求を変更せずにメディア送信者に転送してもよい（MAY）. 複数のセッション参加者用のミキサーエンコーディングでは、メディア送信者に代わってTSTRを生成する前に、これらの参加者の共同ニーズを考慮する必要があります. セクション3.5.2の説明も参照してください. 

4.3.2.5. 備考
「空間品質」という用語は、再構成されたビデオが使用しているピクセル数によって測定される解像度を必ずしも指すとは限りません. 実際、ほとんどのシナリオでは、セッションの存続期間中、ビデオ解像度は一定のままです. ただし、すべてのビデオ圧縮規格には、特定の解像度で空間品質を調整する手段があり、多くの場合、量子化パラメーターまたはQPの影響を受けます. 数値的に低いQPは良い再構成された画像品質をもたらし、数値的に高いQPは粗い画像をもたらします. この要求に対するエンコーダの典型的な反応は、レート制御パラメータを変更して、低いフレームレートと数値的に低い（平均）QPを使用するか、またはその逆を行うことです. インデックス値とフレームレートおよびQPの正確なマッピングは、ここでは意図的に開いたままにしておきます. 

4.3.3. 時空間トレードオフ通知（TSTN）
TSTNメッセージは、RTCPパケットタイプ値PT = PSFBおよびFMT = 6で識別されます. 

FCIフィールドには、1つ以上のTSTN FCIエントリが含まれている必要があります（SHALL）. 

4.3.3.1. メッセージフォーマット
時間と空間のトレードオフ通知のFCIエントリの内容を図6に示します. TSTNメッセージの長さは2 + 2 * Nに設定する必要があります（NはFCIエントリの数です）. 

    0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | シーケンス番号 | 予約済み| インデックス|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図6-TSTNの構文

SSRC（32ビット）：この通知の原因となったTSTRのソースのSSRC. 

シーケンス番号 （8ビット）：確認中のTSTRからのシーケンス番号値. 

予約済み（19ビット）：送信者はすべてのビットを0に設定する必要があり（SHALL）、受信時には無視する必要があります（SHALL）. 

インデックス（5ビット）：メディア送信者が今後使用するトレードオフ値. 

参考情報：メディアエンコーダーがトレードオフを調整できない場合や、事前に記録されたコンテンツが使用されている場合など、返されるトレードオフ値（インデックス）は、要求された値と異なる場合があります. 

4.3.3.2. 意味論
このフィードバックメッセージは、TSTRの受信を確認するために使用されます. セッション参加者をターゲットにして受信したTSTRごとに、TSTN FCIエントリをTSTNフィードバックメッセージで送信する必要があります. 単一のTSTNメッセージは、複数のFCIエントリを使用して複数のリクエストを確認する場合があります. 含まれるインデックス値は、TSTNメッセージのすべてのFCIエントリで同じである必要があります. 各リクエスタにFCIを含めることにより、各リクエストエンティティはメディア送信者がリクエストを受信したことを確認できます. 通知は、受信したTSTRの繰り返しに応答して送信される必要もあります. リクエストレシーバーが単一のリクエスターからいくつかの異なるシーケンス番号を持つTSTRを受け取った場合、それは最も高い（モジュロ256）シーケンス番号を持つリクエストにのみ応答するものとします（SHALL）. フィールドの折り返しにより、最大のシーケンス番号は小さい整数値になる場合があることに注意してください. [RFC3550]の付録A.1には、RTPパケットの最大受信シーケンス番号を追跡するアルゴリズムがあります. この使用法に適合させることができます. 

TSTNには、リクエストの結果として使用される時間と空間のトレードオフインデックスが含まれている必要があります. メディア送信者は、複数の要求セッション参加者からの要求を集約する必要がある場合があるため、これは要求されたものと必ずしも同じインデックスではありません. また、選択を制限する他のいくつかのポリシーまたはルールがある場合もあります. 

フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは通知のソースを示し、「メディアソースのSSRC」は使用されず、設定する必要があります通知が適用される要求エンティティのSSRCは、対応するFCIエントリにあります. 

4.3.3.3. タイミング規則
タイミングは[RFC4585]のセクション3で概説されたルールに従います. この確認応答メッセージは、非常にタイムクリティカルではなく、通常のRTCPタイミングを使用して送信する必要があります. 

4.3.3.4. ミキサーおよびトランスレーターでのTSTNの処理
TSTRに作用するミキサーまたはトランスレータは、対応するTSTNも送信する必要があります. TSTR自体を転送する必要がある場合は、TSTRが応答されるまで通知メッセージを遅らせる必要があります. 

4.3.3.5. 備考
なし. 

4.3.4. H.271ビデオバックチャネルメッセージ（VBCM）
VBCMは、RTCPパケットタイプ値PT = PSFBおよびFMT = 7で識別されます. 

FCIフィールドには、1つ以上のVBCM FCIエントリが含まれている必要があります. 

4.3.4.1. メッセージフォーマット
VBCMインジケーション内のFCIエントリの構文を図7に示します. 

   0 1 2 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | SSRC |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | シーケンス番号 | 0 | ペイロードタイプ| 長さ|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
   | VBCMオクテット文字列.... | パディング|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
図7-VBCMのFCIエントリの構文

SSRC（32ビット）：VBCMに反応するようにエンコーダーに指示するように要求されたメディアセンダーのSSRC値. 

シーケンス番号 （8ビット）：コマンドシーケンス番号. シーケンス番号スペースは、コマンドソースのSSRCとコマンドターゲットのSSRCのペアに対して一意です. シーケンス番号は、新しいコマンドごとに256を法として1ずつ増加する必要があります. 繰り返しはシーケンス番号を増やしてはいけません. 初期値は任意です. 

0：送信者が0に設定する必要があり、メッセージの受信者による処理は行わないでください. 

ペイロードタイプ（7ビット）：VBCMビットストリームを解釈する必要があるRTPペイロードタイプ. 

長さ（16ビット）：パディングオクテットを除いたオクテット単位のVBCMオクテット文字列の長さ. 

VBCMオクテット文字列（可変長）：これは、特定のフィードバックサブメッセージを運ぶデコーダーによって生成されるオクテット文字列です. 

パディング（可変長）：ビットを0に設定して32ビット境界を構成します. 

4.3.4.2. 意味論
VBCMインジケーションの「ペイロード」は、さまざまなタイプのコーデック固有のフィードバック情報を伝達します. フィードバック情報のタイプは、「ステータスレポート」（ビットストリームがエラーなしで受信されたこと、または部分的または完全な画像またはブロックが失われたことの指示など）または「更新要求」（完全なリフレッシュなど）に分類できます. ビットストリームの）. 

注：VBCMサブメッセージとFIRなどのCCM / AVPFフィードバックメッセージの間には、重複する可能性があります. 詳細については、セクション3.5.3を参照してください. 

VBCMで運ばれるさまざまなタイプのフィードバックサブメッセージは、[H.271]で定義されている「payloadType」で示されます. これらのサブメッセージタイプは、便宜上以下に再現されています. 「payloadType」、ITU-T Rec. H.271用語は、H.271メッセージのサブタイプを指し、RTPペイロードタイプと混同しないでください. 

   ペイロードメッセージコンテンツ
   タイプ
   -------------------------------------------------- -------------------
   0検出されたビットストリームエラーのない1つ以上の画像
          ミスマッチ
   1完全にまたは部分的に失われた1つ以上の画像
   2全体的または部分的に1つの画像のブロックのセット
          負けた
   1つのパラメーターセットの3 CRC
   特定のタイプのすべてのパラメーターセットの4 CRC
   5送信者が完全にすべきであることを示す「リセット」リクエスト
          以前のビットストリームデータがないかのようにビデオビットストリームを更新する
          受け取っていた
   > 5 ITU-Tによる将来の使用のために予約済み
        
表2：H.271メッセージタイプ（「payloadTypes」）

VBCMのビット文字列または「ペイロード」は可変長であり、自己完結型であり、可変長のバイナリ形式でコーディングされます. メディア送信者は、VBCMを使用するために、この最適化されたバイナリ形式を解析できる必要があります. 

異なるタイプのサブメッセージ（payloadTypeで示される）はそれぞれ、使用されるコーデックに応じて異なるセマンティクスを持つ場合があります. 

フィードバックメッセージの共通パケットヘッダー（[RFC4585]のセクション6.1で定義）内で、「パケット送信者のSSRC」フィールドは要求のソースを示し、「メディアソースのSSRC」は使用されず、設定する必要がありますVBCMが適用されるメディアセンダーのSSRCは、対応するFCIエントリにあります. VBCMの送信者は、H.271メッセージを複数のメディア送信者に送信してもよく（MAY）、複数のH.271メッセージを同じVBCM内の同じメディア送信者に送信してもよい（MAY）. 

4.3.4.3. タイミング規則
タイミングは[RFC4585]のセクション3で概説されたルールに従います. サブメッセージのタイプが異なれば、使用するメッセージのタイミングに関して異なるプロパティが存在する場合があります. 複数の異なるタイプが同じフィードバックパケットに含まれている場合は、最も厳しい要件を持つサブメッセージタイプの要件に従う必要があります. 

4.3.4.4. ミキサーまたはトランスレーターでのメッセージの処理
ミキサーまたはトランスレーターでのVBCMの処理は、サブメッセージタイプに依存します. 

4.3.4.5. 備考
H.271メッセージおよびAVPF [RFC4585]で定義されているメッセージの使用法と、同様の機能を持つこのメモについては、セクション3.5.3を参照してください. 

注：このメッセージのRTPペイロードタイプフィールドが必要かどうかについては、いくつかの議論がありました. 同じセッションに複数のVBCM対応RTPペイロードタイプが潜在的に存在し、特定のVBCMのセマンティクスがペイロードタイプ間で変化する場合に必要になります. たとえば、H.271タイプ0のメッセージの画像識別メカニズムは、H.263とH.264で基本的に異なります（どちらも同じ構文を使用します）. したがって、ペイロードフィールドはここで正当化されます. TSTRとFIRのセマンティクスは、現在存在/想定されているすべてのビデオペイロードに適用できるように、十分に緩やかに定義されているか、十分に一般的であるため、TSTRとFIRにはそのようなニーズは存在しないというコメントもありました. 

5.輻輳制御
AVPF [RFC4585]タイミングルールを正しく適用すると、フィードバックメッセージがネットワークに殺到するのを防ぎます. したがって、正しい実装と構成を前提として、RTCPチャネルはそのビットレートのコミットメントを破ることができず、輻輳を引き起こすことはありません. 

フィードバックメッセージの一部を受信すると、メディア送信者、より具体的にはメディアエンコーダーの動作が変更されます. 

したがって、変更された動作は、輻輳制御のアプリケーションが提供する帯域幅制限を尊重する必要があります. たとえば、メディアセンダーがFIRに反応する場合、デコーダーのリフレッシュポイントの送信が遅い場合でも、ユーザーエクスペリエンスに問題がある場合でも、デコーダーのリフレッシュポイントを構成する非常に多くのパケットを輻輳制御アルゴリズムに従ってペース調整する必要があります.  . 

Temporary Maximum Media Stream Bit Rate値の変更は、輻輳を緩和するだけであり、輻輳制御も使用されている限り、輻輳を引き起こすことはありません. 要求による値の増加は、その送信レートをその値まで増加するときに輻輳制御を使用するようにメディア送信者に要求します. 値を小さくすると、伝送ビットレートが低下するため、輻輳のリスクが減少します. 

6.セキュリティに関する考慮事項
定義されたメッセージには、セキュリティに影響を与える特定のプロパティがあります. これらは、このプロトコルのユーザーが対処し、考慮する必要があります. 

定義されたセットアップシグナリングメカニズムは、次善の構成でセッションが作成され、最悪の場合はセッションが拒否される可能性がある変更攻撃に敏感です. このタイプの攻撃を防ぐには、セットアップシグナリングの認証と整合性保護が必要です. 

この仕様で定義されているタイプの偽装または悪意を持って作成されたフィードバックメッセージは、次の影響を与える可能性があります. 

a. 最大値を非常に低い値に設定する偽のTMMBRメッセージにより、メディアビットレートが大幅に低下しました. 

b. 境界タプルの所有権をTMMBNメッセージ内の誤った参加者に割り当てます. 誤って識別された所有者がタプルの変更を報告し、正しい所有者が正しいTMMBNメッセージまで変更を保留する可能性があるため、境界セットに不要な振動が発生する可能性があります. 参加者に届きます. 

c. ユーザーの希望とは異なるビデオ品質をもたらすTSTRを送信し、セッションの有用性を低下させます. 

d. デコーダーのリフレッシュポイントが頻繁に使用されるため、複数のFIRコマンドを送信してフレームレートを下げ、ビデオをぎくしゃくさせます. 

これらの攻撃を防ぐには、フィードバックメッセージの認証と整合性保護を適用する必要があります. これは、Secure RTP [SRTP]とAVPFをSAVPF [SAVPF]に組み合わせたRTPプロファイルを使用して、現在のRTPセッションの外部の脅威に対して実行できます. ミキサーの場合、ミキサーと参加者の間に個別のセキュリティコンテキストとフィルタリングを適用できるため、ミキサー上の他のユーザーを不正な参加者から保護できます. 

7. SDPの定義
[RFC4585]のセクション4は、新しいSDP [RFC4566]属性、rtcp-fbを定義します. これは、参照画像の選択、画像損失の表示など、特定のAVPFコマンドと表示を処理する機能をネゴシエートするために使用できます.  rtcp-fbは[RFC4585]のセクション4.2で説明されています. このセクションでは、rtcp-fb属性を拡張して、このドキュメントでコーデック制御について説明されているコマンドと指示を含めます. また、コーデック制御コマンドと表示に対するオファー/アンサーの影響についても説明します. 

7.1. rtcp-fb属性の拡張
AVPF [RFC4585]で説明されているように、rtcp-fb属性は、RTCPフィードバックを使用する機能を示します. AVPFは、rtcp-fb属性はメディアレベルの属性としてのみ使用する必要があり、セッションレベルでは提供しないことを指定しています. [RFC4585]で説明されている、セッションタイプのペイロードタイプおよび複数のrtcp-fb属性に関連するrtcp-fb属性のすべてのルールは、このメモで定義されている新しいフィードバックメッセージにも適用されます. 

[RFC4585]で定義されているrtcp-fbのABNF [RFC4234]は、

"a = rtcp-fb：" rtcp-fb-pt SP rtcp-fb-val CRLF

ここで、rtcp-fb-ptはペイロードタイプであり、rtcp-fb-valは、ack、nack、trr-int、rtcp-fb-idなどのフィードバックメッセージのタイプを定義します. たとえば、画像損失表示のフィードバックのサポートを示すために、送信者はSDPで以下を宣言します

         v = 0
         o = alice 3203093520 3203093520 IN IP4 host.example.com
         s =フィードバック付きメディア
         t = 0 0
         c = IN IP4 host.example.com
         m =オーディオ49170 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 nack pli
        
このドキュメントでは、RTCPフィードバックメッセージを使用したコーデック制御のサポートを示す新しいフィードバック値「ccm」を定義します. 「ccm」フィードバック値は、サポートされている特定のコーデック制御コマンドを示すパラメータとともに使用する必要があります（SHOULD）. このドキュメントでは、次の4つのパラメーターを定義します. 

o「fir」は、Full Intra Request（FIR）のサポートを示します. o「tmmbr」は、一時最大メディアストリームビットレート要求/通知（TMMBR / TMMBN）のサポートを示します. これには、使用するセッション最大パケットレート（パケット/秒で測定）を示すオプションのサブパラメーターがあります. 含まれていない場合、これはデフォルトで無限大になります. o「tstr」は、時間と空間のトレードオフ要求/通知（TSTR / TSTN）のサポートを示します. o「vbcm」は、H.271ビデオバックチャネルメッセージ（VBCM）のサポートを示します. サポートされるH.271 "payloadType"値を識別する0個以上のサブパラメーターがあります. 

[RFC4585]で定義されているrtcp-fb-valのABNFには、新しいフィードバックタイプを定義するためのrtcp-fb-idと呼ばれるプレースホルダーがあります. 「ccm」はこのドキュメントで新しいフィードバックタイプとして定義され、ccmのパラメーターのABNFはここで定義されます（完全なABNF構文については、[RFC4585]のセクション4.2を参照してください）. 

rtcp-fb-val = / "ccm" rtcp-fb-ccm-param

   rtcp-fb-ccm-param = SP "fir"; 完全な内部リクエスト
                      / SP "tmmbr" [SP "smaxpr =" MaxPacketRateValue]
                                   ; 一時的な最大メディアビットレート
                      / SP "tstr"; 時間と空間のトレードオフ
                      / SP "vbcm" *（SP subMessageType）; H.271 VBCM
                      / SPトークン[SPバイト文字列]
                              ; 将来のコマンド/指示
   subMessageType = 1 * 8DIGIT
   バイト文字列= <[RFC4585]のセクション4.2で定義されている>
   MaxPacketRateValue = 1 * 15DIGIT
        
7.2. オファー-回答
コーデック制御プロトコルフィードバックメッセージに対するオファー/アンサー[RFC3264]の影響は、[RFC4585]で説明されているものと同様です. 提供者は、選択されたコーデックコマンドと表示をサポートする機能を示してもよい（MAY）. アンサーは、この特定のメディアセッションでサポートしたくないCCMに対応するすべてのCCMパラメータを削除する必要があります（たとえば、問題のメッセージを実装していないため、またはそのアプリケーションロジックがメッセージのサポートによって何も追加しないことを示唆しているため）値）. 回答者は、提供されているものに加えて新しいccmパラメータを追加してはなりません. 

答えはメディアセッションに拘束的であり、提供者と回答者の両方が、サポートされていると明示的に示した以外のフィードバックメッセージを使用してはなりません（MUST NOT）. 言い換えると、オファーとアンサーからのCCMパラメータの共同サブセットのみを使用できます. 

オファーまたはアンサーにCCMパラメーターを含めることは、パーティー（オファーまたはアンサー）が少なくとも対応するCCMを受信して​​それに対応できることを示していることに注意してください. 交渉されたCCMの受信により、当事者が別のCCMで応答することを義務付けられている場合、その能力も必要です. ネゴシエートされたタイプのCCMを開始することは義務付けられていませんが、通常、当事者が適切なときにCCMを開始することが期待されています. 

TMMBR表示のセッション最大パケットレートパラメータ部分は宣言型であり、オファーとアンサーの最大値を使用する必要があります. セッション最大パケットレートパラメータがオファーに存在しない場合、回答者はこれを含めることはできません. 

7.3. 例
例1：次のSDPは、H.263を使用したポイントツーポイントビデオコールを記述しています. コールの発信者は、FIRおよびTSTR / TSTNコーデック制御メッセージをサポートする機能を宣言しています. SDPは、SIPのような高レベルのシグナリングプロトコルで伝送されます. 

         v = 0
         o = alice 3203093520 3203093520 IN IP4 host.example.com
         s =ポイントツーポイントコール
         c = IN IP4 192.0.2.124
         m =オーディオ49170 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ51372 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm tstr
         a = rtcp-fb：98 ccm fir
        
上記の例では、送信者がリモートパーティからTSTRメッセージを受信すると、RTCP TSTNフィードバックメッセージに示されているように、トレードオフを調整できます. 

例2：次のSDPは、マルチパーティビデオ会議セッションをホストしているビデオミキサーに参加するSIPエンドポイントを示しています. 参加者はFIR（Full Intra Request）コーデック制御コマンドのみをサポートし、セッションの説明で宣言します. 

         v = 0
         o = alice 3203093520 3203093520 IN IP4 host.example.com
         s =マルチパーティビデオ通話
         c = IN IP4 192.0.2.124
         m =オーディオ49170 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ51372 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm fir
        
ビデオMCUがこの参加者のビデオをルーティングすることを決定すると、RTCP FIRフィードバックメッセージを送信します. このフィードバックメッセージを受信すると、エンドポイントは完全なイントラ要求を生成する必要があります. 

例3：次の例では、コーデック制御メッセージに対するオファー/アンサーの影響について説明します. 提供者は、「tstr」、「fir」、および「tmmbr」をサポートしたいと考えています. 提供されるSDPは

   ------------->オファー
         v = 0
         o = alice 3203093520 3203093520 IN IP4 host.example.com
         s =オファー/アンサー
         c = IN IP4 192.0.2.124
         m =オーディオ49170 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ51372 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm tstr
         a = rtcp-fb：98 ccm fir
         a = rtcp-fb：* ccm tmmbr smaxpr = 120
        
回答者はFIRおよびTSTR / TSTNメッセージのみをサポートすることを望んでおり、回答者のSDPは

   <----------------回答
        
         v = 0
         o = alice 3203093520 3203093524 IN IP4 otherhost.example.com
         s =オファー/アンサー
         c = IN IP4 192.0.2.37
         m =オーディオ47190 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ53273 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm tstr
         a = rtcp-fb：98 ccm fir
        
例4：次の例では、H.271ビデオバックチャネルメッセージ（VBCM）のオファー/アンサーの影響について説明します. 提供者は、VBCMとpayloadType 1（完全にまたは部分的に失われた1つ以上の画像）および2（完全にまたは部分的に失われた1つの画像のブロックのセット）のサブメッセージをサポートしたいと考えています. 

   ------------->オファー
         v = 0
         o = alice 3203093520 3203093520 IN IP4 host.example.com
         s =オファー/アンサー
         c = IN IP4 192.0.2.124
         m =オーディオ49170 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ51372 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm vbcm 1 2
        
回答者は、タイプ1のサブメッセージのみをサポートしたい

   <----------------回答
        
         v = 0
         o = alice 3203093520 3203093524 IN IP4 otherhost.example.com
         s =オファー/アンサー
         c = IN IP4 192.0.2.37
         m =オーディオ47190 RTP / AVP 0
         a = rtpmap：0 PCMU / 8000
         m =ビデオ53273 RTP / AVPF 98
         a = rtpmap：98 H263-1998 / 90000
         a = rtcp-fb：98 ccm vbcm 1
        
したがって、上記の例では、「payloadType」1で構成されるVBCM表示のみがサポートされます. 

8. IANAに関する考慮事項
   新しい値「ccm」が「rtcp-fb」でIANAに登録されました
   公開時に次の場所にある属性値レジストリ：
   http://www.iana.org/assignments/sdp-parameters
        
値の名前：ccmロングネーム：コーデック制御コマンドおよび表示リファレンス：RFC 5104

   保持するための新しいレジストリ「コーデック制御メッセージ」が作成されました
   「ccm」パラメータは、公開時に次の場所にあります. 
   http://www.iana.org/assignments/sdp-parameters
        
このレジストリへの新規登録は、[RFC2434]で定義されている「必要な仕様」ポリシーに従います. さらに、「nack」や「ack」などの追加のRTCPフィードバックタイプを示す必要があります. 

レジストリの初期コンテンツは次の値です. 

値の名前：firロングネーム：Full Intra Requestコマンド使用可能なもの：ccmリファレンス：RFC 5104

値の名前：tmmbr長い名前：使用可能な一時的な最大メディアストリームビットレート：ccm参照：RFC 5104

値の名前：tstr長い名前：時間的空間トレードオフ使用可能なもの：ccm参照：RFC 5104

値の名前：vbcmロングネーム：H.271ビデオバックチャネルメッセージ使用可：ccmリファレンス：RFC 5104
「FMT」では、
   以下の値がFMT値として登録されています. 
   RTPFBペイロードタイプのレジストリ」の値は、
   公開先：http://www.iana.org/assignments/rtp-parameters
        
   RTPFB範囲
   名前の長い名前の値のリファレンス
   -------------- --------------------------------- --- ----------
                  予約2 [RFC5104]
   TMMBR一時最大メディアストリームビット3 [RFC5104]
                  料金リクエスト
   TMMBN一時最大メディアストリームビット4 [RFC5104]
                  料金通知
        
   「FMT」には、以下の値がFMT値として登録されています
   PSFBペイロードタイプ」レジストリの値は、
   公開先：http://www.iana.org/assignments/rtp-parameters
        
   PSFB範囲
   名前の長い名前の値のリファレンス
   -------------- --------------------------------- --- ----------
   FIRFull Intra Requestコマンド4 [RFC5104]
   TSTR時空間トレードオフリクエスト5 [RFC5104]
   TSTN時空間トレードオフ通知6 [RFC5104]
   VBCMビデオバックチャネルメッセージ7 [RFC5104]
        
9.貢献者
Tom Taylorはこの仕様に非常に重要な貢献をしてくれました. 仕様の書き直しを手伝うことにより、著者は非常に感謝しています. 特に、TMMBRの境界セットを決定するためのアルゴリズムに関する部分は役に立ちました. 

10.謝辞
著者は、要件とディスカッションドキュメント[Basso]に関する作業について、Andrea Basso、Orit Levin、およびNermeen Ismailに感謝します. 

このメモのバージョンは、Roni Even、Colin Perkins、Randell Jesup、Keith Lantz、Hariikishan Desineni、Guido Franceschiniなどによってレビューされ、広くコメントされています. 著者はこれらのレビューを高く評価しています. 

11.リファレンス
11.1 規範的な参考文献
[RFC4585] Ott、J.、Wenger、S.、Sato、N.、Burmeister、C. 、およびJ. Rey、「​​リアルタイムトランスポートコントロールプロトコル（RTCP）ベースのフィードバック用の拡張RTPプロファイル（RTP / AVPF） "、RFC 4585、2006年7月. 

[RFC2119] Bradner、S. 、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月. 

[RFC3550] Schulzrinne、H.、Casner、S.、Frederick、R. 、およびV. Jacobson、「RTP：A Transport Protocol for Real-Time Applications」、STD 64、RFC 3550、2003年7月. 

[RFC4566] Handley、M.、Jacobson、V. 、およびC. Perkins、「SDP：Session Description Protocol」、RFC 4566、2006年7月. 

[RFC3264] Rosenberg、J. およびH. Schulzrinne、「オファー/アンサーモデルとセッション記述プロトコル（SDP）」、RFC 3264、2002年6月. 

[RFC2434] Narten、T. およびH. Alvestrand、「RFCでIANAの考慮事項セクションを作成するためのガイドライン」、BCP 26、RFC 2434、1998年10月. 

[RFC4234] Crocker、D. およびP. Overell、「構文仕様の拡張BNF：ABNF」、RFC 4234、2005年10月. 

11.2 参考情報
[バッソ]バッソ、A. 、レビン、O. 、およびN.イスマイル、「ビデオ制御コマンドの転送の要件」、作業中、2004年10月. 

[AVC] ITU-TとISO / IEC JTC 1の共同ビデオチーム、ITU-T勧告のドラフトと共同ビデオ仕様の最終ドラフト国際標準（ITU-T Rec. H.264 | ISO / IEC 14496-10 AVC）、 ISO / IEC MPEGとITU-T VCEGの共同ビデオチーム（JVT）、JVT-G050、2003年3月. 

[H245] ITU-T Rec. H.245、「マルチメディア通信の制御プロトコル」、2006年5月. 

[新着情報]福永聖、中井、井上、「参照画像の動的置換によるエラー耐性のあるビデオ符号化」、Proc. Globcom'96、vol. 3、pp. 1503-1508、1996. 

[SRTP] Baugher、M.、McGrew、D.、Naslund、M.、Carrara、E. 、およびK. Norrman、「Secure Real-time Transport Protocol（SRTP）」、RFC 3711、2004年3月. 

[RFC2032] Turletti、T.およびC. Huitema、「RTP Payload Format for H.261 Video Streams」、RFC 2032、1996年10月. 

[SAVPF] Ott、J. およびE. Carrara、「RTCPベースのフィードバック用の拡張セキュアRTPプロファイル（RTP / SAVPF）」、作業中、2007年11月. 

[RFC3525] Groves、C.、Pantaleo、M.、Anderson、T. 、およびT. Taylor、「Gateway Control Protocol Version 1」、RFC 3525、2003年6月. 

[RFC3448] Handley、M.、Floyd、S.、Padhye、J. 、およびJ. Widmer、「TCP Friendly Rate Control（TFRC）：Protocol Specification」、RFC 3448、2003年1月. 

[H.271] ITU-T Rec. H.271、「Video Back Channel Messages」、2006年6月. 

[RFC3890] Westerlund、M. 、「Session Description Protocol（SDP）のトランスポート独立帯域幅修飾子」、RFC 3890、2004年9月. 

[RFC4340] Kohler、E.、Handley、M. 、およびS. Floyd、「Datagram Congestion Control Protocol（DCCP）」、RFC 4340、2006年3月. 

[RFC3261] Rosenberg、J.、Schulzrinne、H.、Camarillo、G.、Johnston、A.、Peterson、J.、Sparks、R.、Handley、M. 、およびE. Schooler、「SIP：Session Initiation Protocol」 、RFC 3261、2002年6月. 

[RFC2198]パーキンス、C. 、クーベラス、I. 、ホドソン、O. 、ハードマン、V. 、ハンドラリー、M. 、ボロット、J. 、ベガ-ガルシア、A. 、およびS.フォセ-パリシス、「RTPペイロードfor Redundant Audio Data」、RFC 2198、1997年9月. 

[RFC4587]でも、R. 、「H.261ビデオストリームのRTPペイロード形式」、RFC 4587、2006年8月. 

[RFC5117] Westerlund、M. およびS. Wenger、「RTPトポロジ」、RFC 5117、2008年1月. 

[XML-MC] Levin、O.、Even、R. 、およびP. Hagendorf、「XML Control for Media Control」、Work in Progress、2007年11月. 

著者のアドレス

Stephan Wenger Nokia Corporation 975、Page Mill Road、Palo Alto、CA 94304 USA

   電話：+ 1-650-862-7368
   メール：stewe@stewe.org
        
Umesh Chandra Nokia Research Center 975、Page Mill Road、Palo Alto、CA 94304 USA

   電話：+ 1-650-796-7502
   メール：Umesh.1.Chandra@nokia.com
        
Magnus Westerlund Ericsson Research Ericsson AB SE-164 80ストックホルム、スウェーデン

   電話：+46 8 7190000
   メール：magnus.westerlund@ericsson.com
        
Bo Burman Ericsson Research Ericsson AB SE-164 80ストックホルム、スウェーデン

   電話：+46 8 7190000
   メール：bo.burman@ericsson.com
        
完全な著作権表示

Copyright（C）IETF Trust（2008）. 

このドキュメントは、BCP 78に含まれる権利、ライセンス、および制限の対象であり、ここに記載されている場合を除き、著者はすべての権利を保持します. 

このドキュメントとここに含まれる情報は「現状のまま」で提供され、寄稿者、彼/彼女の代理人、組織は（もしあれば）、インターネット社会、IETFトラスト、およびインターネットエンジニアリングタスクフォースを否認します. 明示または黙示を問わず、ここに含まれる情報の使用が商品性または特定の目的への適合性に関するいかなる権利または黙示の保証も侵害しないことを保証するものではありません. 

知的財産

IETFは、このドキュメントに記載されているテクノロジーの実装または使用に関連すると主張される可能性がある知的財産権またはその他の権利の有効性または範囲、またはそのような権利に基づくライセンスが適用される範囲と適用されない範囲について、いかなる立場も取りません. 利用できる; また、そのような権利を特定するために独立した取り組みを行ったことを表すものでもありません. RFC文書の権利に関する手順に関する情報は、BCP 78およびBCP 79にあります. 

IETF事務局に対して行われたIPR開示のコピー、および使用可能にされるライセンスの保証、または一般ライセンスを取得する試みの結果、またはこの仕様の実装者またはユーザーがそのような所有権を使用するための許可を取得できるhttp://www.ietf.org/iprのIETFオンラインIPRリポジトリから. 

IETFは、この規格を実装するために必要となる可能性のある技術をカバーする可能性のある著作権、特許、特許出願、またはその他の所有権に注意を向けるよう、利害関係者に呼びかけます. IEETのietf-ipr@ietf.orgに情報を送信してください. 