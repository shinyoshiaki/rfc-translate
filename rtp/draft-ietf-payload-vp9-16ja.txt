RFCトランス
個人情報保護方針
連絡先
イチジク
@ tex2e
https://datatracker.ietf.org/doc/html/draft-ietf-payload-vp9-16
ドラフト-ietf-payload-vp 9-16日本語訳
URL：https：//tools.ietf.org/html/rfchttps：//datatracker.ietf.org/doc/html/draft-ietf-payload-vp9-16
パッケージ：draft-ietf-payload-vp9-16
編集編集：自動生成
[検索] [txt | xml | pdf | bibtex] [トラッカー] [WG] [メール] [Diff1] [Diff2] [Nits]
        
バージョン：（draft-uberti-payload-vp9）00 01 0203標準化過程0405 06 07 08 09 10 11 12 13 14 15IPR宣言AVTCoreワーキンググループJ.UbertiインターネットドラフトS.ホルマー意図されたステータス：標準化過程M. Flodman有効期限：2021年12月12日D. Hong Google J. Lennox 8x8 / Jitsi 2021年6月10日

VP9ビデオdraft-ietf-payload-vp9-16のRTPペイロード形式

概要

この仕様では、VP9ビデオコーデックのRTPペイロード形式について説明します. ペイロード形式は、低ビットレートのピアツーピア使用から高ビットレートのビデオ会議までのアプリケーションをサポートするため、幅広い適用性があります. これには、時間的および空間的なスケーラビリティの規定が含まれています. 

このメモのステータス

このインターネットドラフトは、BCP78およびBCP79の規定に完全に準拠して提出されます. 

インターネットドラフトは、インターネット技術特別調査委員会（IETF）の作業文書です. 他のグループも作業文書をインターネットドラフトとして配布する場合があることに注意してください. 現在のインターネットドラフトのリストはhttps://datatracker.ietf.org/drafts/current/にあります. 

インターネットドラフトは、最大6か月間有効なドラフト文書であり、いつでも他の文書によって更新、置換、または廃止される可能性があります. インターネットドラフトを参考資料として使用したり、「進行中の作業」として以外に引用したりすることは不適切です. 

このインターネットドラフトは2021年12月12日に失効します. 

著作権表示

Copyright（c）2021 IETFTrustおよびドキュメントの作成者として識別された人物. 全著作権所有. 

このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります. これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください. コードコンポーネント

このドキュメントから抽出されたものには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます. 

目次

   1.はじめに. . . . . . . . . . . . . . . . . . . . . . . . 2
   2.表記法、定義、頭字語. . . . . . . . . . . . 3
   3.メディアフォーマットの説明. . . . . . . . . . . . . . . . . . 3
   4.ペイロード形式. . . . . . . . . . . . . . . . . . . . . . . 5
     4.1. RTPヘッダーの使用法. . . . . . . . . . . . . . . . . . . . 5
     4.2. VP9ペイロード記述子. . . . . . . . . . . . . . . . . 6
       4.2.1. スケーラビリティ構造（SS）:. . . . . . . . . . . . . 11
     4.3. フレームの断片化. . . . . . . . . . . . . . . . . . . 13
     4.4. スケーラブルなエンコーディングの考慮事項. . . . . . . . . . . . 13
     4.5. VP9RTPストリームの例. . . . . . . . . . . . . . . 13
       4.5.1. スケーラブルな構造のための参照画像の使用. . . . 14
   5.フィードバックメッセージとヘッダー拡張. . . . . . . . . . . 14
     5.1. 参照画像選択表示（RPSI）. . . . . . 15
     5.2. フルイントラリクエスト（FIR）. . . . . . . . . . . . . . . . 15
     5.3. レイヤー更新要求（LRR）. . . . . . . . . . . . . . . 15
   6.ペイロードフォーマットパラメータ. . . . . . . . . . . . . . . . . . 16
     6.1. SDPパラメータ. . . . . . . . . . . . . . . . . . . . . 18
       6.1.1. メディアサブタイプパラメータのSDPへのマッピング. . . . . 18
       6.1.2. オファー/回答の考慮事項. . . . . . . . . . . . . 19
   7.メディアタイプの定義. . . . . . . . . . . . . . . . . . . . 19
   8.セキュリティに関する考慮事項. . . . . . . . . . . . . . . . . . . 21
   9.輻輳制御. . . . . . . . . . . . . . . . . . . . . 21
   10.IANAの考慮事項. . . . . . . . . . . . . . . . . . . . . 22
   11.謝辞. . . . . . . . . . . . . . . . . . . . . . . 22
   12.参照. . . . . . . . . . . . . . . . . . . . . . . . . 22
     12.1. 規範的参照. . . . . . . . . . . . . . . . . . 22
     12.2. 有益な参考資料. . . . . . . . . . . . . . . . . 23
   著者のアドレス. . . . . . . . . . . . . . . . . . . . . . . 24
        
1.はじめに
この仕様は、VP9ビデオコーデック[VP9-BITSTREAM]を使用してエンコードされたビデオストリームの送信に適用可能なRTP [RFC3550]ペイロード仕様について説明しています. このドキュメントで説明されている形式は、ピアツーピアとビデオ会議の両方のアプリケーションで使用できます. 

VP9ビデオコーデックはGoogleによって開発され、以前のVP8 [RFC6386]コーデックの後継です. VP8を超える圧縮の改善およびその他の一般的な機能強化に加えて、VP9も空間的にスケーラブルなビデオエンコーディングを可能にするように設計されています. 

2.規則、定義、頭字語
キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONAL」 「このドキュメントでは、BCP 14 [RFC2119] [RFC8174]で説明されているように、ここに示すように、すべて大文字で表示される場合にのみ解釈されます. 

3.メディアフォーマットの説明
VP9コーデックは最大8つの参照フレームを維持でき、そのうち最大3つを新しいフレームで参照できます. 

VP9では、フレームが異なる解像度の別のフレームを参照フレームとして使用することもできます. （具体的には、フレームは、幅と高さが現在のフレームの1/16から現在のフレームの2倍までの任意の参照を使用できます. ）これにより、キーフレームを使用せずに内部解像度を変更できます. 

これらの機能を組み合わせることで、エンコーダーは、明示的なスケーラブルなコーディングツールを必要とせずに、時間、空間、品質のスケーラビリティモード、およびこれらの組み合わせなど、さまざまな形式の粗粒度のスケーラビリティを実装できます. 

時間レイヤーは、ビデオのさまざまなフレームレートを定義します. 空間レイヤーと品質レイヤーは、単一の入力フレームの異なる、場合によっては依存する表現を定義します. 空間レイヤーを使用すると、フレームをさまざまな解像度でエンコードできますが、品質レイヤーを使用すると、フレームを同じ解像度でさまざまな品質で（したがって、コーディングエラーの量を変えて）エンコードできます. VP9は、解像度を変更せずに空間レイヤーとして高品質レイヤーをサポートします. 以下、「空間層」という用語は、空間層と品質層の両方を表すために使用されます. 

このペイロード形式の仕様は、そのような時間的および空間的スケーラビリティ層をどのように記述および伝達できるかを定義します. 

時間的および空間的スケーラビリティ層は、負でない整数IDに関連付けられています. いずれかのタイプの最下層のIDは0であり、「ベース」の時間層または空間層と呼ばれることもあります. 

レイヤーは、空間次元または時間次元のいずれかに沿ってビットストリームから削除された場合でも、残りのビットストリームが正しくデコードできるように設計されており、エンコードする必要があります. 

用語として、このドキュメントでは、「フレーム」という用語を使用して、特定の解像度/品質の単一のエンコードされたVP9フレームを指し、「画像」という用語を使用して、ある瞬間のすべての表現（フレーム）を指します. したがって、画像は、異なる空間レイヤーをエンコードする1つ以上のフレームで構成されます. 

画像内で、空間レイヤーIDがSIDに等しいフレーム（SID> 0）は、空間レイヤーIDが低い同じ画像のフレームに依存する可能性があります. この「レイヤー間」依存関係は、フレームが以前にコーディングされたフレームに時間的に依存する従来の「画像間」依存関係のみが使用される場合と比較して、追加のコーディングゲインをもたらす可能性があります. 簡単にするために、このペイロード形式は、画像内で、レイヤー間依存関係が使用されている場合、S> 0の場合、空間レイヤーSIDフレームは直前の空間レイヤーSID-1フレームにのみ依存できると想定しています. 画像の依存関係が使用され、空間レイヤーSIDフレームは、以前にコーディングされた空間レイヤーSIDフレームのみに依存すると想定されます. 

レイヤー間および画像間の依存関係について上記の簡略化を行うと、フラグ（以下で説明するDビット）を使用して、空間レイヤーSIDフレームが空間レイヤーSID-1フレームに依存するかどうかを示します. Ｄビットが与えられると、受信機は、そのデコード可能性を決定するために、所与の空間層フレームの画像間依存構造を追加的に知る必要があるだけである. 画像間の依存構造を記述する2つのモードが可能です. 「フレキシブルモード」と「非フレキシブルモード」です. エンコーダーは、時間レイヤーIDが0に等しいキーフレームの最初のパケットでのみ2つを切り替えることができます. 

フレキシブルモードでは、各パケットに最大3つの参照インデックスを含めることができます. これらのインデックスは、画像間予測のために現在のパケットで送信されたフレームによって参照されるすべてのフレームを識別します. これにより（Dビットとともに）、レシーバーはフレームがデコード可能かどうかを識別でき、時間レイヤー構造を理解するのに役立ちます. これは各パケットで通知されるため、非常に柔軟な時間層階層と、動的に変化するスケーラビリティ構造を持つことができます. 

非フレキシブルモードでは、フレームは依存関係の固定された繰り返しパターンを使用してエンコードされます. このパターンで繰り返される一連の画像は、画像グループ（PG）と呼ばれます. このモードでは、画像グループの画像間依存関係（参照インデックス）は、スケーラビリティ構造（SS）データの一部として事前に指定する必要があります. 各パケットには、PGで記述された画像の1つを参照するためのインデックスがあり、画像間予測のために現在のパケットで送信された画像によって参照される画像を識別できます. 

（注：本書で使用する「ピクチャーグループ」は、従来からビデオコーディングで使用されている「Group of Pictures」とは異なり、キーフレームから始まる独立してデコード可能なピクチャーの連続を意味します. ）

SSデータを使用して、フレキシブルモードと非フレキシブルモードの両方でVP9ストリームに存在する各空間レイヤーの解像度を指定することもできます. 

4.ペイロード形式
このセクションでは、エンコードされたVP9ビットストリームがRTPにカプセル化される方法について説明します. ネットワーク損失を処理するには、RTP / AVPF [RFC4585]の使用をお勧めします. 仕様のすべての整数フィールドは、ネットワークオクテット順に符号なし整数としてエンコードされます. 

4.1. RTPヘッダーの使用法
VP9の一般的なRTPペイロード形式を以下に示します. 

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |V=2|P|X|  CC   |M|     PT      |       sequence number         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                           timestamp                           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           synchronization source (SSRC) identifier            |
     +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
     |            contributing source (CSRC) identifiers             |
     |                             ....                              |
     +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
     |            VP9 payload descriptor (integer #octets)           |
     :                                                               :
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               :                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
     |                                                               |
     +                                                               |
     :                          VP9 payload                          :
     |                                                               |
     |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                               :    OPTIONAL RTP padding       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        
図1

VP9ペイロード記述子についてはセクション4.2で説明します. VP9ペイロードは[VP9-BITSTREAM]で説明されています. Pビットが設定されていない限り、オプションのRTPパディングを含めないでください. 

マーカービット（M）：最上位の空間レイヤーフレームの最後のパケット（画像の最後のパケット）の場合は1に設定する必要があり、それ以外の場合は0に設定する必要があります. この図で空間スケーラビリティが使用されていない限り、これは以下で説明するEビットと同じ値になります. ストリームを書き換えて上位の空間レイヤーを削除する場合は、ターゲット空間レイヤーフレームのこのビットを1に設定する必要があることに注意してください. 

ペイロードタイプ（PT）：[RFC3551]のセクション3のポリシーに従って、VP9 RTPペイロードプロファイルを使用するアプリケーションは、各RTPセッションで使用される動的ペイロードタイプ番号を割り当て、マッピングを示すメカニズムを提供する必要があります. セッション記述プロトコル（SDP）[RFC8866]で使用されるメカニズムについては、セクション6.1を参照してください. 

タイムスタンプ：RTPタイムスタンプ[RFC3550]は、90kHzのクロックレートで入力フレームがサンプリングされた時刻を示します. 入力画像が複数のレイヤーフレームでエンコードされている場合、画像のすべてのフレームは同じタイムスタンプを持っている必要があります. 

フレームのVP9show_frameフィールドが0に設定されている場合（つまり、出力されずに参照バッファーにデータを入力することのみを目的としている場合）、そのタイムスタンプは、show_frameが1に等しい後続のフレームと同じになるように設定できます（これはVP9「スーパーフレーム」でパッケージ化された事前エンコードされたコンテンツを再生するのに便利です. これは通常、show_frame == 0フレームと後続のshow_frame == 1フレームをバンドルします. ）ただし、show_frame == 1のすべてのフレームには、一意のタイムスタンプが必要です. フィールドの2 ^ 32ラップを法として. 

残りのRTP固定ヘッダーフィールド（V、P、X、CC、シーケンス番号、SSRCおよびCSRC識別子）は、[RFC3550]のセクション5.1で指定されているように使用されます. 

4.2. VP9ペイロード記述子
フレキシブルモード（以下のFビットが1に設定されている）では、RTPヘッダーの後の最初のオクテットはVP9ペイロード記述子であり、次の構造になっています. 

         0 1 2 3 4 5 6 7
        +-+-+-+-+-+-+-+-+
        |I|P|L|F|B|E|V|Z| (REQUIRED)
        +-+-+-+-+-+-+-+-+
   I:   |M| PICTURE ID  | (REQUIRED)
        +-+-+-+-+-+-+-+-+
   M:   | EXTENDED PID  | (RECOMMENDED)
        +-+-+-+-+-+-+-+-+
   L:   | TID |U| SID |D| (Conditionally RECOMMENDED)
        +-+-+-+-+-+-+-+-+                             -\
   P,F: | P_DIFF      |N| (Conditionally REQUIRED)    - up to 3 times
        +-+-+-+-+-+-+-+-+                             -/
   V:   | SS            |
        | ..            |
        +-+-+-+-+-+-+-+-+
        
図2

非フレキシブルモード（以下のFビットが0に設定されている）では、RTPヘッダーの後の最初のオクテットはVP9ペイロード記述子であり、次の構造になっています. 

         0 1 2 3 4 5 6 7
        +-+-+-+-+-+-+-+-+
        |I|P|L|F|B|E|V|Z| (REQUIRED)
        +-+-+-+-+-+-+-+-+
   I:   |M| PICTURE ID  | (RECOMMENDED)
        +-+-+-+-+-+-+-+-+
   M:   | EXTENDED PID  | (RECOMMENDED)
        +-+-+-+-+-+-+-+-+
   L:   | TID |U| SID |D| (Conditionally RECOMMENDED)
        +-+-+-+-+-+-+-+-+
        |   TL0PICIDX   | (Conditionally REQUIRED)
        +-+-+-+-+-+-+-+-+
   V:   | SS            |
        | ..            |
        +-+-+-+-+-+-+-+-+
        
図3

I：ピクチャーID（PID）の存在。 1に設定すると、OPTIONALのPIDは必須の第1オクテットの後に存在しなければならず、以下のように指定される。それ以外の場合、PIDは存在してはならない（MUST NOT）。 ストリームの直近のキーフレーム開始時にVビットが設定され（すなわちSSフィールドが存在し）、Fビットが0に設定されている場合（すなわち非柔軟なスケーラビリティモードが使用されている場合）、このビットはすべてのパケットに設定されなければならない（MUST）.

Ｐ：画像間予測フレーム. ゼロに設定すると、フレームは画像間予測を利用しません. この場合、現在の空間レイヤーのフレームへのアップスイッチは、真下の空間レイヤーフレームから可能です. Pは、LRR [ID.ietf-avtext-lrr]メッセージに応答してレイヤー同期フレームをエンコードするときにもゼロに設定する必要があります（セクション5.3を参照）. Pがゼロに設定されている場合、TIDフィールド（以下で説明）も0（存在する場合）に設定する必要があります. Ｐビットは、もしあれば、同じ画像の以前のフレームからの画像内、層間予測を禁止しないことに注意されたい. 

L：レイヤーインデックスが存在します. 1に設定すると、必須の最初のオクテットとPID（存在する場合）に続く1つまたは2つのオクテットは、以下の「レイヤーインデックス」で説明されているとおりになります. Fビット（以下で説明）が1（フレキシブルモードを示す）に設定されている場合、レイヤーインデックスには1つのオクテットのみが存在します. それ以外の場合、Fビットが0（非フレキシブルモードを示す）に設定されていると、レイヤーインデックスに2つのオクテットが存在します. 

F：フレキシブルモード. Fを1に設定すると、フレキシブルモードが示され、Pビットも1に設定されている場合、必須の最初のオクテットに続くオクテット、PID、およびレイヤーインデックス（存在する場合）は、以下の「参照インデックス」で説明されているとおりです. これは、Iビットも1に設定されている場合にのみ、1に設定する必要があります. Iビットがゼロに設定されている場合、これもゼロに設定され、受信者によって無視されなければならない[MUST]. （フレキシブルモードの参照インデックスは、画像IDフィールドからのオフセットとして定義されているため、設定されていない場合は意味がありません. ）このFビットの値は、キー画像の最初のパケットでのみ変更する必要があります. キー画像は、ベース空間レイヤーフレームがキーフレームであるため、エンコーダの状態を完全にリセットする画像です. このパケットのPビットはゼロに等しく、SIDまたはLビット（以下で説明）はゼロに等しくなります. 

B：フレームの開始. RTPパケットの最初のペイロードオクテットが新しいVP9フレームの始まりである場合は、1に設定する必要があり、それ以外の場合は1に設定しないでください. このフレームは画像の最初のフレームではない場合があることに注意してください. 

E：フレームの終わり. VP9フレームの最後のRTPパケットの場合は1に設定する必要があり、それ以外の場合は0に設定する必要があります. これにより、デコーダーはフレームのデコードを終了できます. そうでない場合は、次のパケットがフレームの完了を明示的に認識するのを待つ必要があります. 空間スケーラビリティが使用されている場合、同じ画像からより多くのフレームが続く可能性があることに注意してください. 上記のBビットの説明を参照してください. 

V：スケーラビリティー構造（SS）データが存在します. 1に設定すると、

オプションのSSデータはペイロード記述子に存在する必要があります. それ以外の場合、SSデータは存在してはなりません（MUSTNOT）. 

Z：上位の空間レイヤーの参照フレームではありません. 1に設定すると、より高い空間レイヤーSID + 1以上の現在および後続の画像を持つフレームが、現在の空間レイヤーSIDフレームに依存しないことを示します. これにより、上位の空間レイヤーをターゲットにしているデコーダーは、上位レイヤーのフレームの「D」ビットを待たずに、このパケットのフレームを処理せずに安全に破棄できることを知ることができます（以下を参照）. 

必須の最初のオクテットの後に、有効になっている拡張データフィールドが続きます. 

M：最初のオクテットの最上位ビットは拡張フラグです. Iビットが1に等しい場合、フィールドは存在しなければなりません. Mが設定されている場合、PIDフィールドには15ビットが含まれている必要があります. それ以外の場合は、7ビットが含まれている必要があります. 以下のPIDを参照してください. 

画像ID（PID）：Mビットに応じて7ビットまたは15ビットで表される画像ID. これは画像の実行中のインデックスであり、送信者は送信する画像ごとに値を1ずつインクリメントします. （ただし、ミドルボックスはスケーラビリティ構造で許可されている場合に画像を破棄できるため、受信者が受信した画像IDは連続していない可能性があることに注意してください. ）Iビットが1に等しい場合、このフィールドは存在しなければなりません. Mがゼロに設定されている場合、7ビットがPIDを伝送します. それ以外の場合、Mが1に設定されていると、15ビットがネットワークバイトオーダーでPIDを伝送します. 送信者は、7ビットまたは15ビットのインデックスから選択できます. PIDは乱数で開始する必要があり、最大ID（選択したインデックスサイズに応じて0x7fまたは0x7fff）に達した後にラップする必要があります. 受信者は、PIDのビット数がセッションを通じて同じままであると想定してはなりません（MUSTNOT）. このフィールドが7ビットから15ビットに遷移する場合、値はゼロ拡張されます（つまり、0x6eの後の値は0x006fです）. フィールドが15ビットから7ビットに遷移する場合、フィールドは切り捨てられます（つまり、0x1bbeの後の値は0xbfです）. 

非フレキシブルモード（Fビットが0に設定されている場合）では、このPIDは、以下のSSデータで指定されている画像グループ（PG）へのインデックスとして使用されます. このモードでは、キーフレームのPIDは、PGで最初に指定されたフレームに対応します. 次に、後続のPIDは、PGで後続に指定されたフレーム（モジュロN_G、以下のSSデータで指定）にそれぞれマップされます. 

同じ画像のすべてのフレームは同じPID値を持っている必要があります. 

VP9 show_frameを使用したフレーム（および対応する画像）

0に等しいフィールドは、show_frameが1に等しい後続の画像とは異なるPID値を持っている必要があります. したがって、この仕様で定義されている画像は、VP9スーパーフレームとは異なります. 

同じ画像のすべてのフレームは、show_frameに対して同じ値を持っている必要があります. 

レイヤーインデックス：この情報はオプションですが、レイヤーでエンコードする場合は常に推奨されます. フレキシブルモードと非フレキシブルモードの両方で、図2と図3の両方に示すように、1オクテットを使用してレイヤーフレームの時間レイヤーID（TID）と空間レイヤーID（SID）を指定します. さらに、ビット（U）が使用されます. 現在のフレームが「切り替えポイント」フレームであることを示します. 別のビット（D）は、現在のフレームに層間予測が使用されているかどうかを示すために使用されます. 

非フレキシブルモード（Fビットが0に設定されている場合）では、図3に示すように、別のオクテットが時間レイヤー0インデックス（TL0PICIDX）を表すために使用されます. 時間レイヤーフレーム-追跡できます. 

TIDフィールドとSIDフィールドは、時間層と空間層を示し、ミドルボックスとエンドポイントがパケットが属する層をすばやく識別するのに役立ちます. 

TID：現在のフレームの時間レイヤーID. 非フレキシブルモードの場合、PIDが指定されたPG内の画像にマッピングされると、TIDの値はPG内のマッピングされた画像の対応するTID値と一致する必要があります. 

U：ポイントを切り替えます. 時間層IDがTIDに等しい現在の画像に対してこのビットが1に設定されている場合、後続のより高い時間層の画像は現在の画像の前の画像に依存しないため、より高いフレームレートに「切り替える」ことができます（コーディング中）順序）TIDより大きい時間レイヤーIDを持つ. 

SID：現在のフレームの空間レイヤーID. 空間レイヤーSID> 0のフレームは、同じ画像内のデコードされた空間レイヤーSID-1フレームに依存する場合があることに注意してください. 同じ画像の異なるフレームには、異なる空間レイヤーIDが必要であり、フレームの空間レイヤーは、フレーム内で昇順で表示される必要があります. 

D：レイヤー間の依存関係が使用されました. 唯一の場合に限り、1に設定する必要があります

現在の空間レイヤーSIDフレームが同じ画像の空間レイヤーSID-1フレームに依存している場合、それ以外の場合はゼロに設定する必要があります. ベースレイヤーフレーム（SIDが0に等しい）の場合、このDビットはゼロに設定する必要があります. 

TL0PICIDX：8ビットの時間レイヤーゼロインデックス. TL0PICIDXは、非フレキシブルモード（F = 0）でのみ存在します. これは、時間ベースレイヤー画像、つまりTIDが0に設定された画像の実行中のインデックスです. TIDが0より大きい場合、TL0PICIDXは、現在の画像が依存している時間ベースレイヤー画像を示します. TIDが0に等しい場合、TL0PICIDXは1ずつインクリメントする必要があります. インデックスは乱数で開始する必要があり、最大数255に達した後に0から再開する必要があります. 

参照インデックス：PとFが両方とも1に設定され、フレキシブルモードの非キーフレームを示す場合、少なくとも1つの参照インデックスを次のように指定する必要があります. 以下のNビットを使用して、追加の参照インデックス（合計で最大3つの参照インデックスが許可されます）を指定できます. PまたはFのいずれかがゼロに設定されている場合、参照インデックスは指定されません. 

P_DIFF：現在の画像からの相対PIDとして指定された参照インデックス（7ビット）. たとえば、PID112の画像を含むパケットでP_DIFF = 3の場合、画像はPID 109の画像を参照します. この計算は、PIDフィールドのサイズ（7ビットまたは15ビット）を法として行われます. P_DIFF値0は無効です. 

N：現在のP_DIFFの後に追加のP_DIFFがある場合は1. 

4.2.1. スケーラビリティ構造（SS）：

スケーラビリティ構造（SS）データは、画像内の各フレームの解像度と、画像グループ（PG）の画像間の依存関係を記述します. VP9ペイロード記述子の「V」ビットが設定されている場合、SSデータは図2および図3に示されている位置に存在します. 

        +-+-+-+-+-+-+-+-+
   V:   | N_S |Y|G|-|-|-|
        +-+-+-+-+-+-+-+-+              -\
   Y:   |     WIDTH     | (OPTIONAL)    .
        +               +               .
        |               | (OPTIONAL)    .
        +-+-+-+-+-+-+-+-+               . - N_S + 1 times
        |     HEIGHT    | (OPTIONAL)    .
        +               +               .
        |               | (OPTIONAL)    .
        +-+-+-+-+-+-+-+-+              -/
   G:   |      N_G      | (OPTIONAL)
        +-+-+-+-+-+-+-+-+                            -\
   N_G: | TID |U| R |-|-| (OPTIONAL)                 .
        +-+-+-+-+-+-+-+-+              -\            . - N_G times
        |    P_DIFF     | (OPTIONAL)    . - R times  .
        +-+-+-+-+-+-+-+-+              -/            -/

        
図4

N_S：N_S + 1は、VP9ストリームに存在する空間レイヤーの数を示します. 

Y：各空間レイヤーのフレーム解像度が存在します. 1に設定すると、各レイヤーフレームにオプションの幅（2オクテット）と高さ（2オクテット）が存在する必要があります. それ以外の場合、解像度は存在してはなりません. 

G：PG記述存在フラグ. 

-：将来の使用のために予約されたビット. ゼロに設定する必要があり、受信者は無視する必要があります. 

N_G：N_Gは、画像グループ（PG）内の画像の数を示します. N_Gが0より大きい場合、SSデータを使用すると、パケットごとにオンザフライで表示するのではなく、VP9ストリームの画像間依存構造を事前に宣言できます. N_Gが0より大きい場合、PG内のN_G画像には、各画像の時間レイヤーID（TID）、スイッチアップポイント（U）、および参照インデックス（P_DIFF）が指定されます. 

PGで指定された最初の画像では、TIDを0に設定する必要があります. 

Gを0に設定するか、N_Gを0に設定すると、ビットストリーム内に時間レイヤーが1つしかない（非フレキシブルモードの場合）か、固定の画像間依存関係情報が存在しない（フレキシブルモードの場合）ことを示します. 

特定の画像について、すべてのフレームが同じ画像間依存構造に従うことに注意してください. ただし、各空間レイヤーのフレームレートは互いに異なる可能性があり、これは上記のDビットを使用して説明できます. SSデータで指定された依存関係構造は、最高のフレームレートレイヤー用である必要があります. 

固定パターンで送信されるスケーラブルストリームでは、SSデータをすべてのキーフレームの最初のパケットに含める必要があります. これは、Pビットがゼロ、SIDまたはLビットがゼロ、Bビットが1のパケットです. SSデータは、前のSSデータのPGで指定された最初の画像に対応する画像でのみ変更する必要があります（以前のSSデータのN_Gが0より大きい場合）. 

4.3. フレームの断片化
VP9フレームは、RTPシーケンス番号順に、Bビットが設定されたパケットで始まり、Eビットが設定されたパケットで終わるパケットにフラグメント化されます. VP9フレームの一部にきめ細かくアクセスするためのメカニズムはありません. 

4.4. スケーラブルなエンコーディングに関する考慮事項
参照フレームの使用に加えて、VP9には、フレーム間依存関係のいくつかの追加形式があり、主にエントロピーおよびツリーエンコーダーの確率テーブルが含まれます. VP9構文では、構文要素「error_resilient_mode」がこの追加のフレーム間データをリセットし、フレームの構文を個別にデコードできるようにします. 

スケーラブルストリームの要件により、スケーラブルストリームを生成するVP9エンコーダーは、フレームがストリームから合法的に削除できる前のフレーム（同じまたは前の画像）に依存しないようにする必要があります. したがって、（完全なデコード順序で）削除される可能性のあるフレームに続くフレームは、「error_resilient_mode」をtrueに設定してエンコードする必要があります. 

空間的にスケーラブルなストリームの場合、これは、ベース空間レイヤーに対して「error_resilient_mode」をオンにする必要があることを意味します. ただし、レイヤー間の依存関係（つまり、「D」ビットが設定されている）で送信されると仮定すると、より高い空間レイヤーではオフにすることができます. 空間スケーラビリティなしで時間的にのみスケーラブルであるストリームの場合、「error_resilient_mode」は、時間レイヤー0フレームの直後に続くすべての画像に対してさらにオフにすることができます. 

4.5. VP9RTPストリームの例
4.5.1. スケーラブルな構造のための参照画像の使用
セクション3で説明したように、VP9コーデックは最大8つの参照フレームを維持でき、そのうち最大3つを新しいフレームで参照または更新できます. このセクションでは、これらの参照フレームを使用してスケーラブルな構造（3つの空間レイヤーと3つの時間レイヤー）を構築できる1つの方法を示します. 

               +==========+=========+============+=========+
               | Temporal | Spatial | References | Updates |
               +==========+=========+============+=========+
               |    0     |    0    |     0      |    0    |
               +----------+---------+------------+---------+
               |    0     |    1    |    0,1     |    1    |
               +----------+---------+------------+---------+
               |    0     |    2    |    1,2     |    2    |
               +----------+---------+------------+---------+
               |    2     |    0    |     0      |    6    |
               +----------+---------+------------+---------+
               |    2     |    1    |    1,6     |    7    |
               +----------+---------+------------+---------+
               |    2     |    2    |    2,7     |    -    |
               +----------+---------+------------+---------+
               |    1     |    0    |     0      |    3    |
               +----------+---------+------------+---------+
               |    1     |    1    |    1,3     |    4    |
               +----------+---------+------------+---------+
               |    1     |    2    |    2,4     |    5    |
               +----------+---------+------------+---------+
               |    2     |    0    |     3      |    6    |
               +----------+---------+------------+---------+
               |    2     |    1    |    4,6     |    7    |
               +----------+---------+------------+---------+
               |    2     |    2    |    5,7     |    -    |
               +----------+---------+------------+---------+
        
表1：スケーラビリティ構造の例

この構造は、「U」ビットを常に設定できるように構成されています. 

5.フィードバックメッセージとヘッダー拡張
5.1. 参照画像選択表示（RPSI）
参照画像選択インデックスは、RTCPベースのフィードバック形式で定義されたペイロード固有のフィードバックメッセージです. RPSIメッセージは受信者によって生成され、2つの方法で使用できます. デコーダーによって損失が検出されたときに優先参照画像を通知できます（できればデコーダーが完全であると認識している参照）. または、特定の参照画像の正しいデコードを確認するための正のフィードバック情報として使用できます. 正のフィードバック方法は、ポイントツーポイント（ユニキャスト）通信に使用されるVP9に役立ちます. VP9にRPSIを使用することは、コーデックの2つの特別な参照フレーム（ゴールデンフレームとaltrefフレーム）の特別な更新パターンと組み合わせることが好ましく、これらは交互に跳躍するように更新されます. 受信者がゴールデンフレームまたはaltrefフレームを受信して​​正しくデコードし、そのフレームのペイロード記述子に画像IDが含まれている場合、受信者はRPSIメッセージを送信者に送り返すだけでこれを確認できます. メッセージ本文（つまり、[RFC4585]の「ネイティブRPSIビット文字列」）は、単に受信フレームの（7ビットまたは15ビット）画像IDです. 

注：同じ画像のすべてのフレームは同じ画像間参照構造を持っている必要があるため、どのフレームが選択されているかを指定するメッセージは必要ありません. 

5.2. フルイントラリクエスト（FIR）
フルイントラリクエスト（FIR）[RFC5104] RTCPフィードバックメッセージにより、受信者はエンコードされたストリームのフルステートリフレッシュをリクエストできます. 

FIR要求を受信すると、VP9送信者は、空間レイヤー0レイヤーフレームのキーフレームを含む画像を送信してから、上位レイヤーフレームの画像間予測なし（P = 0）でフレームを送信する必要があります. 

5.3. レイヤー更新リクエスト（LRR）
レイヤー更新要求（LRR）[ID.ietf-avtext-lrr]を使用すると、受信者は、ストリームの他のレイヤーに必ずしも影響を与えることなく、空間的または時間的にエンコードされたストリームの単一レイヤーを更新するように要求できます. 

               + --------------- + --------------- +
               | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
               + --------------- + --------- + ----- +
               | RES | TID | RES | SID |
               + --------------- + --------- + ----- +
        
図5

図5は、VP9ストリームのLRRのレイヤーインデックスフィールドの形式を示しています. 2つの「RES」フィールドは、送信時に0に設定し、受信時に無視する必要があります. TIDおよびSIDフィールドの詳細については、セクション4.2を参照してください. 

レイヤーリフレッシュフレームの識別は、デコード可能なフレームのみが参照されるポイントに到達するまで依存関係チェーンをバックトラックすることにより、各フレームの参照IDから取得できます. したがって、フレキシブルモードと非フレキシブルモードの両方で、スイッチアップポイントがLRRに応答してエンコードされている場合、これらのパケットには、デコーダまたは選択的転送ミドルボックスが含まれるように、レイヤインデックスと参照フィールドが含まれている必要があります.  [RFC7667]はこの派生を行うことができます. 

例：

LRR {1,0}、{2,1}は、MCUが現在{1,0}を受信機に中継していて、{2,1}にアップグレードしたいときにMCUによって送信されます. それに応じて、エンコーダーは、{1,0}または{0,0}のフレームのみを参照することにより、レイヤー{1,1}および{2,1}の次のフレームをエンコードする必要があります. 

非フレキシブルモードでは、定期的なアップグレードフレームはSSのレイヤー構造によって定義できるため、定期的なアップグレードフレームは画像IDによって自動的に識別されます. 

6.ペイロードフォーマットパラメータ
このペイロード形式には、「max-fr」、「max-fs」、および「profile-id」の3つのオプションのパラメーターがあります. 

max-frおよびmax-fsパラメーターは、レシーバー実装の機能を通知するために使用されます. 実装がメディアを受け入れる意思がある場合は、両方のパラメーターを指定する必要があります. これらのパラメータは、他の目的に使用してはなりません. メディア送信者は、通知されたmax-frおよびmax-fs値を超えるフレームレートまたはフレームサイズのメディアを送信しないでください. （事前にエンコードされたメディアや選択的転送ミドルボックス[RFC7667]など、受信者のmax-fsおよびmax-fr値内に収まるメディアがメディア送信者に利用できないシナリオが存在する場合があります. このようなシナリオでは、送信者は可能性があります. 信号値を超えています. ）

max-fr：max-frの値は、デコーダーがデコードできる最大フレームレートを1秒あたりのフレーム数の単位で示す整数です. 

max-fs：max-fsの値は、デコーダーがデコードできるマクロブロック単位の最大フレームサイズを示す整数です. 

デコーダーは、マクロブロック内のフレームの幅と高さがint（sqrt（max-fs * 8））未満である限り、このフレームサイズをデコードできます. たとえば、max-fsは1200（640x480をサポート可能）です. 解像度）は、最大1552ピクセル（97マクロブロック）の幅と高さをサポートします. 

profile-id：profile-idの値は、デフォルトのコーディングプロファイル、ストリームの生成に使用された可能性のあるコーディングツールのサブセット、またはレシーバーがサポートするものを示す整数です. 表2に、[VP9-BITSTREAM]のセクション7.2で定義されているすべてのプロファイルと、使用される対応する整数値を示します. 

profile-idが存在しない場合、プロファイル0を推測する必要があります. （profile-idパラメーターは、この仕様の開発の比較的遅い時期に追加されたため、一部の既存の実装では送信されない場合があります. ）

情報メモ：[VP9-BITSTREAM]のセクション7.2で定義されているコーディングプロファイルの機能については、表3を参照してください. 

受信者は、この仕様で指定されていないパラメータを無視する必要があります. 

                          + ========= + ============ +
                          | プロフィール| プロファイルID |
                          + ========= + ============ +
                          | 0 | 0 |
                          + --------- + ------------ +
                          | 1 | 1 |
                          + --------- + ------------ +
                          | 2 | 2 |
                          + --------- + ------------ +
                          | 3 | 3 |
                          + --------- + ------------ +
        
表2：サポートされているコーディングツールのセットに対応するVP9プロファイルを表すprofile-id整数値の表. 

   + ========= + =========== + ================= + ========= ================= +
   | プロフィール| ビット深度| SRGB色空間| クロマサブサンプリング|
   + ========= + =========== + ================= + ========= ================= +
   | 0 | 8 | いいえ| YUV 4：2：0 |
   + --------- + ----------- + ----------------- + --------- ----------------- +
   | 1 | 8 | はい| YUV 4：2：2,4：4：0または4：4：4 |
   + --------- + ----------- + ----------------- + --------- ----------------- +
   | 2 | 10または12 | いいえ| YUV 4：2：0 |
   + --------- + ----------- + ----------------- + --------- ----------------- +
   | 3 | 10または12 | はい| YUV 4：2：2,4：4：0または4：4：4 |
   + --------- + ----------- + ----------------- + --------- ----------------- +
        
表3：プロファイル機能の表. 

6.1. SDPパラメータ
6.1.1. メディアサブタイプパラメータのSDPへのマッピング
メディアタイプvideo / VP9文字列は、次のようにSession Description Protocol（SDP）[RFC8866]のフィールドにマップされます. 

* SDPの「m =」行のメディア名はビデオである必要があります. 

* SDPの「a = rtpmap」行のエンコード名はVP9（メディアサブタイプ）である必要があります. 

*「a = rtpmap」行のクロックレートは90000でなければなりません. 

*受信者が受信機能を宣言する場合は、パラメータ「max-fr」および「max-fs」をSDPの「a = fmtp」行に含める必要があります. これらのパラメーターは、パラメーター=値のペアのセミコロンで区切られたリストの形式で、メディアサブタイプ文字列として表されます. 

*オプションのパラメータprofile-idが存在する場合は、SDPの「a = fmtp」行に含める必要があります. このパラメーターは、パラメーター=値のペアの形式で、メディアサブタイプ文字列として表されます. パラメータが存在しない場合、profile-idの値0を推測する必要があります. 

6.1.1.1. 例
SDPでのメディア表現の例は次のとおりです. 

   m =ビデオ49170RTP / AVPF 98
   a = rtpmap：98 VP9 / 90000
   a = fmtp：98 max-fr = 30; max-fs = 3600; profile-id = 0
        
6.1.2. オファー/回答の考慮事項
ユニキャスト使用のネゴシエーションのためにオファー/アンサーモデル[RFC3264]でSDPを使用してRPPを介してVP9が提供される場合、次の制限とルールが適用されます. 

* VP9のメディアフォーマット設定を識別するパラメータはprofile-idです. このメディアフォーマット設定パラメータは対称的に使用する必要があります. つまり、アンサーは、この構成パラメーターを維持するか、サポートされていない場合はメディア形式（ペイロードタイプ）を完全に削除する必要があります. 

* max-frおよびmax-fsパラメーターは、オファー/アンサーモデルであっても、レシーバー機能を説明するために宣言的に使用されます. 回答の値は、回答者の能力を説明するために使用されるため、それらの値は、オファーの値とは独立して設定されます. 

*これらの構成の処理と照合を簡素化するために、[RFC3264]で指定されているように、オファーで使用されるのと同じRTPペイロードタイプ番号を回答と後続のオファーでも使用する必要があります. 応答または後続のオファーには、profile-id値が元のオファーとまったく同じでない限り、オファーで使用されるペイロードタイプ番号を含めてはなりません（MUSTNOT）. ただし、エンドポイントが宣言されたレシーバー機能を変更したい場合は、max-frパラメーターとmax-fsパラメーターを同じペイロードタイプ番号で後続のオファーとアンサーで変更できます. 

7.メディアタイプの定義
この登録は、[RFC6838]およびそれに続く[RFC4855]で定義されたテンプレートを使用して行われます. 

タイプ名：ビデオ

サブタイプ名：VP9

必要なパラメーター：N / A. 

オプションのパラメーター：「max-fr」、「max-fs」、および「profile-id」の3つのオプションのパラメーターがあります. それらの定義についてはセクション6を参照してください. 

エンコーディングに関する考慮事項：このメディアタイプはRTPでフレーム化され、バイナリデータが含まれています. [RFC6838]のセクション4.8を参照してください. 

セキュリティに関する考慮事項：RFCxxxxのセクション8を参照してください. 

[RFCエディター：RFCとして公開されたら、「XXXX」をこのドキュメントに割り当てられた番号に置き換えて、このメモを削除してください. ]

相互運用性に関する考慮事項：なし. 

公開されている仕様：VP9ビットストリーム形式[VP9-BITSTREAM]およびRFCXXXX. 

[RFCエディター：RFCとして公開されたら、「XXXX」をこのドキュメントに割り当てられた番号に置き換えて、このメモを削除してください. ]

このメディアタイプを使用するアプリケーション：例：Video over IP、ビデオ会議. 

フラグメント識別子の考慮事項：N / A. 

追加情報：なし. 

   詳細について連絡する人と電子メールアドレス：
      ジョナサンレノックス<jonathan.lennox@8x8.com>
        
使用目的：COMMON

使用上の制限：このメディアタイプはRTPフレーミングに依存するため、RTP [RFC3550]を介した転送に対してのみ定義されます. 

   著者：
      ジョナサンレノックス<jonathan.lennox@8x8.com>
        
コントローラーの変更：IESGから委任されたIETFAVTCoreワーキンググループ. 

8.セキュリティに関する考慮事項
この仕様で定義されているペイロード形式を使用するRTPパケットは、RTP仕様[RFC3550]、およびRTP / AVP [RFC3551]、RTP / AVPF [RFC4585]、RTP / SAVPなどの該当するRTPプロファイルで説明されているセキュリティの考慮事項の対象となります.  [RFC3711]、またはRTP / SAVPF [RFC5124]. ただし、「RTPプロトコルフレームワークの保護：RTPが単一のメディアセキュリティソリューションを義務付けない理由」[RFC7202]で説明されているように、機密性などの基本的なセキュリティ目標を達成するために使用されるソリューションについて議論または義務付けることは、RTPペイロード形式の責任ではありません.  、RTP全般の整合性とソースの信頼性. この責任は、アプリケーションでRTPを使用するすべての人にあります. 利用可能なセキュリティメカニズムに関するガイダンスは、RTPセッションを保護するためのオプション[RFC7201]にあります. アプリケーションは、1つ以上の適切な強力なセキュリティメカニズムを使用する必要があります. このセキュリティの考慮事項のセクションの残りの部分では、ペイロード形式自体のセキュリティに影響を与えるプロパティについて説明します. 

このRTPペイロード形式の実装では、適切なセキュリティ上の考慮事項を考慮する必要があります. デコーダーが悪意のあるペイロードや不正な形式のペイロードに対して堅牢であり、デコーダーが割り当てられたメモリをオーバーランしたり、その他の方法で誤動作したりしないようにすることが非常に重要です. 割り当てられたメモリのオーバーランは、攻撃者による任意のコード実行につながる可能性があります. エンコーダーの問題は通常まれですが、同じことがエンコーダーにも当てはまります. 

このRTPペイロード形式とそのメディアデコーダーは、パケット処理の受信側の計算の複雑さに重大な不均一性を示さないため、病理学的データの受信によるサービス拒否の脅威をもたらす可能性はほとんどありません. また、RTPペイロード形式にはアクティブコンテンツが含まれていません. 

9.輻輳制御
RTPの輻輳制御は、RFC 3550 [RFC3550]、および該当するRTPプロファイルに従って使用する必要があります. 例：RFC 3551 [RFC3551]. 輻輳制御メカニズムは、リアルタイムのエンコードシナリオで、特定のターゲットレートでエンコードするようにエンコーダに指示することにより、伝送レートを適応させることができます. メディア対応ネットワーク要素は、ネットワークの輻輳を減らすために、セクション4.2のVP9ペイロード記述子の情報を使用して非参照フレームを識別し、それらを破棄してもよい[MAY]. ストリームが暗号化されている場合（非参照マーカーが暗号化されているため）、非参照フレームの破棄は実行できないことに注意してください. 

10.IANAの考慮事項
IANAは、セクション7で指定されているように、メディアタイプ登録「video / vp9」を登録するように要求されます. メディアタイプは、「RTPペイロード形式MIMEタイプ」のIANAレジストリに追加することも要求されます<http：//www.iana .org / assignments / rtp-parameters>. 

11.謝辞
Alex Eleftheriadis、Yuki Ito、Won Kap Jang、Sergio Garcia Murillo、Roi Sasson、Timothy Terriberry、Emircan Uysaler、Thomas Volkertがこのドキュメントの作成についてコメントし、有益なコメントとフィードバックを提供しました. 

12.参考文献
12.1. 規範的参照
[ID.ietf-avtext-lrr] Lennox、J.、Hong、D.、Uberti、J.、Holmer、S. 、およびM. Flodman、「The Layer Refresh Request（LRR）RTCP Feedback Message」、作業中、インターネットドラフト、draft-ietf-avtext-lrr-07、2017年7月2日、<https://www.ietf.org/archive/id/draft-ietf-avtext-lrr-07.txt>. 

[RFC2119] Bradner、S. 、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>. 

[RFC3264] Rosenberg、J. およびH. Schulzrinne、「Session Description Protocol（SDP）を使用したオファー/アンサーモデル」、RFC 3264、DOI 10.17487 / RFC3264、2002年6月、<https://www.rfc-editor.org / info / rfc3264>. 

[RFC3550] Schulzrinne、H.、Casner、S.、Frederick、R. 、およびV. Jacobson、「RTP：A Transport Protocol for Real-Time Applications」、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <https://www.rfc-editor.org/info/rfc3550>. 

[RFC4585] Ott、J.、Wenger、S.、Sato、N.、Burmeister、C. 、およびJ. Rey、「​​リアルタイムトランスポート制御プロトコル（RTCP）ベースのフィードバック（RTP / AVPF）の拡張RTPプロファイル」 "、RFC 4585、DOI 10.17487 / RFC4585、2006年7月、<https://www.rfc-editor.org/info/rfc4585>. 

[RFC4855] Casner、S. 、「RTPペイロード形式のメディアタイプ登録」、RFC 4855、DOI 10.17487 / RFC4855、2007年2月、<https://www.rfc-editor.org/info/rfc4855>. 

[RFC5104] Wenger、S.、Chandra、U.、Westerlund、M. 、およびB. Burman、「フィードバック付きRTPオーディオビジュアルプロファイル（AVPF）のコーデック制御メッセージ」、RFC 5104、DOI 10.17487 / RFC5104、2月2008、<https://www.rfc-editor.org/info/rfc5104>. 

[RFC6838] Freed、N.、Klensin、J. 、およびT. Hansen、「メディアタイプの仕様と登録手順」、BCP 13、RFC 6838、DOI 10.17487 / RFC6838、2013年1月、<https：//www.rfc- editor.org/info/rfc6838>. 

[RFC8174] Leiba、B. 、「RFC 2119キーワードにおける大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>. 

[RFC8866] Begen、A.、Kyzivat、P.、Perkins、C. 、およびM. Handley、「SDP：Session Description Protocol」、RFC 8866、DOI 10.17487 / RFC8866、2021年1月、<https：//www.rfc -editor.org/info/rfc8866>. 

[VP9-BITSTREAM] Grange、A.、de Rivaz、P. 、およびJ. Hunt、「VP9 Bitstream＆Decoding Process Specification」、バージョン0.6、2016年3月31日、<https://storage.googleapis.com/downloads.  webmproject.org/docs/vp9/vp9-bitstream-specification-v0.6-20160331-draft.pdf>. 

12.2. 有益な参考文献
[RFC3551] Schulzrinne、H. and S. Casner、 "RTP Profile for Audio and Video Conferences with Minimal Control"、STD 65、RFC 3551、DOI 10.17487 / RFC3551、July 2003、<https：//www.rfc-editor.  org / info / rfc3551>. 

[RFC3711] Baugher、M.、McGrew、D.、Naslund、M.、Carrara、E. 、およびK. Norrman、「The Secure Real-time Transport Protocol（SRTP）」、RFC 3711、DOI 10.17487 / RFC3711、3月2004年、<https://www.rfc-editor.org/info/rfc3711>. 

[RFC5124] Ott、J. and E. Carrara、 "Extended Secure RTP Profile for Real-time Transport Control Protocol（RTCP）-Based Feedback（RTP / SAVPF）"、RFC 5124、DOI 10.17487 / RFC5124、February 2008、<https ：//www.rfc-editor.org/info/rfc5124>. 

[RFC6386] Bankoski、J.、Koleszar、J.、Quillio、L.、Salonen、J.、Wilkins、P. 、およびY. Xu、「VP8データフォーマットおよびデコードガイド」、RFC 6386、DOI 10.17487 / RFC6386、 2011年11月、<https://www.rfc-editor.org/info/rfc6386>. 

[RFC7201] Westerlund、M. and C. Perkins、 "Options for Securing RTP Sessions"、RFC 7201、DOI 10.17487 / RFC7201、April 2014、<https://www.rfc-editor.org/info/rfc7201>. 

[RFC7202] Perkins、C. およびM. Westerlund、「RTPフレームワークの保護：RTPが単一のメディアセキュリティソリューションを義務付けない理由」、RFC 7202、DOI 10.17487 / RFC7202、2014年4月、<https：//www.rfc- editor.org/info/rfc7202>. 

[RFC7667] Westerlund、M. and S. Wenger、 "RTP Topologies"、RFC 7667、DOI 10.17487 / RFC7667、2015年11月、<https://www.rfc-editor.org/info/rfc7667>. 

著者の住所

Justin Uberti Google、Inc. 747 6th Street South Kirkland、WA98033アメリカ合衆国

   Eメール：justin@uberti.name
        
Stefan Holmer Google、Inc. Kungsbron 2 SE-11122ストックホルムスウェーデン

   メール：holmer@google.com
        
Magnus Flodman Google、Inc. Kungsbron 2 SE-11122ストックホルムスウェーデン

   メール：mflodman@google.com
        
Danny Hong Google、Inc. 1585 Charleston Road Mountain View、CA94043アメリカ合衆国

   メール：dannyhong@google.com
        
Jonathan Lennox 8x8、Inc. / Jitsi Jersey City、NJ07302アメリカ合衆国

   Eメール：jonathan.lennox@8x8.com
        