Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Protocol Overview . . . . . . . . . . . . . . . . . . . . . .   3
   5.  Message Formats . . . . . . . . . . . . . . . . . . . . . . .   4
     5.1.  DATA_CHANNEL_OPEN Message . . . . . . . . . . . . . . . .   4
     5.2.  DATA_CHANNEL_ACK Message  . . . . . . . . . . . . . . . .   7
   6.  Procedures  . . . . . . . . . . . . . . . . . . . . . . . . .   7
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   8
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
     8.1.  SCTP Payload Protocol Identifier  . . . . . . . . . . . .   9
     8.2.  New Standalone Registry for the DCEP  . . . . . . . . . .   9
       8.2.1.  New Message Type Registry . . . . . . . . . . . . . .   9
       8.2.2.  New Channel Type Registry . . . . . . . . . . . . . .  10
   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  11
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  11
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  11
     10.2.  Informational References . . . . . . . . . . . . . . . .  12
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  12

1.はじめに 

データチャネル確立プロトコル（DCEP）は、WebRTCデータチャネルコンテキスト[ID.ietf-rtcweb-data-channel]で、対称データチャネルを開く簡単な帯域内方法を提供するように設計されています. [ID.ietf-rtcweb-data-channel]で説明されているように、プロトコルは[ID.ietf-tsvwg-sctpで説明されているように、Datagram Transport Layer Security（DTLS）にカプセル化されたStream Control Transmission Protocol（SCTP）[RFC4960]を使用します-dtls-encaps]既に標準化されたトランスポートおよびセキュリティ機能を活用します. DTLS 1.0は[RFC4347]で定義され、現在の最新バージョンのDTLS 1.2は[RFC6347]で定義されています. 

2.コンベンション 

このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は[RFC2119]で説明されているように解釈されます.  



3.用語 

このドキュメントでは次の用語を使用します.  

Association：SCTPアソシエーション.  

ストリーム：SCTPアソシエーションの単方向ストリーム. SCTPストリーム識別子（0-65534）によって一意に識別されます. 注：SCTPストリーム識別子65535は、SCTP INITおよびINIT-ACKチャンクにより最大65535ストリームのネゴシエートのみが許可されているため予約されています（0-65534）. 

ストリーム識別子：ストリームを一意に識別するSCTPストリーム識別子.  

データチャネル：同じストリーム識別子を持つ2つのストリーム. 各方向に1つずつあり、一緒に管理されます.  

4.プロトコルの概要 

データチャネル確立プロトコルは、一貫した一連のプロパティとSCTPアソシエーションを介して双方向のデータチャネルを確立するためのシンプルでオーバーヘッドの少ない方法です.  

一貫したプロパティのセットには以下が含まれます.  

o信頼できるまたは信頼できないメッセージ送信. 信頼性のない送信の場合、同じレベルの信頼性が使用されます. 

o順序どおりまたは順序外のメッセージ配信.  

oデータチャネルの優先度.  

oデータチャネルのオプションのラベル.  

oデータチャネルのオプションプロトコル.  

oストリーム.  

このプロトコルは、双方向のハンドシェイクを使用してデータチャネルを開きます. ハンドシェイクは、1つの入力ストリームと出力ストリームをペアにし、両方とも同じストリーム識別子を持ち、単一の双方向データチャネルになります. データチャネルのオープンを開始するピアは、対応する着信および発信ストリームが使用されていないストリーム識別子を選択し、発信ストリームでDATA_CHANNEL_OPENメッセージを送信します. ピアは、対応する発信ストリームでDATA_CHANNEL_ACKメッセージで応答します. その後、データチャネルが開きます. データチャネル確立プロトコルメッセージは、データチャネルに属するユーザーメッセージと同じストリームで送信されます. データチャネル確立プロトコルは特定のPPIDを使用するため、逆多重化はSCTPペイロードプロトコル識別子（PPID）に基づいています. 

注：開始側は、DATA_CHANNEL_ACKを受信する前にユーザーメッセージを送信できます（MAY）.  

両側が同じストリーム識別子でデータチャネルを開こうとする衝突を避けるために、各側はDATA_CHANNEL_OPENメッセージを送信するときに偶数または奇数のストリーム識別子を持つストリームを使用する必要があります. SCTP over DTLS [ID.ietf-tsvwg-sctp-dtls-encaps]を使用する場合、どちらの側が奇数または偶数を使用するかを決定するために使用される方法は、基礎となるDTLS接続ロールに基づきます. DTLSクライアントとして機能する側は、ストリーム識別子であっても、DTLSサーバーとして機能する側は、奇数のストリーム識別子を持つストリームを使用する必要があります. 

注：ラベルの一意性を保証する試みはありません. 両側が「x」というラベルの付いたデータチャネルを同時に開くと、「x」というラベルの付いた2つのデータチャネルがあります. 1つは偶数のストリームペアに、もう1つは奇数のペアにあります. 

プロトコルフィールドは、渡されるユーザーデータをIANA登録文字列（[RFC6455]で定義されている「WebSocketサブプロトコル名レジストリ」）で識別することにより、アプリケーション間の相互運用（「フェデレーション」）を容易にします. 複数のタイプのデータチャネルを作成できます. プロトコルフィールドの一意性を確保する試みも行われていないことに注意してください. 

5.メッセージ形式 

すべてのデータチャネル確立プロトコルメッセージは、メッセージのタイプを示す「メッセージタイプ」と呼ばれる1バイトフィールドで始まります. 対応する値はIANAによって管理されます（セクション8.2.1を参照）. 

5.1.  DATA_CHANNEL_OPEN Message DATA_CHANNEL_OPENメッセージ

このメッセージは、最初にデータチャネルを使用してユーザーメッセージに使用されるストリームで送信されます.  

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Message Type |  Channel Type |            Priority           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    Reliability Parameter                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         Label Length          |       Protocol Length         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     \                                                               /
     |                             Label                             |
     /                                                               \
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     \                                                               /
     |                            Protocol                           |
     /                                                               \
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

メッセージタイプ：1バイト（符号なし整数）
このフィールドは、DATA_CHANNEL_OPENメッセージのIANA定義のメッセージタイプを保持します. セクション8.2.1で指定されているように、このフィールドの値は0x03です. 

チャネルタイプ：1バイト（符号なし整数）
このフィールドは、開くデータチャネルのタイプを指定し、値はIANAによって管理されます（セクション8.2.2を参照）.  

   DATA_CHANNEL_RELIABLE（0x00）：データチャネルは、信頼性の高い順序の双方向通信を提供します.  

   DATA_CHANNEL_RELIABLE_UNORDERED（0x80）：データチャネルは、信頼できる順序のない双方向通信を提供します.  

   DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT（0x01）：データチャネルは、部分的に信頼できる順序の双方向通信を提供します. ユーザーメッセージは、信頼性パラメーターで指定された回数を超えて再送信されることはありません. 

   DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED（0x81）：データチャネルは、部分的に信頼性の高い無秩序な双方向通信を提供します. ユーザーメッセージは、信頼性パラメーターで指定された回数を超えて再送信されることはありません. 

   DATA_CHANNEL_PARTIAL_RELIABLE_TIMED（0x02）：データチャネルは、部分的に信頼性の高い順序の双方向通信を提供します. ユーザーメッセージは、ミリ秒単位で指定された有効期間が経過すると送信または再送信されない場合があります信頼性パラメーターの秒. この有効期間は、プロトコルスタックにユーザーメッセージを提供するときに始まります. 

   DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED（0x82）：データチャネルは、部分的に信頼性の高い順序付けされていない双方向通信を提供します. 信頼性パラメーターでミリ秒単位で指定された有効期間が経過した後、ユーザーメッセージが送信または再送信されない場合があります. この有効期間は、プロトコルスタックにユーザーメッセージを提供するときに始まります. 

優先度：2バイト（符号なし整数）
[ID.ietf-rtcweb-data-channel]で説明されているデータチャネルの優先度.  

信頼性パラメータ：4バイト（符号なし整数）
信頼性のあるデータチャネルの場合、このフィールドは送信側で0に設定する必要があり、受信側では無視する必要があります. 再送信回数が制限された部分的に信頼できるデータチャネルが使用される場合、このフィールドは再送信回数を指定します. 寿命が制限された部分的に信頼できるデータチャネルが使用される場合、このフィールドは最大寿命をミリ秒単位で指定します. 次の表にこれを要約します. 

   +------------------------------------------------+------------------+
   | Channel Type                                   |   Reliability    |
   |                                                |    Parameter     |
   +------------------------------------------------+------------------+
   | DATA_CHANNEL_RELIABLE                          |     Ignored      |
   | DATA_CHANNEL_RELIABLE_UNORDERED                |     Ignored      |
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT           |  Number of RTX   |
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED |  Number of RTX   |
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED            |  Lifetime in ms  |
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED  |  Lifetime in ms  |
   +------------------------------------------------+------------------+

ラベルの長さ：2バイト（符号なし整数）
バイト単位のラベルフィールドの長さ.  

プロトコル長：2バイト（符号なし整数）
プロトコルフィールドの長さ（バイト単位）.  

ラベル：可変長（文字のシーケンス）
[RFC3629]で指定されているUTF-8エンコード文字列としてのデータチャネルの名前. これは空の文字列である可能性があります. 

プロトコル：可変長（文字のシーケンス）
これが空の文字列である場合、プロトコルは指定されていません. 空でない文字列の場合、[RFC6455]で作成された 'WebSocket Subprotocol Name Registry'に登録されているプロトコルを指定します. この文字列は、[RFC3629]で指定されているようにUTF-8エンコードされています. 

5.2. DATA_CHANNEL_ACKメッセージ

このメッセージは、データチャネルを使用するユーザーメッセージに使用されるストリーム上のDATA_CHANNEL_OPEN_RESPONSEメッセージへの応答として送信されます. このメッセージを受信すると、オープナーにデータチャネルセットアップハンドシェイクが完了したことが通知されます. 

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Message Type |
     +-+-+-+-+-+-+-+-+

メッセージタイプ：1バイト（符号なし整数）このフィールドは、DATA_CHANNEL_ACKメッセージのIANA定義のメッセージタイプを保持します. セクション8.2.1で指定されているように、このフィールドの値は0x02です. 

6.手順 

すべてのデータチャネル確立プロトコルメッセージは、順序付き配信と信頼できる送信を使用して送信する必要があります. 対応するデータチャネルに属するユーザーメッセージと同じ発信ストリームで送信する必要があります. 多重化と逆多重化は、SCTPペイロードプロトコル識別子（PPID）を使用して行われます. したがって、データチャネル確立プロトコルに割り当てられたPPIDを使用して、データチャネル確立プロトコルメッセージを送信する必要があります（セクション8.1を参照）. このPPIDを使用して他のメッセージを送信しないでください. 

データチャネルのオープンを開始するピアは、対応する着信および発信ストリームが使用されていないストリーム識別子を選択します. サイドがDTLSクライアントである場合、偶数のストリーム識別子を選択する必要があり、サイドがDTLSサーバーである場合、奇数のものを選択する必要があります. DATA_CHANNEL_OPENメッセージのパラメーターを入力し、選択したストリームで送信します. 

未使用のストリームでDATA_CHANNEL_OPENメッセージを受信した場合、ストリーム識別子はピアの役割に対応し、DATA_CHANNEL_OPENメッセージのすべてのパラメーターは有効です. その後、対応するDATA_CHANNEL_ACKメッセージが、同じストリーム識別子でストリームに送信されますDATA_CHANNEL_OPENメッセージを受信しました.  

DATA_CHANNEL_OPENメッセージが上記の条件を満たさない場合、たとえば、既に使用されているストリームでDATA_CHANNEL_OPENメッセージを受信した場合、またはDATA_CHANNEL_OPENメッセージ内のパラメーターに問題がある場合、奇数/偶数ルールに違反するか、DATA_CHANNEL_OPENメッセージ自体が整形式でない場合、受信者は[ID.ietf-rtcweb-data-channel]で説明されている手順を使用して対応するデータチャネルを閉じなければならず、受信したメッセージに応答してDATA_CHANNEL_ACKメッセージを送信してはなりません. したがって、DATA_CHANNEL_ACKメッセージが受信されていないStreamのSCTPストリームリセット要求を受信すると、対応するDATA_CHANNEL_OPENメッセージの送信者にデータチャネルのセットアップ手順の失敗が示されます. 対応する発信ストリームも正常にリセットした後、

DATA_CHANNEL_OPENメッセージが送信された後、DATA_CHANNEL_OPENの送信者は、対応するDATA_CHANNEL_ACKメッセージの受信を待たずに、ユーザーデータを含むメッセージの送信を開始できます. ただし、DATA_CHANNEL_ACKメッセージまたはその他のメッセージをデータチャネルで受信する前に、データチャネルが順序付けられているかどうかに関係なく、ユーザーデータを含み、このデータチャネルに属する他のすべてのメッセージを順序付けて送信する必要があります. DATA_CHANNEL_ACKまたは他のメッセージがデータチャネルで受信された後、ユーザーデータを含むメッセージは、順序付けられたデータチャネルで順序付けられて送信されなければならず、順序付けられていないデータチャネルで順序付けられずに送信されなければなりません. したがって、未使用のストリームでユーザーデータを含むメッセージを受信すると、エラーが発生します. [IDで説明されているように、対応するデータチャネルを閉じる必要があります. 

7.セキュリティに関する考慮事項 

DATA_CHANNEL_OPENメッセージには、プロトコルとラベルの2つの可変長フィールドが含まれています. 受信者は、これらのフィールドの最大長が65535バイトのDATA_CHANNEL_OPENメッセージを受信する準備をする必要があります. 一貫性のない長さフィールドの使用、不明なパラメーター値の使用、奇数/偶数ルールの違反などのエラーの場合も、対応するデータチャネルを閉じることで処理する必要があります. ピアが最大数のデータチャネルを開くエンドポイントも準備する必要があります. 

このプロトコルは、プライバシー、整合性、または認証を提供しません. これらすべてを含むプロトコルスイートの一部として使用する必要があります. このようなプロトコルスイートは[ID.ietf-tsvwg-sctp-dtls-encaps]で指定されています. 

一般的な考慮事項については、[ID.ietf-rtcweb-security]および[ID.ietf-rtcweb-security-arch]を参照してください.  

8. IANAの考慮事項 

[RFCエディターへの注意： 

「RFCXXXX」は、このドキュメントに割り当てるRFC番号に置き換えられます.  

] 

IANAは、既存のSCTP PPID割り当ての参照を更新し（セクション8.1）、2つの新しい登録テーブル（セクション8.2.1およびセクション8.2を含むDCEP（セクション8.2）の独自のURLで新しいスタンドアロンレジストリを作成するように求められます.  2）.  

8.1. SCTPペイロードプロトコル識別子

このドキュメントでは、「WebRTC Control」という名前の登録済みのSCTPペイロードプロトコル識別子（PPID）を使用します. [RFC4960]は、この識別子が割り当てられたレジストリ「SCTP Payload Protocol Identifiers」を作成します. IANAは、この割り当てを参照してこのドキュメントを参照し、名前を更新するように要求されます. 対応する日付を保持する必要があります. 

したがって、この割り当ては次のように更新する必要があります.  

           +-------------+-----------+-----------+------------+
           | Value       | SCTP PPID | Reference | Date       |
           +-------------+-----------+-----------+------------+
           | WebRTC DCEP | 50        | [RFCXXXX] | 2013-09-20 |
           +-------------+-----------+-----------+------------+

8.2. DCEPの新しいスタンドアロンレジストリ

IANAは、データチャネル確立プロトコル（DCEP）の独自のURLを使用して、新しいスタンドアロンレジストリ（別名Webページ）を作成するように要求されます. タイトルは「データチャネル確立プロトコル（DCEP）パラメーター」である必要があります. セクション8.2.1およびセクション8.2.2で説明されている2つのテーブルが含まれます. 

8.2.1. 新しいメッセージタイプレジストリ

IANAは、DCEPメッセージの1バイトの「メッセージタイプ」フィールドを管理するために、データチャネル確立プロトコル（DCEP）の新しい登録テーブル「メッセージタイプレジストリ」を作成するように要求されます（セクション5を参照）. この登録テーブルは、セクション8.2で説明されているレジストリの一部である必要があります. 



[RFC5226]で定義されているように、新しいメッセージタイプの割り当ては、RFCで必要なアクションによって行われます. 新しいメッセージタイプのドキュメントには、次の情報を含める必要があります. 

1.新しいメッセージタイプの名前.  

2.データチャネル確立プロトコルの動作内での新しいタイプのメッセージの使用に関する詳細な手順の説明.  

最初に、次の値を登録する必要があります. 

               +-------------------+-----------+-----------+
               | Name              | Type      | Reference |
               +-------------------+-----------+-----------+
               | Reserved          | 0x00      | [RFCXXXX] |
               | Reserved          | 0x01      | [RFCXXXX] |
               | DATA_CHANNEL_ACK  | 0x02      | [RFCXXXX] |
               | DATA_CHANNEL_OPEN | 0x03      | [RFCXXXX] |
               | Unassigned        | 0x04-0xfe |           |
               | Reserved          | 0xff      | [RFCXXXX] |
               +-------------------+-----------+-----------+

値0x00および0x01は、ドキュメントの以前のバージョンで使用されているため、相互運用性の問題を回避するために予約されていることに注意してください. 値0xffは、将来の拡張性のために予約されています. 可能な値の範囲は0x00〜0xffです. 

8.2.2. 新しいチャネルタイプレジストリ

IANAは、DATA_CHANNEL_OPENメッセージの1バイトの「チャネルタイプ」フィールドを管理するために、データチャネル確立プロトコル用の新しい登録テーブル「チャネルタイプレジストリ」を作成するように要求されます（セクション5.1を参照）. この登録テーブルは、セクション8.2で説明されているレジストリの一部である必要があります. 

[RFC5226]で定義されているように、新しいメッセージタイプの割り当ては、RFCで必要なアクションによって行われます. 新しいチャネルタイプのドキュメントには、次の情報を含める必要があります. 

1.新しいチャンネルタイプの名前.  

2.この新しいチャネルタイプを使用したデータチャネルのユーザーメッセージ処理の詳細な手順説明.  


新しいチャネルタイプが順序付きおよび順序なしのメッセージ配信をサポートする場合、メッセージ配信が順序なしであるかどうかを示すために高位ビットを使用する必要があることに注意してください.  

最初に、次の値を登録する必要があります. 

   +------------------------------------------------+------+-----------+
   | Name                                           | Type | Reference |
   +------------------------------------------------+------+-----------+
   | DATA_CHANNEL_RELIABLE                          | 0x00 | [RFCXXXX] |
   | DATA_CHANNEL_RELIABLE_UNORDERED                | 0x80 | [RFCXXXX] |
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT           | 0x01 | [RFCXXXX] |
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED | 0x81 | [RFCXXXX] |
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED            | 0x02 | [RFCXXXX] |
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED  | 0x82 | [RFCXXXX] |
   | Reserved                                       | 0x7f | [RFCXXXX] |
   | Reserved                                       | 0xff | [RFCXXXX] |
   | Unassigned                                     | rest |           |
   +------------------------------------------------+------+-----------+

値0x7fと0xffは将来の拡張性のために予約されていることに注意してください. 可能な値の範囲は0x00〜0xffです. 

9.謝辞 

著者は、Harald Alvestrand、Richard Barnes、Adam Bergkvist、Spencer Dawkins、Barry Dingle、Stefan Haekansson、Cullen Jennings、Paul Kyzivat、Doug Leonard、Alexey Melnikov、Pete Resnick、Irene Ruengeler、Randall Stewart、Peter Thatcher、Martin Thompsonに感謝しますJustin Uberti、および他の多くの貴重なコメント 

10.参照 

10.1. 規範的参考文献

[RFC2119] Bradner、S.、「要求レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月.  

[RFC3629] Yergeau、F. 、「UTF-8、ISO 10646の変換フォーマット」、STD 63、RFC 3629、2003年11月.  

[RFC4347] Rescorla、E. およびN. Modadugu、「データグラムトランスポート層セキュリティ」、RFC 4347、2006年4月.  

[RFC4960]スチュワート、R. 、「ストリーム制御伝送プロトコル」、RFC 4960、2007年9月.  

[RFC5226] Narten、T. 、およびH. Alvestrand、「RFCでIANA考慮事項セクションを記述するためのガイドライン」、BCP 26、RFC 5226、2008年5月.  

[RFC6347] Rescorla、E.、N. Modadugu、「データグラムトランスポートレイヤーセキュリティバージョン1.2」、RFC 6347、2012年1月.  

[ID.ietf-tsvwg-sctp-dtls-encaps] Tuexen、M.、Stewart、R.、Jesup、R. 、およびS. Loreto、「SCTPパケットのDTLSカプセル化」、draft-ietf-tsvwg-sctp- dtls -encaps-07（作業中）、2014年12月.  

[ID.ietf-rtcweb-data-channel] Jesup、R.、Loreto、S. 、およびM. Tuexen、「WebRTC Data Channels」、draft-ietf-rtcweb-data-channel-12（作業中）、9月2014年.  

10.2. 情報の参照

[RFC6455] Fette、I. およびA. Melnikov、「WebSocketプロトコル」、RFC 6455、2011年12月.  

[ID.ietf-rtcweb-security] Rescorla、E. 、「WebRTCのセキュリティに関する考慮事項」、draft-ietf-rtcweb-security-07（作業中）、2014年7月.  

[ID.ietf-rtcweb-security-arch] Rescorla、E. 、「WebRTC Security Architecture」、draft-ietf-rtcweb-security-arch-10（作業中）、2014年7月.  

著者のアドレス 

Randell Jesup Mozilla US 

メール：randell-ietf@jesup.org 



サルバトーレロレトエリクソンヒルサランティ11ヨルバス02420 FI 

メール：salvatore.loreto@ericsson.com 



Michael Tuexen Muenster応用科学大学Stegerwaldstrasse 39 Steinfurt 48565 DE 

メール：tuexen@fh-muenster.de 


