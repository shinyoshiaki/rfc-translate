RFCトランス
個人情報保護方針
連絡先
イチジク
@ tex2e
8832
RFC8832-WebRTCデータチャネル確立プロトコル日本語訳
URL：https：//tools.ietf.org/html/rfc8832
パッケージ：RFC8832-WebRTCデータチャネル確立プロトコル
翻訳：自動翻訳
インターネットエンジニアリングタスクフォース（IETF）R。Jesup
コメントのリクエスト：8832 Mozilla
カテゴリ：標準化過程S.ロレート
ISSN：2070-1721エリクソン
                                                                M.Tüxen
                                         ミュンスター大学Applの。科学
                                                            2021年1月
        
WebRTCデータチャネル確立プロトコル

概要

WebRTCフレームワークは、2つのピアのWebブラウザー間でオーディオ、ビデオ、およびデータを使用する直接インタラクティブなリッチ通信のプロトコルサポートを指定します。このドキュメントでは、ピア間で対称データチャネルを確立するための簡単なプロトコルを指定します。双方向ハンドシェイクを使用し、ハンドシェイクが完了するのを待たずにユーザーデータを送信できます。

このメモのステータス

これはインターネット標準化過程の文書です。

このドキュメントは、インターネット技術特別調査委員会（IETF）の製品です。これは、IETFコミュニティのコンセンサスを表しています。パブリックレビューを受け、Internet Engineering Steering Group（IESG）による公開が承認されました。インターネット標準の詳細については、RFC7841のセクション2を参照してください。

このドキュメントの現在のステータス、正誤表、およびフィードバックの提供方法に関する情報は、https：//www.rfc-editor.org/info/rfc8832で入手できます。

著作権表示

Copyright（c）2021 IETFTrustおよびドキュメントの作成者として識別された人物。全著作権所有。

このドキュメントは、このドキュメントの発行日に有効なBCP 78およびIETFドキュメントに関連するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象となります。これらのドキュメントは、このドキュメントに関するお客様の権利と制限について説明しているため、注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、Trust LegalProvisionsのセクション4.eで説明されているSimplifiedBSD Licenseテキストが含まれている必要があり、Simplified BSDLicenseで説明されているように保証なしで提供されます。

目次

1.はじめに2.規則3.用語4.プロトコルの概要5.メッセージ形式5.1。 DATA_CHANNEL_OPENメッセージ5.2。 DATA_CHANNEL_ACKメッセージ6.手順7.セキュリティに関する考慮事項8.IANAに関する考慮事項8.1。 SCTPペイロードプロトコル識別子8.2。 DCEP8.2.1の新しいスタンドアロンレジストリ。新しいメッセージタイプレジストリ8.2.2。新しいチャネルタイプレジストリ9。参照9.1。規範的参考文献9.2。有益な参考文献謝辞著者のアドレス

1.はじめに
データチャネル確立プロトコル（DCEP）は、WebRTCデータチャネルコンテキスト[RFC8831]で、対称データチャネルを開くための単純な帯域内方式を提供するように設計されています。 [RFC8831]で説明されているように、このプロトコルは、Datagram Transport Layer Security（DTLS）（[RFC8261]で説明）にカプセル化されたStream Control Transmission Protocol（SCTP）[RFC4960]を使用します。これにより、DCEPは、SCTPおよびDTLSのすでに標準化されたトランスポートおよびセキュリティ機能の恩恵を受けることができます。 DTLS1.0は[RFC4347]で定義されています。現在の最新バージョンであるDTLS1.2は、[RFC6347]で定義されています。今後のバージョンであるDTLS1.3は、[TLS-DTLS13]で定義されています。

2.コンベンション
キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONAL」 「このドキュメントでは、BCP？14 [RFC2119] [RFC8174]で説明されているように、ここに示すように、すべて大文字で表示される場合にのみ解釈されます。

3.用語
このドキュメントでは、次の用語を使用しています。

アソシエーション：SCTPアソシエーション。

ストリーム：SCTPアソシエーションの単方向ストリーム。これは、SCTPストリーム識別子（0-65534）によって一意に識別されます。注：SCTPストリームID 65535は、SCTP INITおよびINIT-ACKチャンクのために予約されており、最大65535ストリーム（0〜65534）のみをネゴシエートできます。

ストリーム識別子：ストリームを一意に識別するSCTPストリーム識別子。

データチャネル：同じストリーム識別子を持つ2つのストリーム（各方向に1つ）は、一緒に管理されます。

4.プロトコルの概要
データチャネル確立プロトコルは、一貫性のあるプロパティセットを使用して、SCTPアソシエーションを介して双方向データチャネルを確立するためのシンプルでオーバーヘッドの少ない方法です。

一貫性のあるプロパティのセットは次のとおりです。

*信頼できるまたは信頼できないメッセージ送信。信頼性の低い送信の場合、同じレベルの信頼性の欠如が使用されます。

*順不同または順不同のメッセージ配信。

*データチャネルの優先度。

*データチャネルのオプションのラベル。

*データチャネルのオプションのプロトコル。

*ストリーム。

このプロトコルは、双方向ハンドシェイクを使用してデータチャネルを開きます。ハンドシェイクは、同じストリーム識別子を持つ1つの着信ストリームと1つの発信ストリームを、単一の双方向データチャネルにペアリングします。データチャネルのオープンを開始するピアは、対応する着信ストリームと発信ストリームが使用されていないストリーム識別子を選択し、発信ストリームでDATA_CHANNEL_OPENメッセージを送信します。ピアは、対応する発信ストリームでDATA_CHANNEL_ACKメッセージで応答します。次に、データチャネルが開きます。 DCEPメッセージは、データチャネルに属するユーザーメッセージと同じストリームで送信されます。 DCEPは特定のPPIDを使用するため、逆多重化はSCTPペイロードプロトコル識別子（PPID）に基づいています。

|注：開始側は、|の前にユーザーメッセージを送信できます（MAY）。 DATA_CHANNEL_ACKを受信します。

両側が同じストリーム識別子でデータチャネルを開こうとする衝突を回避するために、DATA_CHANNEL_OPENメッセージを送信するとき、それぞれの側は偶数または奇数のストリーム識別子を持つストリームを使用する必要があります。 SCTP over DTLS [RFC8261]を使用する場合、どちらの側が奇数または偶数を使用するかを決定するために使用される方法は、基礎となるDTLS接続の役割に基づいています。 DTLSサーバーとして機能する側は、奇数のストリーム識別子を持つストリームを使用する必要があります。

|注：ラベルの一意性を保証する試みはありません。 |両側が同時に「x」というラベルの付いたデータチャネルを開く場合、| 「x」というラベルの付いた2つのデータチャネルがあります。ストリームペア、奇数ペアに1つ。

プロトコルフィールドの目的は、[RFC6455]で定義されている「WebSocketサブプロトコル名レジストリ」からIANA登録文字列を使用して渡されるユーザーデータを識別することにより、アプリケーション間の相互運用（「フェデレーション」）を容易にすることです。このフィールドは、複数のタイプのデータチャネルを作成する可能性のある同種のアプリケーションに役立つ場合があります。プロトコルフィールドの一意性を保証する試みはないことに注意してください。

5.メッセージフォーマット
すべてのDCEPメッセージは、メッセージのタイプを示す「メッセージタイプ」と呼ばれる1バイトのフィールドで始まります。対応する値はIANAによって管理されます（セクション8.2.1を参照）。

5.1。 DATA_CHANNEL_OPENメッセージ
このメッセージは、最初はユーザーメッセージに使用されるストリームのデータチャネルを使用して送信されます。

      0 1 2 3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     |メッセージタイプ|チャネルタイプ|優先度|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     |信頼性パラメータ|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     |ラベルの長さ|プロトコルの長さ|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     \ /
     |ラベル|
     / \
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     \ /
     |プロトコル|
     / \
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
        
メッセージタイプ：1バイト（符号なし整数）このフィールドは、DATA_CHANNEL_OPENメッセージのIANA定義のメッセージタイプを保持します。セクション8.2.1で指定されているように、このフィールドの値は0x03です。

チャネルタイプ：1バイト（符号なし整数）このフィールドは、開くデータチャネルのタイプを指定します。値はIANAによって管理されます（セクション8.2.2を参照）。

DATA_CHANNEL_RELIABLE（0x00）：データチャネルは、信頼性の高い順序どおりの双方向通信を提供します。

DATA_CHANNEL_RELIABLE_UNORDERED（0x80）：データチャネルは、信頼性の高い順序付けられていない双方向通信を提供します。

DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT（0x01）：データチャネルは、部分的に信頼できる順序どおりの双方向通信を提供します。ユーザーメッセージは、信頼性パラメーターで指定された回数を超えて再送信されることはありません。

DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED（0x81）：データチャネルは、部分的に信頼できる順序付けられていない双方向通信を提供します。ユーザーメッセージは、信頼性パラメーターで指定された回数を超えて再送信されることはありません。

DATA_CHANNEL_PARTIAL_RELIABLE_TIMED（0x02）：データチャネルは、部分的に信頼できる順序どおりの双方向通信を提供します。信頼性パラメータでミリ秒単位で指定された有効期間が経過すると、ユーザーメッセージが送信または再送信されない場合があります。この存続期間は、ユーザーメッセージをプロトコルスタックに提供するときに始まります。

DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED（0x82）：データチャネルは、部分的に信頼できる順序付けられていない双方向通信を提供します。信頼性パラメータでミリ秒単位で指定された有効期間が経過すると、ユーザーメッセージが送信または再送信されない場合があります。この存続期間は、ユーザーメッセージをプロトコルスタックに提供するときに始まります。

優先度：2バイト（符号なし整数）[RFC8831]で説明されているデータチャネルの優先度。

信頼性パラメータ：4バイト（符号なし整数）信頼性の高いデータチャネルの場合、このフィールドは送信側で0に設定する必要があり、受信側では無視する必要があります。再送信回数が制限された部分的に信頼できるデータチャネルが使用されている場合、このフィールドは再送信回数を指定します。ライフタイムが制限された部分的に信頼できるデータチャネルが使用されている場合、このフィールドは最大ライフタイムをミリ秒単位で指定します。次の表はこれを要約したものです。

     + ================================================ + ============= +
     |チャネルタイプ|信頼性|
     | |パラメータ|
     + ================================================ + ============= +
     | DATA_CHANNEL_RELIABLE |無視されます|
     + ------------------------------------------------ + ------------- +
     | DATA_CHANNEL_RELIABLE_UNORDERED |無視されます|
     + ------------------------------------------------ + ------------- +
     | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT | |の数
     | | RTX |
     + ------------------------------------------------ + ------------- +
     | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED | |の数
     | | RTX |
     + ------------------------------------------------ + ------------- +
     | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED |の生涯|
     | | ms |
     + ------------------------------------------------ + ------------- +
     | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED |の生涯|
     | | ms |
     + ------------------------------------------------ + ------------- +
        
表1

ラベルの長さ：2バイト（符号なし整数）バイト単位のラベルフィールドの長さ。

プロトコルの長さ：2バイト（符号なし整数）プロトコルフィールドの長さ（バイト単位）。

ラベル：可変長（文字のシーケンス）[RFC3629]で指定されている、UTF-8でエンコードされた文字列としてのデータチャネルの名前。これは空の文字列である可能性があります。

プロトコル：可変長（文字のシーケンス）これが空の文字列の場合、プロトコルは指定されていません。空でない文字列の場合は、[RFC6455]で作成した「WebSocketサブプロトコル名レジストリ」に登録されているプロトコルを指定します。この文字列は、[RFC3629]で指定されているように、UTF-8でエンコードされています。

5.2。 DATA_CHANNEL_ACKメッセージ
このメッセージは、DATA_CHANNEL_OPEN_RESPONSEメッセージへの応答として送信されます。データチャネルを使用してユーザーメッセージに使用されるストリームで送信されます。このメッセージの受信は、オープナーにデータチャネルセットアップハンドシェイクが完了したことを通知します。

      0 1 2 3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- +-+-+-+-+-+-+-+
     |メッセージタイプ|
     +-+-+-+-+-+-+-+-+
        
メッセージタイプ：1バイト（符号なし整数）このフィールドは、DATA_CHANNEL_ACKメッセージのIANA定義のメッセージタイプを保持します。セクション8.2.1で指定されているように、このフィールドの値は0x02です。

6.手順
すべてのDCEPメッセージは、注文された配信と信頼性の高い送信を使用して送信する必要があります。それらは、対応するデータチャネルに属するユーザーメッセージと同じ発信ストリームで送信する必要があります。多重化と逆多重化は、SCTPPPIDを使用して実行されます。したがって、DCEPメッセージは、データチャネル確立プロトコルに割り当てられたPPIDとともに送信する必要があります（セクション8.1を参照）。他のメッセージは、このPPIDを使用して送信してはなりません。

データチャネルのオープンを開始するピアは、対応する着信ストリームと発信ストリームが使用されていないストリーム識別子を選択します。サイドがDTLSクライアントとして機能している場合は、偶数のストリーム識別子を選択する必要があります。サイドがDTLSサーバーとして機能している場合は、奇数を選択する必要があります。開始ピアは、DATA_CHANNEL_OPENメッセージのパラメーターを入力し、選択したストリームで送信します。

未使用のストリームでDATA_CHANNEL_OPENメッセージが受信され、ストリームIDがピアの役割に対応し、DATA_CHANNEL_OPENメッセージのすべてのパラメーターが有効である場合、対応するDATA_CHANNEL_ACKメッセージが同じストリームIDでストリームに送信されます。 DATA_CHANNEL_OPENメッセージがで受信されました。

DATA_CHANNEL_OPENメッセージが上記の条件を満たさない場合、受信者は[RFC8831]で説明されている手順を使用して、対応するデータチャネルを閉じなければならず、受信したメッセージに応答してDATA_CHANNEL_ACKメッセージを送信してはなりません。これは、たとえば、DATA_CHANNEL_OPENメッセージがすでに使用されているストリームで受信された場合、DATA_CHANNEL_OPENメッセージ内のパラメーターに問題がある場合、奇数/偶数ルールに違反した場合、またはDATA_CHANNEL_OPENメッセージ自体が整形式でない場合に発生する可能性があります。したがって、DATA_CHANNEL_ACKメッセージが受信されていないストリームのSCTPストリームリセット要求を受信すると、対応するDATA_CHANNEL_OPENメッセージの送信者にデータチャネル設定手順の失敗が示されます。対応する発信ストリームも正常にリセットされ、ピアによって開始されたデータチャネルのクローズが完了した後、新しいDATA_CHANNEL_OPENメッセージをストリームで送信できます。

DATA_CHANNEL_OPENメッセージが送信された後、そのメッセージの送信者は、対応するDATA_CHANNEL_ACKメッセージの受信を待たずに、ユーザーデータを含むメッセージの送信を開始してもよい[MAY]。ただし、DATA_CHANNEL_ACKメッセージまたはその他のメッセージがデータチャネルで受信される前に、データチャネルが順序付けられているかどうかに関係なく、ユーザーデータを含み、このデータチャネルに属する他のすべてのメッセージを順序付けて送信する必要があります。 DATA_CHANNEL_ACKまたはその他のメッセージがデータチャネルで受信された後、ユーザーデータを含むメッセージは、順序付けられたデータチャネルで順序付けて送信する必要があり、順序付けされていないデータチャネルで順序付けせずに送信する必要があります。したがって、未使用のストリームでユーザーデータを含むメッセージを受信すると、エラーを示します。その場合、[RFC8831]で説明されているように、対応するデータチャネルを閉じる必要があります。

7.セキュリティに関する考慮事項
DATA_CHANNEL_OPENメッセージには、プロトコルとラベルの2つの可変長フィールドが含まれています。受信者は、これらのフィールドの最大長が65535バイトであるDATA_CHANNEL_OPENメッセージを受信する準備をする必要があります。一貫性のない長さのフィールドの使用、不明なパラメーター値の使用、奇数/偶数ルールへの違反などのエラーケースも、対応するデータチャネルを閉じることによって処理する必要があります。ピアが最大数のデータチャネルを開くためのエンドポイントも準備する必要があります。

このプロトコルは、プライバシー、整合性、または認証を提供しません。これらすべてを含むプロトコルスイートの一部として使用する必要があります。このようなプロトコルスイートは[RFC8261]で指定されています。

一般的な考慮事項については、[RFC8826]および[RFC8827]を参照してください。

8.IANAの考慮事項
IANAは、既存のSCTP PPID割り当て（セクション8.1）の参照を更新し、2つの新しい登録テーブル（セクション8.2.1および8.2.2）を含むDCEP（セクション8.2）の独自のURLを使用して新しいスタンドアロンレジストリを作成しました。

8.1。 SCTPペイロードプロトコル識別子
このドキュメントでは、以前に「WebRTCコントロール」として登録されたSCTPペイロードプロトコル識別子（PPID）を使用しています。 [RFC4960]は、この識別子が割り当てられた「SCTPペイロードプロトコル識別子」レジストリを作成しました。 IANAは、PPID名を「WebRTCControl」から「WebRTCDCEP」に更新し、このドキュメントを指すように参照を更新しました。対応する日付が保持されています。

したがって、この割り当ては次のように表示されます。

           + ============= + =========== + =========== + =========== = +
           |値| SCTP PPID |リファレンス|日付|
           + ============= + =========== + =========== + =========== = +
           | WebRTC DCEP | 50 | RFC 8832 | 2013-09-20 |
           + ------------- + ----------- + ----------- + ----------- -+
        
表2

8.2。 DCEPの新しいスタンドアロンレジストリ
IANAは、「データチャネル確立プロトコル（DCEP）パラメータ」レジストリを作成しました。これには、セクション8.2.1および8.2.2で提供される2つのテーブルが含まれています。

8.2.1。新しいメッセージタイプレジストリ
IANAは、DCEPメッセージの1バイトの「メッセージタイプ」フィールドを管理するために、DCEPの「メッセージタイプ」レジストリを作成しました（セクション5を参照）。この登録テーブルは、セクション8.2で説明されているレジストリのサブレジストリです。

新しいメッセージタイプの割り当ては、[RFC8126]で定義されているRFCRequiredアクションを介して行われます。新しいメッセージタイプのドキュメントには、次の情報が含まれている必要があります。

1.新しいメッセージタイプの名前。

2.DCEP内で各メッセージタイプがどのように使用されるかについての詳細な手順の説明。

初期登録は次のとおりです。

               + =================== + =========== + =========== +
               |名前|タイプ|リファレンス|
               + =================== + =========== + =========== +
               |予約済み| 0x00 | RFC 8832 |
               + ------------------- + ----------- + ----------- +
               |予約済み| 0x01 | RFC 8832 |
               + ------------------- + ----------- + ----------- +
               | DATA_CHANNEL_ACK | 0x02 | RFC 8832 |
               + ------------------- + ----------- + ----------- +
               | DATA_CHANNEL_OPEN | 0x03 | RFC 8832 |
               + ------------------- + ----------- + ----------- +
               |未割り当て| 0x04-0xfe | |
               + ------------------- + ----------- + ----------- +
               |予約済み| 0xff | RFC 8832 |
               + ------------------- + ----------- + ----------- +
        
表3

値0x00および0x01は、ドキュメントのドラフトバージョンで使用されているため、相互運用性の問題を回避するために予約されていることに注意してください。値0xffは、将来の拡張性のために予約されています。可能な値の範囲は0x00から0xffです。

8.2.2。新しいチャネルタイプレジストリ
IANAは、DATA_CHANNEL_OPENメッセージの1バイトの「チャネルタイプ」フィールドを管理するために、DCEPの「チャネルタイプ」レジストリを作成しました（セクション5.1を参照）。この登録テーブルは、セクション8.2で説明されているレジストリ内のサブレジストリです。

新しいメッセージタイプの割り当ては、[RFC8126]で定義されているRFCRequiredアクションを介して行われます。新しいチャネルタイプのドキュメントには、次の情報が含まれている必要があります。

1.新しいチャネルタイプの名前。

2.この新しいチャネルタイプを使用したデータチャネルのユーザーメッセージ処理の詳細な手順の説明。

新しいチャネルタイプが順序付きおよび順序なしのメッセージ配信をサポートする場合、メッセージ配信が順序なしであるかどうかを示すために上位ビットを使用する必要があります。

初期登録は次のとおりです。

   + ================================================ + ====== + =========== +
   |名前|タイプ|リファレンス|
   + ================================================ + ====== + =========== +
   | DATA_CHANNEL_RELIABLE | 0x00 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   | DATA_CHANNEL_RELIABLE_UNORDERED | 0x80 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT | 0x01 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   | DATA_CHANNEL_PARTIAL_RELIABLE_REXMIT_UNORDERED | 0x81 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED | 0x02 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   | DATA_CHANNEL_PARTIAL_RELIABLE_TIMED_UNORDERED | 0x82 | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   |予約済み| 0x7f | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   |予約済み| 0xff | RFC 8832 |
   + ------------------------------------------------ + ------ + ----------- +
   |未割り当て|残り| |
   + ------------------------------------------------ + ------ + ----------- +
        
表4

値0x7fおよび0xffは、将来の拡張性のために予約されています。可能な値の範囲は0x00から0xffです。

9.参考文献
9.1。規範的参考文献
[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>。

[RFC8174] Leiba、B。、「RFC 2119キーワードにおける大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>。

[RFC3629] Yergeau、F。、「UTF-8、ISO 10646の変換形式」、STD 63、RFC 3629、DOI 10.17487 / RFC3629、2003年11月、<https://www.rfc-editor.org/info/ rfc3629>。

[RFC4960] Stewart、R.、Ed。、 "Stream Control Transmission Protocol"、RFC 4960、DOI 10.17487 / RFC4960、2007年9月、<https://www.rfc-editor.org/info/rfc4960>。

[RFC8126] Cotton、M.、Leiba、B。、およびT. Narten、「RFCでIANA考慮事項セクションを作成するためのガイドライン」、BCP 26、RFC 8126、DOI 10.17487 / RFC8126、2017年6月、<https：// www .rfc-editor.org / info / rfc8126>。

[RFC8261] Tuexen、M.、Stewart、R.、Jesup、R。、およびS. Loreto、「SCTPパケットのデータグラムトランスポート層セキュリティ（DTLS）カプセル化」、RFC 8261、DOI 10.17487 / RFC8261、2017年11月、<https ：//www.rfc-editor.org/info/rfc8261>。

[RFC8831] Jesup、R.、Loreto、S。、およびM.Tüxen、「WebRTC Data Channels」、RFC 8831、DOI 10.17487 / RFC8831、2021年1月、<https://www.rfc-editor.org/info/ rfc8831>。

9.2。有益な参考文献
[RFC4347] Rescorla、E。およびN. Modadugu、「Datagram Transport Layer Security」、RFC 4347、DOI 10.17487 / RFC4347、2006年4月、<https://www.rfc-editor.org/info/rfc4347>。

[RFC6347] Rescorla、E。およびN. Modadugu、「Datagram Transport Layer Security Version 1.2」、RFC 6347、DOI 10.17487 / RFC6347、2012年1月、<https://www.rfc-editor.org/info/rfc6347>。

[RFC6455] Fette、I。およびA. Melnikov、「The WebSocket Protocol」、RFC 6455、DOI 10.17487 / RFC6455、2011年12月、<https://www.rfc-editor.org/info/rfc6455>。

[RFC8826] Rescorla、E。、「WebRTCのセキュリティに関する考慮事項」、RFC 8826、DOI 10.17487 / RFC8826、2021年1月、<https://www.rfc-editor.org/info/rfc8826>。

[RFC8827] Rescorla、E。、「WebRTC Security Architecture」、RFC 8827、DOI 10.17487 / RFC8827、2021年1月、<https://www.rfc-editor.org/info/rfc8827>。

[TLS-DTLS13] Rescorla、E.、Tschofenig、H。、およびN. Modadugu、「データグラムトランスポート層セキュリティ（DTLS）プロトコルバージョン1.3」、進行中の作業、インターネットドラフト、draft-ietf-tls-dtls13- 39、2020年11月2日、<https://tools.ietf.org/html/draft-ietf-tls-dtls13-39>。

謝辞

著者は、Harald Alvestrand、Richard Barnes、Adam Bergkvist、Spencer Dawkins、Barry Dingle、StefanHåkansson、Cullen Jennings、Paul Kyzivat、Doug Leonard、Alexey Melnikov、Pete Resnick、IreneRüngeler、Randall Stewart、Peter Thatcher、MartinThomsonに感謝します。 Justin Uberti、そして他の多くの人々の貴重なコメント。

著者の住所

Randell JesupMozillaアメリカ合衆国

   Eメール：randell-ietf@jesup.org
        
サルヴァトーレロレートエリクソンヒルサランティ11FI-02420Jorvasフィンランド

   Eメール：salvatore.loreto@ericsson.com
        
ミヒャエルトゥクセンミュンスター応用科学大学Stegerwaldstrasse3948565シュタインフルトドイツ

   Eメール：tuexen@fh-muenster.de
        